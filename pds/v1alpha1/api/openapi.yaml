openapi: 3.0.1
info:
  contact: {}
  description: Portworx Data Services API Server
  title: PDS API
servers:
- url: /
paths:
  /api/account-role-invitations/{id}:
    delete:
      description: Removes a single AccountRoleInvitation
      parameters:
      - description: AccountRoleInvitation ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete AccountRoleInvitation
      tags:
      - AccountsRoleInvitations
    patch:
      description: Patches AccountRoleInvitation role_name
      parameters:
      - description: AccountRoleInvitation ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PatchAccountRoleInvitationRequest'
        description: Object with patched role name
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Patch AccountRoleInvitation role_name
      tags:
      - AccountsRoleInvitations
      x-codegen-request-body-name: body
  /api/accounts:
    get:
      description: Lists Accounts.
      parameters:
      - description: 'A given Accounts attribute to sort results by (one of: id, name,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Accounts id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Accounts name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Account'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Accounts
      tags:
      - Accounts
    post:
      description: Creates a new Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createAccountRequest'
        description: Request body containing name of the account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Account'
          description: The created Account will be returned
      security:
      - ApiKeyAuth: []
      summary: Create Account
      tags:
      - Accounts
      x-codegen-request-body-name: body
  /api/accounts/{id}:
    get:
      description: Fetches a single Account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Account'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Account
      tags:
      - Accounts
  /api/accounts/{id}/account-role-invitations:
    get:
      description: Lists Account Role Invitations
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given User attribute to sort results by (one of: id, email,
          role_name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by invitation id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by User email
        in: query
        name: email
        schema:
          type: string
      - description: Filter results by assigned role name
        in: query
        name: role_name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_AccountRoleInvitation'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Account Role Invitations
      tags:
      - Accounts
  /api/accounts/{id}/dns-details:
    put:
      description: Update DNS details for desired account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.DNSDetails'
        description: Request body containing a new DNS details
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update DNS Details
      tags:
      - Accounts DNS
      x-codegen-request-body-name: body
  /api/accounts/{id}/eula:
    put:
      description: Accept a specific EULA version
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.acceptEULARequest'
        description: Request body containing the version of the EULA.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Accept EULA
      tags:
      - Accounts
      x-codegen-request-body-name: Body
  /api/accounts/{id}/global-config:
    put:
      description: Modify AccountGlobalConfig for this Account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.updateGlobalConfigRequest'
        description: Request body containing the global config values. Empty values
          are ignored.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update AccountGlobalConfig
      tags:
      - Accounts
      x-codegen-request-body-name: Body
  /api/accounts/{id}/iam:
    get:
      description: Lists IAM records for an account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given IAM attribute to sort results by (one of: account_id,
          actor_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by IAM actor id
        in: query
        name: actor_id
        schema:
          type: string
      - description: Filter results by IAM actor type
        in: query
        name: actor_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/models.IAM'
                type: array
          description: OK
        "400":
          content: {}
          description: The request path param isn't a valid uuid.
      security:
      - ApiKeyAuth: []
      summary: List IAM
      tags:
      - IAM
    post:
      description: Creates a new IAM rolebinding
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.IAMRequest'
        description: Request body contains actor ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.IAM'
          description: The created IAM will be returned
      security:
      - ApiKeyAuth: []
      summary: Create IAM
      tags:
      - IAM
      x-codegen-request-body-name: body
    put:
      description: Updates a IAM rolebinding
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.IAMRequest'
        description: Request body contains actor ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.IAM'
          description: The updated IAM will be returned
      security:
      - ApiKeyAuth: []
      summary: Update IAM
      tags:
      - IAM
      x-codegen-request-body-name: body
  /api/accounts/{id}/iam/{actor-id}:
    delete:
      description: Removes a single AccountIAM
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Actor ID (must be valid UUID)
        in: path
        name: actor-id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete IAM
      tags:
      - IAM
    get:
      description: Fetches an IAM record
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Actor ID (must be valid UUID)
        in: path
        name: actor-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.IAM'
          description: OK
        "400":
          content: {}
          description: The request path params aren't a valid uuid.
        "404":
          content: {}
          description: The requested data is not found.
      security:
      - ApiKeyAuth: []
      summary: Get IAM
      tags:
      - IAM
  /api/accounts/{id}/invitations:
    post:
      description: Adds role binding to existing user or creates invitation if user
        does not exist.
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.InvitationAccountRequest'
        description: Request body containing the invitation details.
        required: true
      responses:
        "200":
          content: {}
          description: The account role binding has been created.
        "400":
          content: {}
          description: The request doesn't contain valid invitation details.
        "404":
          content: {}
          description: The user with specified email doesn't exist.
        "422":
          content: {}
          description: The user is already assigned to this account.
      security:
      - ApiKeyAuth: []
      summary: Create Invitation
      tags:
      - AccountRoleBindings
      x-codegen-request-body-name: Body
  /api/accounts/{id}/maas-details:
    get:
      description: Returns MAAS details for desired account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.MAASDetails'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get MAAS details
      tags:
      - Accounts MAASDetails
    put:
      description: Updates MAAS details for desired account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update MAAS details
      tags:
      - Accounts MAASDetails
  /api/accounts/{id}/role-bindings:
    delete:
      description: Removes a single AccountRoleBinding
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.DeleteRoleBindingRequest'
        description: Request body containing the account role binding
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete AccountRoleBinding
      tags:
      - AccountRoleBindings
      x-codegen-request-body-name: body
    get:
      description: Lists AccountRoleBinding
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given AccountRoleBinding attribute to sort results by (one
          of: role_name, actor_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by AccountRoleBinding assigned role name
        in: query
        name: role_name
        schema:
          type: string
      - description: Filter results by AccountRoleBinding actor id
        in: query
        name: actor_id
        schema:
          type: string
      - description: Filter results by AccountRoleBinding actor type
        in: query
        name: actor_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedAccountRoleBindings'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List AccountRoleBinding
      tags:
      - AccountRoleBindings
    put:
      description: Creates a new AccountRoleBinding, or updates role_name if binding
        for (actor_id, actor_type) already exists.
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PutLegacyBindingRequest'
        description: Request body containing the account role binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.LegacyAccountBinding'
          description: The created AccountRoleBinding will be returned
      security:
      - ApiKeyAuth: []
      summary: Create/Update AccountRoleBinding
      tags:
      - AccountRoleBindings
      x-codegen-request-body-name: body
  /api/accounts/{id}/service-identity:
    get:
      description: Lists all ServiceIdentity for an account
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Service Identity attribute to sort results by (one of:
          id, name, created_at, created_by)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by service identity id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by created_by
        in: query
        name: created_by
        schema:
          type: string
      - description: Filter results by client_id
        in: query
        name: client_id
        schema:
          type: string
      - description: Filter results by enabled
        in: query
        name: enabled
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_ServiceIdentity'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Service Identity
      tags:
      - ServiceIdentity
    post:
      description: Create a Service Identity for programmatic access to pds
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.ServiceIdentityRequest'
        description: Request body containing the service identity details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ServiceIdentityWithToken'
          description: OK
        "400":
          content: {}
          description: The request is not valid.
        "404":
          content: {}
          description: The account with specified id doesn't exist.
        "409":
          content: {}
          description: The service identity is already created.
      security:
      - ApiKeyAuth: []
      summary: Create a Service Identity
      tags:
      - ServiceIdentity
      x-codegen-request-body-name: Body
  /api/accounts/{id}/tenants:
    get:
      description: Lists Tenants.
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Tenant attribute to sort results by (one of: id, name,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Tenant id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Tenant name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Tenant'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Account's Tenants
      tags:
      - Tenants
  /api/accounts/{id}/users:
    get:
      description: Lists Account Users
      parameters:
      - description: Account ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given User attribute to sort results by (one of: id, email,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by User id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by User email
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_User'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Account Users
      tags:
      - Accounts
  /api/application-configuration-templates/{id}:
    delete:
      description: Removes a single ApplicationConfigurationTemplate
      parameters:
      - description: ApplicationConfigurationTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete ApplicationConfigurationTemplates
      tags:
      - ApplicationConfigurationTemplates
    get:
      description: Fetches a single ApplicationConfigurationTemplate
      parameters:
      - description: ApplicationConfigurationTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ApplicationConfigurationTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get ApplicationConfigurationTemplate
      tags:
      - ApplicationConfigurationTemplates
    put:
      description: Updates existing ApplicationConfigurationTemplate
      parameters:
      - description: ApplicationConfigurationTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateApplicationConfigurationTemplateRequest'
        description: Request body containing updated template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ApplicationConfigurationTemplate'
          description: The updated application configuration template will be returned
      security:
      - ApiKeyAuth: []
      summary: Update ApplicationConfigurationTemplate
      tags:
      - ApplicationConfigurationTemplates
      x-codegen-request-body-name: body
  /api/authorizer:
    post:
      description: Check if the provided operation is allowed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AuthorizerRequest'
        description: Request body containing the authorizer request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.AuthorizerResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Authorize operation
      tags:
      - Authorizer
      x-codegen-request-body-name: body
  /api/backup-credentials/{id}:
    delete:
      description: Removes a single BackupCredential
      parameters:
      - description: BackupCredentials ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete BackupCredentials
      tags:
      - BackupCredentials
    get:
      description: Fetches a single BackupCredentials
      parameters:
      - description: BackupCredentials ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupCredentials'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get BackupCredentials
      tags:
      - BackupCredentials
    put:
      description: Updates an existing instance of BackupCredentials
      parameters:
      - description: BackupCredentials ID (must be UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.updateBackupCredentialsRequest'
        description: Request body containing the backup credentials config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupCredentials'
          description: The updated BackupCredentials will be returned
      security:
      - ApiKeyAuth: []
      summary: Update BackupCredentials
      tags:
      - BackupCredentials
      x-codegen-request-body-name: body
  /api/backup-credentials/{id}/credentials:
    get:
      description: Get cloud configuration for BackupCredentials
      parameters:
      - description: BackupCredentials ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PartialCredentials'
          description: Cloud configuration for BackupCredentials
      security:
      - ApiKeyAuth: []
      summary: Get cloud configuration for BackupCredentials
      tags:
      - BackupCredentials
  /api/backup-jobs/{id}:
    delete:
      description: Removes a single BackupJob
      parameters:
      - description: BackupJob ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "422":
          content: {}
          description: Deployment Target not healthy, can not process backup job deletion
      security:
      - ApiKeyAuth: []
      summary: Delete BackupJob
      tags:
      - BackupJobs
    get:
      description: Fetches a BackupJob
      parameters:
      - description: BackupJob ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupJob'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get BackupJob
      tags:
      - BackupJobs
    put:
      description: Updates a BackupJob if ID exists, Creates new BackupJob if not
      parameters:
      - description: BackupJob ID (must be UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PutBackupJobRequest'
        description: Request body containing backup job details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupJob'
          description: The upserted BackupJob will be returned
      security:
      - ApiKeyAuth: []
      summary: Upsert BackupJob
      tags:
      - BackupJobs
      x-codegen-request-body-name: body
  /api/backup-jobs/{id}/restore:
    post:
      description: Starts restore of given BackupJob
      parameters:
      - description: BackupJob ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateRestoreRequest'
        description: Request body containing information about required restore
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Restore'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Start Restore
      tags:
      - Restores
      x-codegen-request-body-name: body
  /api/backup-policies/{id}:
    delete:
      description: Removes a single BackupPolicy
      parameters:
      - description: BackupPolicy ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete BackupPolicies
      tags:
      - BackupPolicies
    get:
      description: Fetches a single BackupPolicy
      parameters:
      - description: BackupPolicy ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupPolicy'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get BackupPolicy
      tags:
      - BackupPolicies
    put:
      description: Updates existing BackupPolicy
      parameters:
      - description: BackupPolicy ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateBackupPolicyRequest'
        description: Request body containing updated backup policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupPolicy'
          description: The updated backup policy will be returned
      security:
      - ApiKeyAuth: []
      summary: Update BackupPolicy
      tags:
      - BackupPolicies
      x-codegen-request-body-name: body
  /api/backup-targets/{id}:
    delete:
      description: Removes a single BackupTarget
      parameters:
      - description: BackupTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Delete backup target even if the deletion job fails on any deployment
          targets
        in: query
        name: force
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete BackupTargets
      tags:
      - BackupTargets
    get:
      description: Fetches a single BackupTarget
      parameters:
      - description: BackupTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get BackupTarget
      tags:
      - BackupTargets
    put:
      description: Updates existing BackupTarget
      parameters:
      - description: BackupTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateBackupTargetRequest'
        description: Object with partial update fields
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupTarget'
          description: The updated BackupTarget will be returned
      security:
      - ApiKeyAuth: []
      summary: Update BackupTarget
      tags:
      - BackupTargets
      x-codegen-request-body-name: body
  /api/backup-targets/{id}/backups:
    get:
      description: Lists Backups belonging to the BackupTarget.
      parameters:
      - description: BackupTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Backup attribute to sort results by (one of: id, cluster_resource_name,
          created_at, backup_type, backup_level)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Backup id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Backup cluster_resource_name
        in: query
        name: cluster_resource_name
        schema:
          type: string
      - description: Filter results by Backup state
        in: query
        name: state
        schema:
          type: string
      - description: Filter results by Backup suspend flag
        in: query
        name: suspend
        schema:
          type: string
      - description: 'Filter results by Backup type (one of: adhoc,scheduled)'
        in: query
        name: backup_type
        schema:
          type: string
      - description: 'Filter results by Backup type (one of: snapshot,incremental)'
        in: query
        name: backup_level
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Backup'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List BackupTarget's Backups
      tags:
      - Backups
  /api/backup-targets/{id}/retry:
    post:
      description: Retries to sync failed BackupTargetState
      parameters:
      - description: BackupTargetState ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Retry sync of a BackupTarget
      tags:
      - BackupTargets
  /api/backup-targets/{id}/states:
    get:
      description: Lists BackupTarget's BackupTargetStates
      parameters:
      - description: Backup Target ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: 'A given BackupTargetState attribute to sort results by (one
          of: state, deployment_target_id, backup_target_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by BackupTarget ID
        in: query
        name: backup_target_id
        schema:
          type: string
      - description: Filter results by DeploymentTarget ID
        in: query
        name: deployment_target_id
        schema:
          type: string
      - description: Filter results by state
        in: query
        name: state
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedBackupTargetStates'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List BackupTarget's BackupTargetStates
      tags:
      - BackupTargets
  /api/backups/{id}:
    delete:
      description: Deletes an existing database deployment Backup
      parameters:
      - description: Backup ID (must be a valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to true to only delete the Backup object in the database
          (does not delete any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete Backup
      tags:
      - Backups
    get:
      description: Fetches a single Backup
      parameters:
      - description: Backup ID (must be a valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Backup'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Backup
      tags:
      - Backups
    put:
      description: Updates an existing database Backup
      parameters:
      - description: Backup ID (must be UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to true to only update the Backup object in the database
          (does not create any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.updateBackupRequest'
        description: Request body containing updated backup
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Backup'
          description: The updated Backup will be returned
      security:
      - ApiKeyAuth: []
      summary: Update Backup
      tags:
      - Backups
      x-codegen-request-body-name: body
  /api/backups/{id}/jobs:
    get:
      description: Retrieves a list of BackupJobs associated to this Backup
      parameters:
      - description: Backup ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.ListBackupJobsStatusResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Backup's Jobs
      tags:
      - BackupJobs
  /api/backups/{id}/jobs/{name}:
    delete:
      description: Deletes an existing job for scheduled backups
      parameters:
      - description: Backup ID (must be a valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Backup job name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Set to true to only delete the Backup object in the database
          (does not delete any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete Backup jobs
      tags:
      - Backups
  /api/compatible-versions:
    get:
      description: Lists what versions are compatible for other versions.
      parameters:
      - description: Filter results by data_service_id
        in: query
        name: data_service_id
        schema:
          type: string
      - description: Filter results by version_id
        in: query
        name: version_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.CompatibleVersionsResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List compatible versions
      tags:
      - Versions
  /api/copilot/search:
    post:
      description: Generates a response for database query for different databases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateCopilotSearchRequest'
        description: Request body containing the search config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.CopilotSearchResponse'
          description: The search response will be returned
      security:
      - ApiKeyAuth: []
      summary: Search Database query
      tags:
      - Copilot
      x-codegen-request-body-name: body
  /api/data-services:
    get:
      description: Lists Data Services
      parameters:
      - description: 'A given Data Service attribute to sort results by (one of: id,
          name, short_name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Data Service ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Data Service name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by Data Service short name
        in: query
        name: short_name
        schema:
          type: string
      - description: Filter results based on incremental backup eligibility
        in: query
        name: has_incremental_backup
        schema:
          type: boolean
      - description: Filter results based on vault full backup eligibility
        in: query
        name: has_full_backup
        schema:
          type: boolean
      - description: Filter results based on 'Coming soon' flag
        in: query
        name: coming_soon
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_DataService'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Data Services
      tags:
      - DataServices
  /api/data-services/{id}:
    get:
      description: Fetches a single Data Service
      parameters:
      - description: Data Service ID (must be a valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DataService'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Data Service
      tags:
      - DataServices
  /api/data-services/{id}/versions:
    get:
      description: Lists Versions belonging to the Data Service.
      parameters:
      - description: Data Service ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Version attribute to sort results by (one of: id, name,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Version id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Version's name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by Version's enabled parameter
        in: query
        name: enabled
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Version'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Data Service's Versions
      tags:
      - Versions
  /api/db-tasks/{id}:
    get:
      description: Fetches a database Task
      parameters:
      - description: Task ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Task'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Task
      tags:
      - Tasks
  /api/default-templates/application-configuration:
    get:
      description: Lists ApplicationConfigurationSamples
      parameters:
      - description: Filter results by DataService ID
        in: query
        name: data_service_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.ApplicationConfigurationSamples'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List ApplicationConfigurationSamples
      tags:
      - SampleTemplates
  /api/default-templates/backup-policies:
    get:
      description: Lists BackupPolicySamples
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.BackupPolicySamples'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List BackupPolicySamples
      tags:
      - SampleTemplates
  /api/default-templates/resource-settings:
    get:
      description: Lists ResourceSettingsSamples
      parameters:
      - description: Filter results by DataService ID
        in: query
        name: data_service_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.ResourceSettingsSamples'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List ResourceSettingsSamples
      tags:
      - SampleTemplates
  /api/default-templates/storage-options:
    get:
      description: Lists StorageOptionsSamples
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.StorageOptionsSamples'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List StorageOptionsSamples
      tags:
      - SampleTemplates
  /api/deployment-targets/{id}:
    delete:
      description: Deletes a single DeploymentTarget.
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: DeploymentTarget has been deleted.
        "409":
          content: {}
          description: Delete failed due to some constraints. Check error for more
            details.
      security:
      - ApiKeyAuth: []
      summary: Delete DeploymentTarget
      tags:
      - DeploymentTargets
    get:
      description: Fetches a single DeploymentTarget
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DeploymentTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get DeploymentTarget
      tags:
      - DeploymentTargets
    patch:
      description: Patches existing DeploymentTarget
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PatchDeploymentTargetRequest'
        description: Object with partial update fields (name, tlsRequired, tlsIssuer)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DeploymentTarget'
          description: The patched DeploymentTarget will be returned
      security:
      - ApiKeyAuth: []
      summary: Patch DeploymentTarget
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
    put:
      deprecated: true
      description: Deprecated, use PATCH /api/deployment-targets/{id} instead
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateDeploymentTargetRequest'
        description: Object with partial update fields (name)
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DeploymentTarget'
          description: The updated DeploymentTarget will be returned
      security:
      - ApiKeyAuth: []
      summary: Update DeploymentTarget
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/agent-metadata:
    patch:
      description: Patches the DeploymentTarget agent-metadata
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PatchDeploymentTargetsAgentMetadataRequest'
        description: Object with target cluster ID
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Patch DeploymentTarget agent-metadata
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/config:
    get:
      description: Fetches the config values for a DeploymentTarget
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.TargetClusterConfigResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get configuration values for a DeploymentTarget
      tags:
      - DeploymentTargets
  /api/deployment-targets/{id}/credentials:
    get:
      deprecated: true
      description: Deprecated, use GET /api/deployment-targets/{id}/config instead
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.DeploymentTargetCredentialsResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get join credentials of a DeploymentTarget
      tags:
      - DeploymentTargets
  /api/deployment-targets/{id}/deployment/events:
    post:
      description: Adds one or more k8s generated events from deployments
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateDeploymentEventsRequest'
        description: Request body containing list of events
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Adds k8s generated events for a deployment
      tags:
      - Events
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/events/last-synced-time:
    get:
      description: Gets the timestamp of the latest event for the deployment target
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DeploymentTargetLastSyncedEvent'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get the timestamp of the latest event
      tags:
      - Events
  /api/deployment-targets/{id}/heartbeat:
    post:
      description: Makes control plane aware that DeploymentTarget is still alive
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.DeploymentTargetHeartbeatRequest'
        description: Object with target cluster ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.DeploymentTargetHeartbeatResponse'
          description: Object with heart beat response
      security:
      - ApiKeyAuth: []
      summary: Make DeploymentTarget heart beat request
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/metadata:
    post:
      deprecated: true
      description: |-
        Handles DeploymentTarget metadata created by PDS/Platform agent
        Deprecated, Use PATCH api/deployment-targets/{id}/agent-metadata instead
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.DeploymentTargetMetadataRequest'
        description: Object with target cluster ID
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update DeploymentTarget metadata
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/namespaces:
    get:
      description: List DeploymentTarget's Namespaces
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Namespace attribute to sort results by (one of: id,
          name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Namespace ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Namespace name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by Namespace status
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Namespace'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List DeploymentTarget's Namespaces
      tags:
      - Namespaces
    post:
      description: Creates a new Namespace
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createNamespace'
        description: Request body containing the new namespace
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Namespace'
          description: The created Namespace will be returned
        "400":
          content: {}
          description: Bad request, see response for more details
        "409":
          content: {}
          description: Namespace with the given name already exists
      security:
      - ApiKeyAuth: []
      summary: Create Namespace
      tags:
      - Namespaces
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/operator-heartbeat:
    post:
      description: Makes control plane aware that DeploymentTarget's operator is still
        alive
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.DeploymentTargetHeartbeatRequest'
        description: Object with target cluster ID
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.DeploymentTargetHeartbeatResponse'
          description: Object with heart beat response
      security:
      - ApiKeyAuth: []
      summary: Make DeploymentTarget operator heart beat request
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/operator-metadata:
    patch:
      description: Handles DeploymentTarget metadata created by target operator
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.UpdateOperatorMetadataRequest'
        description: Body with the new metadata.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update target operator metadata
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployment-targets/{id}/update-capabilities:
    post:
      description: Updates the set of capabilities supported by the deployment target
      parameters:
      - description: DeploymentTarget ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.DeploymentTargetCapabilities'
        description: Body containing supported capabilities versions (must be valid
          semver).
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Update target capabilities
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/deployments:
    post:
      description: Creates a new data service Deployment
      parameters:
      - description: Set to true to only create the Deployment object in the database
          (does not create any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateProjectDeploymentRequest'
        description: Request body containing the deployment config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Deployment'
          description: The created Deployment will be returned
      security:
      - ApiKeyAuth: []
      summary: Create Deployment
      tags:
      - Deployments
      x-codegen-request-body-name: body
  /api/deployments/{id}:
    delete:
      description: Deletes an existing database Deployment
      parameters:
      - description: Deployment ID (must be a valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Delete deployment even if the deletion job fails on any deployment
          targets
        in: query
        name: force
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Accepted
      security:
      - ApiKeyAuth: []
      summary: Delete Deployment
      tags:
      - Deployments
    get:
      description: Fetches a data service Deployment
      parameters:
      - description: Deployment ID (either id or deployment_id field)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'Expand the result with related entities (allowed values: deployment_target,
          namespace, deployment_manifest)'
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Deployment'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Deployment
      tags:
      - Deployments
    put:
      description: Updates an existing database Deployment
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to true to only update the Deployment object in the database
          (does not create any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateDeploymentRequest'
        description: Request body containing the updated deployment config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Deployment'
          description: The updated Deployment will be returned
      security:
      - ApiKeyAuth: []
      summary: Update Deployment
      tags:
      - Deployments
      x-codegen-request-body-name: body
  /api/deployments/{id}/backups:
    get:
      description: Lists Backups belonging to the Deployment.
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Backup attribute to sort results by (one of: id, cluster_resource_name,
          created_at, backup_type, backup_level)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Backup id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Backup cluster_resource_name
        in: query
        name: cluster_resource_name
        schema:
          type: string
      - description: Filter results by Backup state
        in: query
        name: state
        schema:
          type: string
      - description: Filter results by Backup suspend flag
        in: query
        name: suspend
        schema:
          type: string
      - description: 'Filter results by Backup type (one of: adhoc,scheduled)'
        in: query
        name: backup_type
        schema:
          type: string
      - description: 'Filter results by Backup type (one of: snapshot,incremental)'
        in: query
        name: backup_level
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Backup'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Deployment's Backups
      tags:
      - Backups
    post:
      description: Creates a new database Backup
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to true to only create the Backup object in the database
          (does not create any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.CreateDeploymentBackup'
        description: Request body containing the backup config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Backup'
          description: The created Backup will be returned
      security:
      - ApiKeyAuth: []
      summary: Create Backup
      tags:
      - Backups
      x-codegen-request-body-name: body
  /api/deployments/{id}/connection-info:
    get:
      description: Returns connection information for the given Deployment
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deployments.ConnectionInfo'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Deployment Connection Information
      tags:
      - Deployments
  /api/deployments/{id}/credentials:
    get:
      description: Returns credentials to authenticate to the given Deployment
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deployments.Credentials'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Deployment Credentials
      tags:
      - Deployments
  /api/deployments/{id}/events:
    get:
      description: Retrieves events of the given Deployment
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/models.DeploymentTargetDeploymentEvent'
                type: array
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Deployment Events
      tags:
      - Events
  /api/deployments/{id}/status:
    get:
      description: Retrieves status information on the given Deployment
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/service.DeploymentStatus'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Deployment Status
      tags:
      - Deployments
  /api/deployments/{id}/update-manifest:
    post:
      description: |-
        Upsert On Deployment Manifest
        Always returns the record with higher timestamp with given DeploymentID
      parameters:
      - description: Deployment ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/requests.UpsertDeploymentManifestRequest'
        description: Body with the Deployment Manifest
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Post DeploymentManifest
      tags:
      - DeploymentManifests
      x-codegen-request-body-name: body
  /api/global-role-bindings:
    delete:
      description: Removes a single GlobalRoleBindings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.DeleteRoleBindingRequest'
        description: Request body containing the global role binding
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete GlobalRoleBinding
      tags:
      - GlobalRoleBindings
      x-codegen-request-body-name: body
    get:
      description: Lists GlobalRoleBindings
      parameters:
      - description: 'A given GlobalRoleBinding attribute to sort results by (one
          of: role_name, actor_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by GlobalRoleBinding assigned role name
        in: query
        name: role_name
        schema:
          type: string
      - description: Filter results by GlobalRoleBinding actor id
        in: query
        name: actor_id
        schema:
          type: string
      - description: Filter results by GlobalRoleBinding actor type
        in: query
        name: actor_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedGlobalRoleBindings'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List GlobalRoleBindings
      tags:
      - GlobalRoleBindings
    put:
      description: Creates a new GlobalRoleBinding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PutLegacyBindingRequest'
        description: Request body containing the global role binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.LegacyGlobalBinding'
          description: The created GlobalRoleBinding will be returned
      security:
      - ApiKeyAuth: []
      summary: Set GlobalRoleBinding
      tags:
      - GlobalRoleBindings
      x-codegen-request-body-name: body
  /api/images:
    get:
      description: Lists Images
      parameters:
      - description: Filter results by data_service_id
        in: query
        name: data_service_id
        schema:
          type: string
      - description: Filter results by version_id
        in: query
        name: version_id
        schema:
          type: string
      - description: Only include the latest image for each version_id.
        in: query
        name: latest
        schema:
          type: boolean
      - description: 'A given Image attribute to sort results by (one of: id, name,
          created_at). Ignored when latest=true.'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less). Ignored when
          latest=true.
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows. Ignored when latest=true.
        in: query
        name: continuation
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Image'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Images
      tags:
      - Images
  /api/images/{id}:
    get:
      description: Fetches a single Image
      parameters:
      - description: Image ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Image'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Image
      tags:
      - Images
  /api/metadata:
    get:
      description: Get metadata about this server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.APIMetadataResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get metadata information
      tags:
      - Metadata
  /api/namespaces/{id}:
    delete:
      description: Deletes a single Namespace.
      parameters:
      - description: Namespace ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Namespace has been deleted.
        "409":
          content: {}
          description: Delete failed due to some constraints. Check error for more
            details.
      security:
      - ApiKeyAuth: []
      summary: Delete Namespace
      tags:
      - Namespaces
    get:
      description: Fetches a single Namespace
      parameters:
      - description: Namespace ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Namespace'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Namespace
      tags:
      - Namespaces
    put:
      description: Update namespace
      parameters:
      - description: Namespace ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateNamespaceRequest'
        description: Object with partial update of fields (status)
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Namespace'
          description: The updated Namespace will be returned
      security:
      - ApiKeyAuth: []
      summary: Update namespace
      tags:
      - Namespaces
      x-codegen-request-body-name: body
  /api/projects/{id}:
    get:
      description: Fetches a single Project
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Project'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Project
      tags:
      - Projects
  /api/projects/{id}/backup-jobs:
    get:
      description: Lists the BackupJobs that belonging to the Project.
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given BackupJob attribute to sort results by (one of: id,
          name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by BackupJob id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by BackupJob deployment_id
        in: query
        name: deployment_id
        schema:
          type: string
      - description: Filter results by BackupJob deployment_target_id
        in: query
        name: deployment_target_id
        schema:
          type: string
      - description: Filter results by BackupJob backup_id
        in: query
        name: backup_id
        schema:
          type: string
      - description: Filter results by BackupJob name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by BackupJob namespace_id
        in: query
        name: namespace_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_BackupJob'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Project's BackupJobs
      tags:
      - BackupJobs
  /api/projects/{id}/backup-targets:
    get:
      description: Lists BackupTargets belonging to the Project
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given BackupTarget attribute to sort results by (one of: id,
          name, type, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by BackupTarget ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by BackupTarget name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by BackupTarget type
        in: query
        name: type
        schema:
          type: string
      - description: Filter results by bucket
        in: query
        name: bucket
        schema:
          type: string
      - description: Filter results by region
        in: query
        name: region
        schema:
          type: string
      - description: Filter results by deployment ID where the backup target is available.
        in: query
        name: deployment_target_id
        schema:
          type: string
      - description: Filter results by BackupCredentials ID
        in: query
        name: backup_credentials_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_BackupTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Project's BackupTargets
      tags:
      - BackupTargets
  /api/projects/{id}/deployment-targets:
    get:
      description: Lists DeploymentTargets belonging to the Project
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given DeploymentTarget attribute to sort results by (one of:
          id, name)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by DeploymentTarget ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Cluster ID
        in: query
        name: cluster_id
        schema:
          type: string
      - description: Filter results by DeploymentTarget name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_DeploymentTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Project's DeploymentTargets
      tags:
      - DeploymentTargets
  /api/projects/{id}/deployments:
    get:
      description: Lists Deployments belonging to the Project.
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'Expand the result with related entities (allowed values: deployment_target,
          namespace)'
        in: query
        name: expand
        schema:
          type: string
      - description: 'A given Deployment attribute to sort results by (one of: id,
          name, cluster_resource_name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Deployment id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Deployment cluster_resource_name
        in: query
        name: cluster_resource_name
        schema:
          type: string
      - description: Filter results by Deployment data_service_id
        in: query
        name: data_service_id
        schema:
          type: string
      - description: Filter results by Deployment deployment_target_id
        in: query
        name: deployment_target_id
        schema:
          type: string
      - description: Filter results by Deployment image_id
        in: query
        name: image_id
        schema:
          type: string
      - description: Filter results by Deployment name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by Deployment namespace_id
        in: query
        name: namespace_id
        schema:
          type: string
      - description: Filter results by Deployment state
        in: query
        name: state
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Deployment'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Project's Deployments
      tags:
      - Deployments
    post:
      description: Creates a new data service Deployment
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Set to true to only create the Deployment object in the database
          (does not create any actual resources)
        in: header
        name: Local-Only
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateProjectDeploymentRequest'
        description: Request body containing the deployment config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Deployment'
          description: The created Deployment will be returned
      security:
      - ApiKeyAuth: []
      summary: Create Deployment
      tags:
      - Deployments
      x-codegen-request-body-name: body
  /api/projects/{id}/role-bindings:
    delete:
      description: Removes a single ProjectRoleBinding
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.DeleteRoleBindingRequest'
        description: Request body containing the project role binding
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete ProjectRoleBinding
      tags:
      - ProjectRoleBindings
      x-codegen-request-body-name: body
    get:
      description: Lists ProjectRoleBindings
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given ProjectRoleBinding attribute to sort results by (one
          of: role_name, actor_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by ProjectRoleBinding assigned role name
        in: query
        name: role_name
        schema:
          type: string
      - description: Filter results by ProjectRoleBinding actor id
        in: query
        name: actor_id
        schema:
          type: string
      - description: Filter results by ProjectRoleBinding actor type
        in: query
        name: actor_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedProjectRoleBindings'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List ProjectRoleBindings
      tags:
      - ProjectRoleBindings
    put:
      description: Creates a new ProjectRoleBinding
      parameters:
      - description: Project ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PutLegacyBindingRequest'
        description: Request body containing the project role binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.LegacyProjectBinding'
          description: The created ProjectRoleBinding will be returned
      security:
      - ApiKeyAuth: []
      summary: Create ProjectRoleBinding
      tags:
      - ProjectRoleBindings
      x-codegen-request-body-name: body
  /api/resource-settings-templates/{id}:
    delete:
      description: Removes a single ResourceSettingsTemplate
      parameters:
      - description: ResourceSettingsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete ResourceSettingsTemplates
      tags:
      - ResourceSettingsTemplates
    get:
      description: Fetches a single ResourceSettingsTemplate
      parameters:
      - description: ResourceSettingsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResourceSettingsTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get ResourceSettingsTemplate
      tags:
      - ResourceSettingsTemplates
    put:
      description: Updates existing ResourceSettingsTemplate
      parameters:
      - description: ResourceSettingsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateResourceSettingsTemplateRequest'
        description: Request body containing updated template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResourceSettingsTemplate'
          description: The updated resource settings template will be returned
      security:
      - ApiKeyAuth: []
      summary: Update ResourceSettingsTemplate
      tags:
      - ResourceSettingsTemplates
      x-codegen-request-body-name: body
  /api/restores/restorability-matrix:
    get:
      description: Get Restorability Matrix
      responses:
        "200":
          content:
            '*/*':
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/service.RestoreCompatibilityCondition'
                  type: array
                type: object
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Restorability Matrix
      tags:
      - Restores
  /api/restores/{id}:
    get:
      description: Fetches a Restore
      parameters:
      - description: Restore ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Restore'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Restore
      tags:
      - Restores
  /api/restores/{id}/retry:
    post:
      description: Retry a Restore
      parameters:
      - description: Restore ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/requests.CreateRestoreRequest'
        description: Request body containing information about required restore
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/models.Restore'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Retry Restore
      tags:
      - Restores
      x-codegen-request-body-name: body
  /api/restores/{id}/update:
    post:
      description: Updates a Restore
      parameters:
      - description: Restore ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/requests.UpdateRestoreRequest'
        description: Request body containing the update
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/models.Restore'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Update Restore
      tags:
      - Restores
      x-codegen-request-body-name: body
  /api/roles:
    get:
      description: Fetches list of supported Roles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedRoles'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Roles
      tags:
      - Roles
  /api/service-accounts/{id}:
    delete:
      deprecated: true
      description: Removes a single ServiceAccount (will be replaced by service level
        API keys)
      parameters:
      - description: ServiceAccount ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete ServiceAccounts
      tags:
      - ServiceAccounts
    get:
      deprecated: true
      description: Fetches a single ServiceAccount (will be replaced by service level
        API keys)
      parameters:
      - description: ServiceAccount ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.ServiceAccountResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get ServiceAccounts
      tags:
      - ServiceAccounts
  /api/service-accounts/{id}/token:
    get:
      deprecated: true
      description: Fetches the token of a ServiceAccount (will be replaced by service
        level API keys)
      parameters:
      - description: ServiceAccount ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.ServiceAccountTokenResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get token of a ServiceAccount
      tags:
      - ServiceAccounts
  /api/service-identity/{id}:
    delete:
      description: Delete service identity by ID
      parameters:
      - description: Service Identity ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content: {}
          description: The service identity with specified id doesn't exist.
      security:
      - ApiKeyAuth: []
      summary: Delete service identity
      tags:
      - ServiceIdentity
    get:
      description: Get service identity by ID
      parameters:
      - description: Service Identity ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ServiceIdentity'
          description: OK
        "404":
          content: {}
          description: The service identity with specified id doesn't exist.
      security:
      - ApiKeyAuth: []
      summary: Get service identity by ID
      tags:
      - ServiceIdentity
    put:
      description: Update service identity name or description
      parameters:
      - description: Service Identity ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.ServiceIdentityRequest'
        description: Request body containing the service identity details.
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: The request is not valid.
        "404":
          content: {}
          description: The service identity with specified id doesn't exist.
        "409":
          content: {}
          description: The service identity with name is already present.
      security:
      - ApiKeyAuth: []
      summary: Update service identity
      tags:
      - ServiceIdentity
      x-codegen-request-body-name: Body
  /api/service-identity:regenerate/{id}:
    get:
      description: Revokes existing credentials and regenerate new ClientID and ClientToken
      parameters:
      - description: Service Identity ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ServiceIdentityWithToken'
          description: OK
        "404":
          content: {}
          description: The service identity with specified id doesn't exist.
      security:
      - ApiKeyAuth: []
      summary: Regenerate service identity credentials
      tags:
      - ServiceIdentity
  /api/storage-options-templates/{id}:
    delete:
      description: Removes a single StorageOptionsTemplate
      parameters:
      - description: StorageOptionsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete StorageOptionsTemplates
      tags:
      - StorageOptionsTemplates
    get:
      description: Fetches a single StorageOptionsTemplate
      parameters:
      - description: StorageOptionsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.StorageOptionsTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get StorageOptionsTemplate
      tags:
      - StorageOptionsTemplates
    put:
      description: Updates existing StorageOptionsTemplate
      parameters:
      - description: StorageOptionsTemplate ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.UpdateStorageOptionsTemplateRequest'
        description: Request body containing updated template
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.StorageOptionsTemplate'
          description: The updated storage options template will be returned
      security:
      - ApiKeyAuth: []
      summary: Update StorageOptionsTemplate
      tags:
      - StorageOptionsTemplates
      x-codegen-request-body-name: body
  /api/teams/{id}:
    get:
      description: Fetches a single Team
      parameters:
      - description: Team ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Team'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Team
      tags:
      - Teams
  /api/tenants/{id}:
    get:
      description: Fetches a single Tenant
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Tenant'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Tenant
      tags:
      - Tenants
  /api/tenants/{id}/application-configuration-templates:
    get:
      description: Lists ApplicationConfigurationTemplates
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given ApplicationConfigurationTemplates attribute to sort
          results by (one of: id, name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by ApplicationConfigurationTemplates id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by ApplicationConfigurationTemplates name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by DataService ID
        in: query
        name: data_service_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_ApplicationConfigurationTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List ApplicationConfigurationTemplates
      tags:
      - ApplicationConfigurationTemplates
    post:
      description: Creates a new ApplicationConfigurationTemplate
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createApplicationConfigurationTemplateRequest'
        description: Request body containing the application configuration template
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ApplicationConfigurationTemplate'
          description: The created ApplicationConfigurationTemplate will be returned
      security:
      - ApiKeyAuth: []
      summary: Create ApplicationConfigurationTemplate
      tags:
      - ApplicationConfigurationTemplates
      x-codegen-request-body-name: body
  /api/tenants/{id}/backup-credentials:
    get:
      description: Lists BackupCredentials visible to the caller
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given BackupCredentials attribute to sort results by (one
          of: id, name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by BackupCredentials id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by BackupCredentials name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by BackupCredentials type
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_BackupCredentials'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List BackupCredentials
      tags:
      - BackupCredentials
    post:
      description: Creates a new BackupCredentials
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createBackupCredentialsRequest'
        description: Request body containing the backup credentials config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupCredentials'
          description: The created BackupCredentials will be returned
      security:
      - ApiKeyAuth: []
      summary: Create BackupCredentials
      tags:
      - BackupCredentials
      x-codegen-request-body-name: body
  /api/tenants/{id}/backup-policies:
    get:
      description: Lists BackupPolicies
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given BackupPolicy attribute to sort results by (one of: id,
          name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by BackupPolicy id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by BackupPolicy name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_BackupPolicy'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List BackupPolicies
      tags:
      - BackupPolicies
    post:
      description: Creates a new BackupPolicy
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createBackupPolicyRequest'
        description: Request body containing the backup policy
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupPolicy'
          description: The created BackupPolicy will be returned
      security:
      - ApiKeyAuth: []
      summary: Create BackupPolicy
      tags:
      - BackupPolicies
      x-codegen-request-body-name: body
  /api/tenants/{id}/backup-targets:
    get:
      description: Lists Tenant's BackupTargets
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: 'A given BackupTarget attribute to sort results by (one of: id,
          name, type, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by BackupTarget ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by BackupTarget name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by BackupTarget type
        in: query
        name: type
        schema:
          type: string
      - description: Filter results by bucket
        in: query
        name: bucket
        schema:
          type: string
      - description: Filter results by region
        in: query
        name: region
        schema:
          type: string
      - description: Filter results by BackupCredentials ID
        in: query
        name: backup_credentials_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_BackupTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Tenant's BackupTargets
      tags:
      - BackupTargets
    post:
      description: Creates a new BackupTarget
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.CreateTenantBackupTarget'
        description: Request body containing the backup target config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.BackupTarget'
          description: The created BackupTarget will be returned
      security:
      - ApiKeyAuth: []
      summary: Create BackupTarget
      tags:
      - BackupTargets
      x-codegen-request-body-name: body
  /api/tenants/{id}/deployment-targets:
    get:
      description: Lists Tenant's DeploymentTargets
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given DeploymentTarget attribute to sort results by (one of:
          id, name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by DeploymentTarget ID
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Cluster ID
        in: query
        name: cluster_id
        schema:
          type: string
      - description: Filter results by DeploymentTarget name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_DeploymentTarget'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Tenant's DeploymentTargets
      tags:
      - DeploymentTargets
    post:
      description: Creates a new DeploymentTarget
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateDeploymentTargetRequest'
        description: Request body containing the deployment target config
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DeploymentTarget'
          description: The created DeploymentTarget will be returned
      security:
      - ApiKeyAuth: []
      summary: Create DeploymentTarget
      tags:
      - DeploymentTargets
      x-codegen-request-body-name: body
  /api/tenants/{id}/dns-details:
    get:
      description: Get DNS details/credentials for Tenant
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.DNSDetails'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get DNS details for Tenant
      tags:
      - Tenants
  /api/tenants/{id}/projects:
    get:
      description: Lists Projects belonging to the Tenant.
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Project attribute to sort results by (one of: id, name,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Project id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Project name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Project'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Tenant's Projects
      tags:
      - Projects
  /api/tenants/{id}/resource-settings-templates:
    get:
      description: Lists ResourceSettingsTemplates
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given ResourceSettingsTemplates attribute to sort results
          by (one of: id, name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by ResourceSettingsTemplates id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by ResourceSettingsTemplates name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by DataService ID
        in: query
        name: data_service_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_ResourceSettingsTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List ResourceSettingsTemplates
      tags:
      - ResourceSettingsTemplates
    post:
      description: Creates a new ResourceSettingsTemplate
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createResourceSettingsTemplateRequest'
        description: Request body containing the resource settings template
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResourceSettingsTemplate'
          description: The created ResourceSettingsTemplate will be returned
      security:
      - ApiKeyAuth: []
      summary: Create ResourceSettingsTemplate
      tags:
      - ResourceSettingsTemplates
      x-codegen-request-body-name: body
  /api/tenants/{id}/role-bindings:
    delete:
      description: Removes a single TenantRoleBinding
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.DeleteRoleBindingRequest'
        description: Request body containing the tenant role binding
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete TenantRoleBinding
      tags:
      - TenantRoleBindings
      x-codegen-request-body-name: body
    get:
      description: Lists TenantRoleBindings
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given TenantRoleBinding attribute to sort results by (one
          of: role_name, actor_id)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by TenantRoleBinding assigned role name
        in: query
        name: role_name
        schema:
          type: string
      - description: Filter results by TenantRoleBinding actor id
        in: query
        name: actor_id
        schema:
          type: string
      - description: Filter results by TenantRoleBinding actor type
        in: query
        name: actor_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedTenantRoleBindings'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List TenantRoleBindings
      tags:
      - TenantRoleBindings
    put:
      description: Creates a new TenantRoleBinding
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PutLegacyBindingRequest'
        description: Request body containing the tenant role binding
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.LegacyTenantBinding'
          description: The created TenantRoleBinding will be returned
      security:
      - ApiKeyAuth: []
      summary: Create TenantRoleBinding
      tags:
      - TenantRoleBindings
      x-codegen-request-body-name: body
  /api/tenants/{id}/service-accounts:
    get:
      deprecated: true
      description: List Tenant's ServiceAccounts (will be replaced by service level
        API keys)
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given ServiceAccount attribute to sort results by (one of:
          name, id, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by ServiceAccount name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by ServiceAccount id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by ServiceAccount token
        in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_ServiceAccount'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Tenant's ServiceAccounts
      tags:
      - ServiceAccounts
    post:
      deprecated: true
      description: Creates a new ServiceAccount (will be replaced by service level
        API keys)
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createServiceAccountRequest'
        description: Request body containing name of the service account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ServiceAccount'
          description: The created ServiceAccount will be returned
      security:
      - ApiKeyAuth: []
      summary: Create ServiceAccounts
      tags:
      - ServiceAccounts
      x-codegen-request-body-name: body
  /api/tenants/{id}/storage-options-templates:
    get:
      description: Lists StorageOptionsTemplates
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given StorageOptionsTemplates attribute to sort results by
          (one of: id, name, created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by StorageOptionsTemplates id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by StorageOptionsTemplates name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by StorageOptionsTemplates provisioner
        explode: false
        in: query
        name: provisioner
        schema:
          items:
            enum:
            - pxd.portworx.com
            - kubernetes.io/portworx-volume
            - auto
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_StorageOptionsTemplate'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List StorageOptionsTemplates
      tags:
      - StorageOptionsTemplates
    post:
      description: Creates a new StorageOptionsTemplate
      parameters:
      - description: Tenant ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.createStorageOptionsTemplateRequest'
        description: Request body containing the storage options template
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.StorageOptionsTemplate'
          description: The created StorageOptionsTemplates will be returned
      security:
      - ApiKeyAuth: []
      summary: Create StorageOptionsTemplate
      tags:
      - StorageOptionsTemplates
      x-codegen-request-body-name: body
  /api/user-api-key:
    get:
      description: Lists UserAPIKeys
      parameters:
      - description: Filter results by id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results by enabled
        in: query
        name: enabled
        schema:
          type: boolean
      - description: 'A given UserAPIKey attribute to sort results by (one of: id,
          name, created_at, enabled, expires_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_UserAPIKey'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List UserAPIKeys
      tags:
      - UserAPIKey
    post:
      description: Creates a UserAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateUserAPIKeyRequest'
        description: Request body containing the necessary information to create a
          key.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.UserAPIKey'
          description: Created
      security:
      - ApiKeyAuth: []
      summary: Create UserAPIKey
      tags:
      - UserAPIKey
      x-codegen-request-body-name: body
  /api/user-api-key/{id}:
    delete:
      description: Deletes the UserAPIKey if it's disabled. Returns 422 if the UserAPIKey
        is enabled.
      parameters:
      - description: UserAPIKey ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - ApiKeyAuth: []
      summary: Delete UserAPIKey
      tags:
      - UserAPIKey
    get:
      description: Gets a UserAPIKey
      parameters:
      - description: UserAPIKey ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.UserAPIKey'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get UserAPIKey
      tags:
      - UserAPIKey
    patch:
      description: Patches the Name and Enabled properties of a UserAPIKey
      parameters:
      - description: UserAPIKey ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.PatchUserAPIKeyRequest'
        description: Request body containing the new values.
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Patch UserAPIKey
      tags:
      - UserAPIKey
      x-codegen-request-body-name: body
  /api/users/{id}:
    get:
      description: Fetches a single User
      parameters:
      - description: User ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.User'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - Users
  /api/users/{id}/account-role-bindings:
    get:
      description: Lists the AccountRoleBindings of a User.
      parameters:
      - description: User ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given AccountRoleBinding attribute to sort results by (allowed:
          role_name)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Filter results by role_name
        in: query
        name: role_name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.PaginatedAccountRoleBindings'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List User's AccountRoleBindings
      tags:
      - AccountRoleBindings
  /api/version:
    get:
      deprecated: true
      description: Get version information about this server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.APIVersionResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get version information
      tags:
      - APIVersion
  /api/versions/{id}:
    get:
      description: Fetches a single Version
      parameters:
      - description: Version ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Version'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Version
      tags:
      - Versions
  /api/versions/{id}/images:
    get:
      description: Lists Images belonging to a Version.
      parameters:
      - description: Version ID (must be valid UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'A given Image attribute to sort results by (one of: id, name,
          created_at)'
        in: query
        name: sort_by
        schema:
          type: string
      - description: Maximum number of rows to return (could be less)
        in: query
        name: limit
        schema:
          type: string
      - description: Use a token returned by a previous query to continue listing
          with the next batch of rows
        in: query
        name: continuation
        schema:
          type: string
      - description: Filter results by Image id
        in: query
        name: id
        schema:
          type: string
      - description: Filter results by Image's name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.PaginatedResult-models_Image'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: List Version's Images
      tags:
      - Images
  /api/whoami:
    get:
      description: Fetches a details of the current calling actor (user or service
        account)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.WhoAmIResponse'
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get Current Actor
      tags:
      - WhoAmI
  /auth/authorization-code:
    post:
      description: |-
        Exchanges the Authorization Code from the OAuth2 server for an ID Token which is necessary for user authentication using the Authorization HTTP header.

        **Authenticating for later requests using the ID token:**
        `Authorization: Bearer {id_token}`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.AuthorizationCodeRequest'
        description: Request body containing the received authorization code.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.OIDCTokenResponse'
          description: OK
        "400":
          content: {}
          description: The submitted request body isn't valid.
        "401":
          content: {}
          description: The token exchange failed.
      summary: Authorization code exchange
      tags:
      - Authentication
      x-codegen-request-body-name: Body
  /auth/oidc-info:
    get:
      description: Returns OIDC configuration for the frontend.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.OIDCInfoResponse'
          description: OK
        "404":
          content: {}
          description: OIDC is not enabled in the configuration of API server.
      summary: OIDC info
      tags:
      - Authentication
  /auth/refresh-token:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.RefreshTokenRequest'
        description: Request body containing the refresh token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.OIDCTokenResponse'
          description: OK
        "400":
          content: {}
          description: The submitted request body isn't valid.
        "401":
          content: {}
          description: The token refresh failed.
      summary: Use refresh token to generate new tokens.
      tags:
      - Authentication
      x-codegen-request-body-name: Body
  /service-identity/generate-token:
    post:
      description: |-
        Generates JWT token for a service identity using client id and client token

        **Authenticating for later requests using the ID token:**
        `Authorization: Bearer {id_token}`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/controllers.GenerateTokenRequest'
        description: Request body containing the client id and client token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controllers.GenerateTokenResponse'
          description: OK
        "400":
          content: {}
          description: The submitted request body isn't valid.
        "422":
          content: {}
          description: The provided credentials is invalid.
      summary: Generate JWT token for service identity
      tags:
      - ServiceIdentity
      x-codegen-request-body-name: Body
components:
  schemas:
    auth.Claims:
      example:
        aud: aud
        sub: sub
        roles:
        - roles
        - roles
        iss: iss
        name: name
        groups:
        - groups
        - groups
        email: email
      properties:
        aud:
          description: Audience is the intended recipient of the token.
          type: string
        email:
          description: Email of this account.
          type: string
        groups:
          description: (optional) Groups in which this account is part of.
          items:
            type: string
          type: array
        iss:
          description: Issuer is the token issuer. For self-signed token do not prefix
            with `https://`.
          type: string
        name:
          description: Name of this account.
          type: string
        roles:
          description: Roles of this account.
          items:
            type: string
          type: array
        sub:
          description: Subject identifier. Unique ID of this account.
          type: string
      type: object
    compatibility.CompatibleVersion:
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of a Version entity.
          type: string
        name:
          description: Name of a Version entity.
          type: string
      type: object
    compatibility.CompatibleVersions:
      example:
        compatible:
        - name: name
          id: id
        - name: name
          id: id
        data_service_name: data_service_name
        latest_compatible_patch:
          name: name
          id: id
        version_name: version_name
        data_service_id: data_service_id
        latest_compatible:
        - name: name
          id: id
        - name: name
          id: id
        version_id: version_id
      properties:
        compatible:
          description: Compatible contains all compatible versions.
          items:
            $ref: '#/components/schemas/compatibility.CompatibleVersion'
          type: array
        data_service_id:
          type: string
        data_service_name:
          type: string
        latest_compatible:
          description: LatestCompatible contains the latest patch versions of compatible
            major/minor versions.
          items:
            $ref: '#/components/schemas/compatibility.CompatibleVersion'
          type: array
        latest_compatible_patch:
          $ref: '#/components/schemas/compatibility.CompatibleVersion'
        version_id:
          type: string
        version_name:
          type: string
      type: object
    constraint.Pagination:
      example:
        continuation: continuation
      properties:
        continuation:
          type: string
      type: object
    controllers.APIMetadataResponse:
      example:
        features:
          key: features
        pds_build_number: 0
        helm_chart_version: Helm chart version
      properties:
        features:
          additionalProperties:
            type: string
          type: object
        helm_chart_version:
          example: Helm chart version
          type: string
        pds_build_number:
          type: integer
      type: object
    controllers.APIVersionResponse:
      example:
        features:
          key: features
        pds_build_number: 0
        helm_chart_version: Helm chart version
        api_version: API server version
      properties:
        api_version:
          example: API server version
          type: string
        features:
          additionalProperties:
            type: string
          type: object
        helm_chart_version:
          example: Helm chart version
          type: string
        pds_build_number:
          type: integer
      type: object
    controllers.ApplicationConfigurationSamples:
      example:
        data:
        - data_service_id: data_service_id
          config_items:
          - deploy_time: true
            value: value
            key: key
          - deploy_time: true
            value: value
            key: key
          created: created
          name: name
          updated: updated
          version: 0
        - data_service_id: data_service_id
          config_items:
          - deploy_time: true
            value: value
            key: key
          - deploy_time: true
            value: value
            key: key
          created: created
          name: name
          updated: updated
          version: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ApplicationConfigurationSample'
          type: array
      type: object
    controllers.AuthorizationCodeRequest:
      properties:
        AuthCode:
          type: string
      type: object
    controllers.BackupPolicySamples:
      example:
        data:
        - created: created
          schedules:
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          name: name
          updated: updated
          version: 0
        - created: created
          schedules:
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          name: name
          updated: updated
          version: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupPolicySample'
          type: array
      type: object
    controllers.CompatibleVersionsResponse:
      example:
        data:
        - compatible:
          - name: name
            id: id
          - name: name
            id: id
          data_service_name: data_service_name
          latest_compatible_patch:
            name: name
            id: id
          version_name: version_name
          data_service_id: data_service_id
          latest_compatible:
          - name: name
            id: id
          - name: name
            id: id
          version_id: version_id
        - compatible:
          - name: name
            id: id
          - name: name
            id: id
          data_service_name: data_service_name
          latest_compatible_patch:
            name: name
            id: id
          version_name: version_name
          data_service_id: data_service_id
          latest_compatible:
          - name: name
            id: id
          - name: name
            id: id
          version_id: version_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/compatibility.CompatibleVersions'
          type: array
      type: object
    controllers.CreateDeploymentBackup:
      properties:
        backup_level:
          example: snapshot or incremental
          type: string
        backup_target_id:
          type: string
        backup_type:
          example: adhoc or scheduled
          type: string
        job_history_limit:
          type: integer
        schedule:
          example: in CRON format, required for scheduled backups
          type: string
      type: object
    controllers.CreateTenantBackupTarget:
      properties:
        backup_credentials_id:
          type: string
        bucket:
          description: Bucket name for S3 or S3 compatible. Container name for Azure.
          type: string
        name:
          description: Name of the backup target. Must be unique for the given tenant.
          type: string
        region:
          description: Region of the bucket. Required for S3. Otherwise must be empty.
          type: string
        type:
          description: Type of the backup target. Must match the used backup credentials.
          type: string
      type: object
    controllers.Credentials:
      properties:
        azure:
          $ref: '#/components/schemas/models.AzureCredentials'
        google:
          $ref: '#/components/schemas/models.GoogleCredentials'
        s3:
          $ref: '#/components/schemas/models.S3Credentials'
        s3_compatible:
          $ref: '#/components/schemas/models.S3CompatibleCredentials'
      type: object
    controllers.DeploymentTargetCredentialsResponse:
      example:
        teleport_join_token: teleport_join_token
        teleport_proxy_addr: teleport_proxy_addr
        teleport_ca_pin: teleport_ca_pin
      properties:
        teleport_ca_pin:
          type: string
        teleport_join_token:
          type: string
        teleport_proxy_addr:
          type: string
      type: object
    controllers.DeploymentTargetHeartbeatRequest:
      properties:
        cluster_id:
          type: string
      type: object
    controllers.DeploymentTargetHeartbeatResponse:
      example:
        cluster_id: cluster_id
        name: name
      properties:
        cluster_id:
          type: string
        name:
          type: string
      type: object
    controllers.DeploymentTargetMetadataRequest:
      properties:
        cluster_id:
          type: string
        kube_api_version:
          type: string
        kube_platform:
          enum:
          - unknown
          - aws
          - azure
          - gcp
          - ocp
          - generic
          type: string
        pds_chart_version:
          type: string
        px_csi_enabled:
          enum:
          - unknown
          - "yes"
          - "no"
          type: string
        px_service_namespace:
          type: string
        px_version:
          type: string
      type: object
    controllers.GenerateTokenRequest:
      properties:
        client_id:
          type: string
        client_token:
          type: string
      type: object
    controllers.GenerateTokenResponse:
      example:
        valid_for: valid_for
        token: token
      properties:
        token:
          type: string
        valid_for:
          type: string
      type: object
    controllers.ListBackupJobsStatusResponse:
      example:
        data:
        - start_time: start_time
          completion_time: completion_time
          name: name
          status: status
        - start_time: start_time
          completion_time: completion_time
          name: name
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupJobStatusResponse'
          type: array
      type: object
    controllers.OIDCInfoResponse:
      example:
        authUrl: https://release-staging.portworx.dev/landing/login
        clientId: clientId
        redirectUrl: http://localhost:8080/auth-wait
        issuer: https://release-staging-api.portworx.dev/api
      properties:
        authUrl:
          example: https://release-staging.portworx.dev/landing/login
          type: string
        clientId:
          type: string
        issuer:
          example: https://release-staging-api.portworx.dev/api
          type: string
        redirectUrl:
          example: http://localhost:8080/auth-wait
          type: string
      type: object
    controllers.OIDCTokenResponse:
      example:
        expiresIn: expiresIn
        claims:
          aud: aud
          sub: sub
          roles:
          - roles
          - roles
          iss: iss
          name: name
          groups:
          - groups
          - groups
          email: email
        idToken: idToken
        refreshToken: refreshToken
      properties:
        claims:
          $ref: '#/components/schemas/auth.Claims'
        expiresIn:
          type: string
        idToken:
          type: string
        refreshToken:
          type: string
      type: object
    controllers.PaginatedAccountRoleBindings:
      example:
        data:
        - role_name: role_name
          account_id: account_id
          actor_type: actor_type
          actor_id: actor_id
        - role_name: role_name
          account_id: account_id
          actor_type: actor_type
          actor_id: actor_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.LegacyAccountBinding'
          type: array
      type: object
    controllers.PaginatedBackupTargetStates:
      example:
        data:
        - error_message: error_message
          px_credentials_name: px_credentials_name
          deployment_target_id: deployment_target_id
          error_details: error_details
          px_credentials_id: px_credentials_id
          backup_target_id: backup_target_id
          error_code: deployment_target_unavailable
          state: pending
        - error_message: error_message
          px_credentials_name: px_credentials_name
          deployment_target_id: deployment_target_id
          error_details: error_details
          px_credentials_id: px_credentials_id
          backup_target_id: backup_target_id
          error_code: deployment_target_unavailable
          state: pending
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupTargetState'
          type: array
      type: object
    controllers.PaginatedGlobalRoleBindings:
      example:
        data:
        - role_name: role_name
          actor_type: actor_type
          actor_id: actor_id
        - role_name: role_name
          actor_type: actor_type
          actor_id: actor_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.LegacyGlobalBinding'
          type: array
      type: object
    controllers.PaginatedProjectRoleBindings:
      example:
        data:
        - role_name: role_name
          actor_type: actor_type
          project_id: project_id
          actor_id: actor_id
        - role_name: role_name
          actor_type: actor_type
          project_id: project_id
          actor_id: actor_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.LegacyProjectBinding'
          type: array
      type: object
    controllers.PaginatedRoles:
      example:
        data:
        - extends:
          - extends
          - extends
          level: level
          permissions:
          - permissions
          - permissions
          name: name
        - extends:
          - extends
          - extends
          level: level
          permissions:
          - permissions
          - permissions
          name: name
      properties:
        data:
          items:
            $ref: '#/components/schemas/policy.Role'
          type: array
      type: object
    controllers.PaginatedTenantRoleBindings:
      example:
        data:
        - role_name: role_name
          tenant_id: tenant_id
          actor_type: actor_type
          actor_id: actor_id
        - role_name: role_name
          tenant_id: tenant_id
          actor_type: actor_type
          actor_id: actor_id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.LegacyTenantBinding'
          type: array
      type: object
    controllers.PartialAzureCredentials:
      example:
        account_name: account_name
      properties:
        account_name:
          description: Name of the Azure Storage account.
          type: string
      type: object
    controllers.PartialCredentials:
      example:
        s3:
          endpoint: endpoint
          access_key: access_key
        s3_compatible:
          endpoint: endpoint
          access_key: access_key
        google:
          project_id: project_id
        azure:
          account_name: account_name
      properties:
        azure:
          $ref: '#/components/schemas/controllers.PartialAzureCredentials'
        google:
          $ref: '#/components/schemas/controllers.PartialGoogleCredentials'
        s3:
          $ref: '#/components/schemas/controllers.PartialS3Credentials'
        s3_compatible:
          $ref: '#/components/schemas/controllers.PartialS3CompatibleCredentials'
      type: object
    controllers.PartialGoogleCredentials:
      example:
        project_id: project_id
      properties:
        project_id:
          description: Project ID of the Google Cloud project.
          type: string
      type: object
    controllers.PartialS3CompatibleCredentials:
      example:
        endpoint: endpoint
        access_key: access_key
      properties:
        access_key:
          description: Access key for S3-compatible user.
          type: string
        endpoint:
          description: Endpoint of S3-compatible storage service.
          type: string
      type: object
    controllers.PartialS3Credentials:
      example:
        endpoint: endpoint
        access_key: access_key
      properties:
        access_key:
          description: Access key for the AWS IAM user.
          type: string
        endpoint:
          description: Endpoint of S3 storage service.
          type: string
      type: object
    controllers.RefreshTokenRequest:
      properties:
        refreshToken:
          type: string
      type: object
    controllers.ResourceSettingsSamples:
      example:
        data:
        - data_service_id: data_service_id
          storage_request: storage_request
          created: created
          cpu_limit: cpu_limit
          name: name
          memory_request: memory_request
          memory_limit: memory_limit
          updated: updated
          version: 0
          cpu_request: cpu_request
        - data_service_id: data_service_id
          storage_request: storage_request
          created: created
          cpu_limit: cpu_limit
          name: name
          memory_request: memory_request
          memory_limit: memory_limit
          updated: updated
          version: 0
          cpu_request: cpu_request
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ResourceSettingsSample'
          type: array
      type: object
    controllers.ServiceAccountResponse:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    controllers.ServiceAccountTokenResponse:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    controllers.StorageOptionsSamples:
      example:
        data:
        - fg: true
          provisioner: pxd.portworx.com
          created: created
          name: name
          repl: 0
          secure: true
          fs: xfs
          updated: updated
          version: 6
        - fg: true
          provisioner: pxd.portworx.com
          created: created
          name: name
          repl: 0
          secure: true
          fs: xfs
          updated: updated
          version: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.StorageOptionsSample'
          type: array
      type: object
    controllers.TargetClusterConfigResponse:
      example:
        teleport_join_token: teleport_join_token
        teleport_proxy_addr: teleport_proxy_addr
        observability_url: observability_url
        teleport_ca_pin: teleport_ca_pin
      properties:
        observability_url:
          type: string
        teleport_ca_pin:
          type: string
        teleport_join_token:
          type: string
        teleport_proxy_addr:
          type: string
      type: object
    controllers.UpdateApplicationConfigurationTemplateRequest:
      properties:
        config_items:
          items:
            $ref: '#/components/schemas/models.ConfigItem'
          type: array
        name:
          description: See models.ApplicationConfigurationTemplate for more information.
          type: string
      type: object
    controllers.UpdateBackupPolicyRequest:
      properties:
        name:
          description: Name of the backup policy. Must be unique for the given tenant.
          type: string
        schedules:
          description: An array of the backup schedules. Must be non-empty.
          items:
            $ref: '#/components/schemas/models.BackupSchedule'
          type: array
      type: object
    controllers.UpdateBackupTargetRequest:
      properties:
        name:
          description: Name of the backup target. Must be unique for the given tenant.
          type: string
      type: object
    controllers.UpdateDeploymentRequest:
      properties:
        application_configuration_overrides:
          additionalProperties:
            type: string
          type: object
        application_configuration_template_id:
          type: string
        image_id:
          type: string
        node_count:
          description: See models.Deployment for more information.
          example: 3
          type: integer
        resource_settings_template_id:
          type: string
        scheduled_backup:
          $ref: '#/components/schemas/controllers.UpdateDeploymentScheduledBackup'
      type: object
    controllers.UpdateDeploymentScheduledBackup:
      properties:
        backup_policy_id:
          type: string
        backup_target_id:
          description: BackupTargetID and BackupPolicyID must be both specified or
            not. Set both to null to have no scheduled backup.
          type: string
      type: object
    controllers.UpdateDeploymentTargetRequest:
      properties:
        name:
          type: string
      type: object
    controllers.UpdateNamespaceRequest:
      properties:
        status:
          type: string
      type: object
    controllers.UpdateResourceSettingsTemplateRequest:
      properties:
        cpu_limit:
          type: string
        cpu_request:
          type: string
        memory_limit:
          type: string
        memory_request:
          type: string
        name:
          description: See models.ResourceSettingsTemplate for more information.
          type: string
        storage_request:
          type: string
      type: object
    controllers.UpdateStorageOptionsTemplateRequest:
      properties:
        fg:
          type: boolean
        fs:
          description: Filesystem to be laid out.
          enum:
          - xfs
          - ext4
          type: string
        name:
          description: See models.StorageOptionsTemplate for more information.
          type: string
        provisioner:
          description: 'Portworx volume provisioner. Valid values are: "pxd.portworx.com"
            for PX CSI, "kubernetes.io/portworx-volume" for PX in-tree or "auto" for
            auto-detect'
          enum:
          - pxd.portworx.com
          - kubernetes.io/portworx-volume
          - auto
          type: string
        repl:
          description: Replication factor for the volume.
          type: integer
        secure:
          type: boolean
      type: object
    controllers.WhoAmIResponse:
      example:
        service_account:
          tenant_id: tenant_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
        service_identity:
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
        user:
          updated_at: updated_at
          created_at: created_at
          id: id
          email: email
      properties:
        service_account:
          $ref: '#/components/schemas/controllers.WhoAmIServiceAccount'
        service_identity:
          $ref: '#/components/schemas/controllers.WhoAmIServiceIdentity'
        user:
          $ref: '#/components/schemas/controllers.WhoAmIUser'
      type: object
    controllers.WhoAmIServiceAccount:
      example:
        tenant_id: tenant_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    controllers.WhoAmIServiceIdentity:
      example:
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    controllers.WhoAmIUser:
      example:
        updated_at: updated_at
        created_at: created_at
        id: id
        email: email
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        email:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    controllers.acceptEULARequest:
      properties:
        version:
          description: Version of the EULA.
          type: string
      type: object
    controllers.createAccountRequest:
      properties:
        baas_features_enabled:
          description: Whether BAAS should be enabled for this account.
          type: boolean
        dns_details:
          $ref: '#/components/schemas/models.DNSDetails'
        maas_details:
          $ref: '#/components/schemas/models.MAASDetails'
        name:
          description: Name of the account.
          type: string
        pds_features_enabled:
          description: Whether PDS should be enabled for this account.
          type: boolean
        pxone_features_enabled:
          description: Whether PX-ONE should be enabled for this account.
          type: boolean
        subdomain:
          description: (optional) Account subdomain name.
          type: string
      type: object
    controllers.createApplicationConfigurationTemplateRequest:
      properties:
        config_items:
          items:
            $ref: '#/components/schemas/models.ConfigItem'
          type: array
        data_service_id:
          type: string
        name:
          description: See models.ApplicationConfigurationTemplate for more information.
          type: string
      type: object
    controllers.createBackupCredentialsRequest:
      properties:
        credentials:
          $ref: '#/components/schemas/controllers.Credentials'
        name:
          description: Name of the backup credentials. Must be unique for the given
            tenant.
          type: string
      type: object
    controllers.createBackupPolicyRequest:
      properties:
        name:
          description: Name of the backup policy. Must be unique for the given tenant.
          type: string
        schedules:
          description: An array of the backup schedules. Must be non-empty.
          items:
            $ref: '#/components/schemas/models.BackupSchedule'
          type: array
      type: object
    controllers.createNamespace:
      properties:
        name:
          description: Name of the namespace
          type: string
      type: object
    controllers.createResourceSettingsTemplateRequest:
      properties:
        cpu_limit:
          type: string
        cpu_request:
          type: string
        data_service_id:
          type: string
        memory_limit:
          type: string
        memory_request:
          type: string
        name:
          description: See models.ResourceSettingsTemplate for more information.
          type: string
        storage_request:
          type: string
      type: object
    controllers.createServiceAccountRequest:
      properties:
        name:
          example: Name of the service account
          type: string
      type: object
    controllers.createStorageOptionsTemplateRequest:
      properties:
        fg:
          type: boolean
        fs:
          description: Filesystem to be laid out.
          enum:
          - xfs
          - ext4
          type: string
        name:
          description: See models.StorageOptionsTemplate for more information.
          type: string
        provisioner:
          description: 'Portworx volume provisioner. Valid values are: "pxd.portworx.com"
            for PX CSI, "kubernetes.io/portworx-volume" for PX in-tree or "auto" for
            auto-detect'
          enum:
          - pxd.portworx.com
          - kubernetes.io/portworx-volume
          - auto
          type: string
        repl:
          description: Replication factor for the volume.
          type: integer
        secure:
          type: boolean
      type: object
    controllers.updateBackupCredentialsRequest:
      properties:
        credentials:
          $ref: '#/components/schemas/controllers.Credentials'
        name:
          description: Name of the backup credentials. Must be unique for the given
            tenant.
          type: string
      type: object
    controllers.updateBackupRequest:
      properties:
        job_history_limit:
          type: integer
      type: object
    controllers.updateGlobalConfigRequest:
      properties:
        tls_preview_enabled:
          description: Specify if the TLS Preview feature should be enabled for this
            account.
          enum:
          - all
          type: string
        version_availability:
          description: Specify what data service versions are available for deployment
            for this account.
          enum:
          - all
          type: string
        version_updatability:
          description: Specify what data service versions are updatable for this account.
          enum:
          - all
          type: string
      type: object
    deployments.Condition:
      example:
        reason: reason
        message: message
        type: type
        status: status
      properties:
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    deployments.ConnectionDetails:
      example:
        nodes:
        - nodes
        - nodes
        ports:
          key: 0
      properties:
        nodes:
          description: Nodes of the data service.
          items:
            type: string
          type: array
        ports:
          additionalProperties:
            type: integer
          description: Ports provided by the data service (name and number).
          type: object
      type: object
    deployments.ConnectionInfo:
      example:
        notReadyPods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        pods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        connectionDetails:
          nodes:
          - nodes
          - nodes
          ports:
            key: 0
        clusterDetails: '{}'
      properties:
        clusterDetails:
          properties: {}
          type: object
        connectionDetails:
          $ref: '#/components/schemas/deployments.ConnectionDetails'
        notReadyPods:
          items:
            $ref: '#/components/schemas/deployments.PodInfo'
          type: array
        pods:
          items:
            $ref: '#/components/schemas/deployments.PodInfo'
          type: array
      type: object
    deployments.Credentials:
      example:
        password: password
      properties:
        password:
          type: string
      type: object
    deployments.PodInfo:
      example:
        workerNode: workerNode
        ip: ip
        name: name
      properties:
        ip:
          description: The IP of this pod.
          type: string
        name:
          description: Name is the Hostname of this pod.
          type: string
        workerNode:
          description: Node hosting this pod.
          type: string
      type: object
    deployments.ResourceConditions:
      example:
        resource:
          apiGroup: apiGroup
          kind: kind
          name: name
        conditions:
        - reason: reason
          message: message
          type: type
          status: status
        - reason: reason
          message: message
          type: type
          status: status
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/deployments.Condition'
          type: array
        resource:
          $ref: '#/components/schemas/v1.TypedLocalObjectReference'
      type: object
    models.AWSDetails:
      example:
        secret_key: secret_key
        access_key: access_key
        hosted_zone_id: hosted_zone_id
      properties:
        access_key:
          type: string
        hosted_zone_id:
          type: string
        secret_key:
          type: string
      type: object
    models.AccessPolicy:
      properties:
        account:
          items:
            type: string
          type: array
        global:
          items:
            type: string
          type: array
        namespace:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
        project:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
        tenant:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
      type: object
    models.AccessPolicyWithAccountID:
      example:
        account_id: account_id
        namespace:
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
        project:
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
        global:
        - global
        - global
        account:
        - account
        - account
        tenant:
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
        - role_name: role_name
          resource_ids:
          - resource_ids
          - resource_ids
      properties:
        account:
          items:
            type: string
          type: array
        account_id:
          type: string
        global:
          items:
            type: string
          type: array
        namespace:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
        project:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
        tenant:
          items:
            $ref: '#/components/schemas/models.Binding'
          type: array
      type: object
    models.Account:
      example:
        global_config:
          version_updatability: version_updatability
          version_availability: version_availability
          tls_preview_enabled: tls_preview_enabled
        pxone_features_enabled: true
        updated_at: updated_at
        name: name
        created_at: created_at
        baas_features_enabled: true
        eula:
          accepted_version: accepted_version
          accepted: true
        id: id
        pds_features_enabled: true
      properties:
        baas_features_enabled:
          type: boolean
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        eula:
          $ref: '#/components/schemas/models.EULADetails'
        global_config:
          $ref: '#/components/schemas/models.AccountGlobalConfig'
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        pds_features_enabled:
          type: boolean
        pxone_features_enabled:
          type: boolean
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.AccountGlobalConfig:
      example:
        version_updatability: version_updatability
        version_availability: version_availability
        tls_preview_enabled: tls_preview_enabled
      properties:
        tls_preview_enabled:
          description: Specify if the TLS Preview feature should be enabled for this
            account.
          type: string
        version_availability:
          description: Specify what data service versions are available for deployment
            for this account.
          type: string
        version_updatability:
          description: Specify what data service versions are updatable for this account.
          type: string
      type: object
    models.AccountRoleInvitation:
      example:
        role_name: role_name
        account_id: account_id
        updated_at: updated_at
        created_at: created_at
        id: id
        email: email
        issuer: issuer
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        email:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        issuer:
          type: string
        role_name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.ApplicationConfigurationSample:
      example:
        data_service_id: data_service_id
        config_items:
        - deploy_time: true
          value: value
          key: key
        - deploy_time: true
          value: value
          key: key
        created: created
        name: name
        updated: updated
        version: 0
      properties:
        config_items:
          items:
            $ref: '#/components/schemas/models.ConfigItem'
          type: array
        created:
          type: string
        data_service_id:
          type: string
        name:
          description: Name of the template. Must be unique for a specific data service
            within the tenant scope.
          type: string
        updated:
          type: string
        version:
          type: integer
      type: object
    models.ApplicationConfigurationTemplate:
      example:
        tenant_id: tenant_id
        account_id: account_id
        data_service_id: data_service_id
        updated_at: updated_at
        config_items:
        - deploy_time: true
          value: value
          key: key
        - deploy_time: true
          value: value
          key: key
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        config_items:
          items:
            $ref: '#/components/schemas/models.ConfigItem'
          type: array
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the template. Must be unique for a specific data service
            within the tenant scope.
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.AuthorizerRequest:
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        operation:
          type: string
      type: object
    models.AuthorizerResponse:
      example:
        allow: true
      properties:
        allow:
          type: boolean
      type: object
    models.AzureCredentials:
      properties:
        account_key:
          description: Access key for the Azure Storage account.
          type: string
        account_name:
          description: Name of the Azure Storage account.
          type: string
      type: object
    models.Backup:
      example:
        suspend: true
        tenant_id: tenant_id
        data_service_id: data_service_id
        deployment_name: deployment_name
        backup_target_id: backup_target_id
        backup_type: adhoc
        created_at: created_at
        cluster_resource_name: cluster_resource_name
        backup_level: snapshot
        job_history_limit: 0
        reclaim_policy: retain
        schedule: schedule
        account_id: account_id
        deployment_target_id: deployment_target_id
        namespace_id: namespace_id
        updated_at: updated_at
        project_id: project_id
        deployment_id: deployment_id
        id: id
        state: created
      properties:
        account_id:
          type: string
        backup_level:
          enum:
          - snapshot
          - incremental
          type: string
        backup_target_id:
          type: string
        backup_type:
          enum:
          - adhoc
          - scheduled
          type: string
        cluster_resource_name:
          description: ClusterResourceName k8s resource name for backup, built from
            ID.
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          type: string
        deployment_id:
          type: string
        deployment_name:
          description: DeploymentName name of the deployment to give the user more
            info in cases when the deployment has already been deleted.
          type: string
        deployment_target_id:
          description: DeploymentTargetID on which target the backup is created (models.DeploymentTarget).
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        job_history_limit:
          description: JobHistoryLimit is a number of retained backup jobs. Must be
            1 or greater.
          type: integer
        namespace_id:
          description: NamespaceID in which namespace the Backup CR is created (models.Namespace).
          type: string
        project_id:
          type: string
        reclaim_policy:
          description: ReclaimPolicy decides if the volume snapshots should get deleted
            when a Backup CR gets deleted.
          enum:
          - retain
          - delete
          type: string
        schedule:
          description: Schedule holds a CRON expression for the backup schedule.
          type: string
        state:
          description: State of backup CR in target cluster.
          enum:
          - created
          - pending
          - failed
          type: string
        suspend:
          description: Suspend allows us to suspend a scheduled backup from creating
            new backup jobs.
          type: boolean
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.BackupCredentials:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
        type: azure
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the backup credentials. Must be unique for the given
            tenant.
          type: string
        tenant_id:
          type: string
        type:
          description: Type of the credentials.
          enum:
          - azure
          - s3
          - s3-compatible
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.BackupJob:
      example:
        error_message: error_message
        completion_time: completion_time
        backup_spec: '{}'
        backup_capability: backup_capability
        cloud_snap_id: cloud_snap_id
        created_at: created_at
        cloud_credential_name: cloud_credential_name
        file_size: 0
        data_service_spec: '{}'
        backup_id: backup_id
        start_time: start_time
        deployment_target_id: deployment_target_id
        namespace_id: namespace_id
        updated_at: updated_at
        project_id: project_id
        completion_status: Active
        name: name
        error_code: JobFailed
        deployment_id: deployment_id
        id: id
        image_id: image_id
        timestamp: timestamp
      properties:
        backup_capability:
          description: BackupCapability of the deployment target when the snapshot
            was created
          type: string
        backup_id:
          description: BackupID of the backup which created the snapshot (required).
          type: string
        backup_spec:
          description: BackupSpec is the specification of the Backup at the time the
            snapshot was taken.
          properties: {}
          type: object
        cloud_credential_name:
          description: CloudCredentialName credentials to access snapshot.
          type: string
        cloud_snap_id:
          description: CloudSnapID snapshot of the backup volume.
          type: string
        completion_status:
          description: CompletionStatus of the snapshot.
          enum:
          - Active
          - Succeeded
          - Failed
          type: string
        completion_time:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_spec:
          description: DataServiceSpec is the specification of the Deployment at the
            time the snapshot was taken.
          properties: {}
          type: object
        deployment_id:
          description: DeploymentID of the deployment which was backed up (required).
          type: string
        deployment_target_id:
          description: DeploymentTargetID on which target the backup is created.
          type: string
        error_code:
          description: ErrorCode if CompletionStatus is "Failed"
          enum:
          - JobFailed
          - VolumeSnapshotFailed
          - PXCloudCredentialsNotFound
          type: string
        error_message:
          description: ErrorMessage associated with the ErrorCode
          type: string
        file_size:
          description: FileSize of the CloudSnap image.
          type: integer
        id:
          description: ID is auto generated on creation
          type: string
        image_id:
          description: ImageID is the ID of the data service's image that was backed
            up.
          type: string
        name:
          description: Name of custom resource on deployment target.
          type: string
        namespace_id:
          description: NamespaceID of the namespace where snapshot was created.
          type: string
        project_id:
          description: ProjectID of the project where the snapshot resides (required).
          type: string
        start_time:
          type: string
        timestamp:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.BackupJobStatusResponse:
      example:
        start_time: start_time
        completion_time: completion_time
        name: name
        status: status
      properties:
        completion_time:
          type: string
        name:
          type: string
        start_time:
          type: string
        status:
          type: string
      type: object
    models.BackupPolicy:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        schedules:
        - schedule: schedule
          retention_count: 0
          id: id
          type: incremental
        - schedule: schedule
          retention_count: 0
          id: id
          type: incremental
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the backup policy. Must be unique for the given tenant.
          type: string
        schedules:
          description: A list of the backup schedules. Must be non-empty.
          items:
            $ref: '#/components/schemas/models.BackupSchedule'
          type: array
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.BackupPolicySample:
      example:
        created: created
        schedules:
        - schedule: schedule
          retention_count: 0
          id: id
          type: incremental
        - schedule: schedule
          retention_count: 0
          id: id
          type: incremental
        name: name
        updated: updated
        version: 0
      properties:
        created:
          type: string
        name:
          description: Name of the backup policy. Must be unique for the given tenant.
          type: string
        schedules:
          description: A list of the backup schedules. Must be non-empty.
          items:
            $ref: '#/components/schemas/models.BackupSchedule'
          type: array
        updated:
          type: string
        version:
          type: integer
      type: object
    models.BackupSchedule:
      example:
        schedule: schedule
        retention_count: 0
        id: id
        type: incremental
      properties:
        id:
          description: An ID of the backup schedule to help the UI identify validation
            failures. The type is UUID and it is generated on the UI side.
          type: string
        retention_count:
          description: Number of retained backup jobs. Must be 1 or greater.
          type: integer
        schedule:
          description: CRON expression for the backup schedule.
          type: string
        type:
          description: Type of the backup schedule.
          enum:
          - incremental
          - full
          type: string
      type: object
    models.BackupTarget:
      example:
        bucket: bucket
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        backup_credentials_id: backup_credentials_id
        name: name
        created_at: created_at
        id: id
        region: region
        type: azure
      properties:
        account_id:
          type: string
        backup_credentials_id:
          type: string
        bucket:
          description: Bucket name for S3 or S3 compatible. Container name for Azure.
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the backup target. Must be unique for the given tenant.
          type: string
        region:
          description: Region of the bucket. Required for S3. Otherwise must be empty.
          type: string
        tenant_id:
          type: string
        type:
          description: Type of the backup target. Must match the used backup credentials.
          enum:
          - azure
          - s3
          - s3-compatible
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.BackupTargetState:
      example:
        error_message: error_message
        px_credentials_name: px_credentials_name
        deployment_target_id: deployment_target_id
        error_details: error_details
        px_credentials_id: px_credentials_id
        backup_target_id: backup_target_id
        error_code: deployment_target_unavailable
        state: pending
      properties:
        backup_target_id:
          type: string
        deployment_target_id:
          type: string
        error_code:
          description: More detailed specification of the error when the 'state' is
            in one of the failed states.
          enum:
          - deployment_target_unavailable
          - failed_to_create_px_credentials
          - failed_to_delete_px_credentials
          type: string
        error_details:
          description: More detailed error message possibly containing the root cause
            of the error, not suitable to show in the UI.
          type: string
        error_message:
          description: High level human-readable error message determined by the ErrorCode.
          type: string
        px_credentials_id:
          description: ID of the credentials in PX cluster.
          type: string
        px_credentials_name:
          description: Name of the credentials in PX cluster. This will be used when
            creating a new backup.
          type: string
        state:
          description: State of the synchronization of credentials.
          enum:
          - pending
          - successful
          - failed_create
          - failed_delete
          - failed_update
          type: string
      type: object
    models.Binding:
      example:
        role_name: role_name
        resource_ids:
        - resource_ids
        - resource_ids
      properties:
        resource_ids:
          items:
            type: string
          type: array
        role_name:
          type: string
      type: object
    models.ConfigItem:
      example:
        deploy_time: true
        value: value
        key: key
      properties:
        deploy_time:
          description: If true, user must fill the value for this configuration parameter
            when creating a new deployment.
          type: boolean
        key:
          description: Configuration key, transfers to the image's environment variable.
          type: string
        value:
          description: Configuration value.
          type: string
      type: object
    models.CopilotSearchResponse:
      example:
        data_service_id: data_service_id
        response: response
        query: query
        response_time: response_time
        id: id
      properties:
        data_service_id:
          type: string
        id:
          type: string
        query:
          type: string
        response:
          type: string
        response_time:
          type: string
      type: object
    models.DNSDetails:
      example:
        aws_details:
          secret_key: secret_key
          access_key: access_key
          hosted_zone_id: hosted_zone_id
        dns_zone: dns_zone
      properties:
        aws_details:
          $ref: '#/components/schemas/models.AWSDetails'
        dns_zone:
          type: string
      type: object
    models.DataService:
      example:
        coming_soon: true
        node_restrictions:
          simple_config:
          - 6
          - 6
          resize_disabled:
          - 0
          - 0
          downsize_enabled: true
        updated_at: updated_at
        name: name
        created_at: created_at
        nodes_limitations: nodes_limitations
        short_name: short_name
        id: id
        has_incremental_backup: true
        has_full_backup: true
      properties:
        coming_soon:
          type: boolean
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        has_full_backup:
          type: boolean
        has_incremental_backup:
          type: boolean
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        node_restrictions:
          $ref: '#/components/schemas/models.NodeRestrictions'
        nodes_limitations:
          description: TODO DS-2341 Remove this field once everything is implemented
            to use the NodeRestrictions.
          type: string
        short_name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Deployment:
      example:
        tenant_id: tenant_id
        tls_enabled: true
        configuration: '{}'
        connection_details: '{}'
        created_at: created_at
        tls_issuer: tls_issuer
        error:
          code: code
          details: details
          message: message
        deployment_target_id: deployment_target_id
        updated_at: updated_at
        project_id: project_id
        dns_zone: dns_zone
        id: id
        node_count: 1
        state: created
        load_balancer_source_ranges:
        - load_balancer_source_ranges
        - load_balancer_source_ranges
        storage_options:
          fg: true
          provisioner: provisioner
          repl: 5
          secure: true
          fs: fs
        deployment_manifest:
          manifest: '{}'
          replicas: 6
          created_at: created_at
          health: Partially Available
          readyReplicas: 0
          restore_status: Pending
          restoring: true
          updated_at: updated_at
          deployment_id: deployment_id
          id: id
          status: Deploying
          timestamp: timestamp
        restore_id: restore_id
        data_service_id: data_service_id
        restore:
          completion_time: completion_time
          apply_status: apply_status
          cloud_snap_id: cloud_snap_id
          created_at: created_at
          cluster_resource_name: cluster_resource_name
          cloud_credential_name: cloud_credential_name
          start_time: start_time
          deployment_target_id: deployment_target_id
          namespace_id: namespace_id
          updated_at: updated_at
          name: name
          error_code: error_code
          backup_job_id: backup_job_id
          deployment_id: deployment_id
          id: id
          status: status
          timestamp: timestamp
        resources:
          storage_request: storage_request
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        cluster_resource_name: cluster_resource_name
        version_id: version_id
        service_type: ClusterIP
        account_id: account_id
        namespace_id: namespace_id
        name: name
        namespace:
          tenant_id: tenant_id
          account_id: account_id
          deployment_target_id: deployment_target_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          status: status
        initialize: Once
        image_id: image_id
        deployment_target:
          tenant_id: tenant_id
          metadata:
            kube_api_version: kube_api_version
            px_status: px_status
            pds_chart_version: pds_chart_version
            pds_features: pds_features
            px_service_namespace: px_service_namespace
            pds_operator_version: pds_operator_version
            kube_platform: kube_platform
            px_csi_enabled: px_csi_enabled
            px_version: px_version
          teleport_agent_version: teleport_agent_version
          capabilities:
            backup: backup
            capabilities: capabilities
            restore: restore
            zookeeper: zookeeper
            crd_reporting: crd_reporting
            event_reporting: event_reporting
            rabbitmq: rabbitmq
            redis: redis
            database: database
            elasticsearch: elasticsearch
            postgresql: postgresql
            sqlserver: sqlserver
            cassandra: cassandra
            couchbase: couchbase
            consul: consul
            kafka: kafka
            mysql: mysql
            mongodb: mongodb
            data_service_tls: data_service_tls
          connection_status: connection_status
          created_at: created_at
          last_health_check: last_health_check
          tls_issuer: tls_issuer
          tls_required: true
          cluster_id: cluster_id
          account_id: account_id
          updated_at: updated_at
          name: name
          last_operator_heartbeat: last_operator_heartbeat
          id: id
          status: status
      properties:
        account_id:
          description: AccountID which account the deployment belongs to (models.Account).
          type: string
        cluster_resource_name:
          description: ClusterResourceName k8s resource name for deployment, built
            from [data service short name + name + id].
          type: string
        configuration:
          description: Configuration data service specific configuration for the deployment
            (models.ApplicationConfigurationTemplate).
          properties: {}
          type: object
        connection_details:
          description: ConnectionDetails urls, ports, credentials, etc for connecting
            to the data service.
          properties: {}
          type: object
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          description: DataServiceID type of data service (models.DataService).
          type: string
        deployment_manifest:
          $ref: '#/components/schemas/models.DeploymentManifest'
        deployment_target:
          $ref: '#/components/schemas/models.DeploymentTarget'
        deployment_target_id:
          description: DeploymentTargetID on which target the data service is deployed
            (models.DeploymentTarget).
          type: string
        dns_zone:
          description: DNSZone domain which this deployment should be a part of (eg
            pds-dns.io).
          type: string
        error:
          $ref: '#/components/schemas/models.ErrorData'
        id:
          description: ID is auto generated on creation
          type: string
        image_id:
          description: ImageID image of data service (models.Image).
          type: string
        initialize:
          description: Initialize used to control startup scripts.
          enum:
          - Once
          - Always
          - Never
          - Manual
          type: string
        load_balancer_source_ranges:
          description: LoadBalancerSourceRanges can be used to restrict access to
            the data service (eg 37.0.113.0/24;82.0.220.42/24).
          items:
            type: string
          type: array
        name:
          description: Name given by user when creating the deployment.
          type: string
        namespace:
          $ref: '#/components/schemas/models.Namespace'
        namespace_id:
          description: NamespaceID in which namespace the data service is deployed
            (models.Namespace).
          type: string
        node_count:
          description: NodeCount total nodes in the deployment.
          type: integer
        project_id:
          description: ProjectID which project the deployment belongs to (models.Project).
          type: string
        resources:
          $ref: '#/components/schemas/models.DeploymentResources'
        restore:
          $ref: '#/components/schemas/models.Restore'
        restore_id:
          description: ID of the restore to which the deployment belongs to (model.Restore).
          type: string
        service_type:
          description: ServiceType k8s service type.
          enum:
          - ClusterIP
          - NodePort
          - LoadBalancer
          - ExternalName
          type: string
        state:
          description: State of deployment.
          enum:
          - created
          - pending
          - failed
          type: string
        storage_options:
          $ref: '#/components/schemas/models.DeploymentStorageOptions'
        tenant_id:
          description: TenantID which tenant the deployment belongs to (models.Tenant).
          type: string
        tls_enabled:
          description: Whether Transport Layer Security support is enabled
          type: boolean
        tls_issuer:
          description: The Issuer (~Certificate Authority) for the TLS certificates
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
        version_id:
          description: VersionID version of data service (models.Version).
          type: string
      type: object
    models.DeploymentManifest:
      example:
        manifest: '{}'
        replicas: 6
        created_at: created_at
        health: Partially Available
        readyReplicas: 0
        restore_status: Pending
        restoring: true
        updated_at: updated_at
        deployment_id: deployment_id
        id: id
        status: Deploying
        timestamp: timestamp
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        deployment:
          $ref: '#/components/schemas/models.Deployment'
        deployment_id:
          type: string
        health:
          description: Health represents the real state on the target cluster.
          enum:
          - Partially Available
          - Available
          - Unavailable
          - Unknown
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        manifest:
          properties: {}
          type: object
        readyReplicas:
          type: integer
        replicas:
          type: integer
        restore_status:
          description: Status of the restore process on the Target Cluster
          enum:
          - Pending
          - RestoringCloudSnap
          - RestoringDataServiceCR
          - RestoringDeployment
          - DeploymentEnteringNormalMode
          - Successful
          - Failed
          - ""
          type: string
        restoring:
          description: Restoring represents whether restore is happening or not.
          type: boolean
        status:
          description: |-
            Status represents a granular state of the deployment. This includes transitional states like 'Deploying',
            which can only be inferred by the PDS control plane.
          enum:
          - Deploying
          - Partially Available
          - Available
          - Unavailable
          - Failed
          - Unknown
          - Restoring
          type: string
        timestamp:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.DeploymentResources:
      example:
        storage_request: storage_request
        cpu_limit: cpu_limit
        memory_request: memory_request
        memory_limit: memory_limit
        cpu_request: cpu_request
      properties:
        cpu_limit:
          type: string
        cpu_request:
          type: string
        memory_limit:
          type: string
        memory_request:
          type: string
        storage_request:
          type: string
      type: object
    models.DeploymentStorageOptions:
      example:
        fg: true
        provisioner: provisioner
        repl: 5
        secure: true
        fs: fs
      properties:
        fg:
          type: boolean
        fs:
          type: string
        provisioner:
          type: string
        repl:
          type: integer
        secure:
          type: boolean
      type: object
    models.DeploymentTarget:
      example:
        tenant_id: tenant_id
        metadata:
          kube_api_version: kube_api_version
          px_status: px_status
          pds_chart_version: pds_chart_version
          pds_features: pds_features
          px_service_namespace: px_service_namespace
          pds_operator_version: pds_operator_version
          kube_platform: kube_platform
          px_csi_enabled: px_csi_enabled
          px_version: px_version
        teleport_agent_version: teleport_agent_version
        capabilities:
          backup: backup
          capabilities: capabilities
          restore: restore
          zookeeper: zookeeper
          crd_reporting: crd_reporting
          event_reporting: event_reporting
          rabbitmq: rabbitmq
          redis: redis
          database: database
          elasticsearch: elasticsearch
          postgresql: postgresql
          sqlserver: sqlserver
          cassandra: cassandra
          couchbase: couchbase
          consul: consul
          kafka: kafka
          mysql: mysql
          mongodb: mongodb
          data_service_tls: data_service_tls
        connection_status: connection_status
        created_at: created_at
        last_health_check: last_health_check
        tls_issuer: tls_issuer
        tls_required: true
        cluster_id: cluster_id
        account_id: account_id
        updated_at: updated_at
        name: name
        last_operator_heartbeat: last_operator_heartbeat
        id: id
        status: status
      properties:
        account_id:
          type: string
        capabilities:
          $ref: '#/components/schemas/models.DeploymentTargetCapabilities'
        cluster_id:
          type: string
        connection_status:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        last_health_check:
          type: string
        last_operator_heartbeat:
          type: string
        metadata:
          $ref: '#/components/schemas/models.DeploymentTargetMetadata'
        name:
          type: string
        status:
          type: string
        teleport_agent_version:
          type: string
        tenant_id:
          type: string
        tls_issuer:
          type: string
        tls_required:
          type: boolean
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.DeploymentTargetCapabilities:
      example:
        backup: backup
        capabilities: capabilities
        restore: restore
        zookeeper: zookeeper
        crd_reporting: crd_reporting
        event_reporting: event_reporting
        rabbitmq: rabbitmq
        redis: redis
        database: database
        elasticsearch: elasticsearch
        postgresql: postgresql
        sqlserver: sqlserver
        cassandra: cassandra
        couchbase: couchbase
        consul: consul
        kafka: kafka
        mysql: mysql
        mongodb: mongodb
        data_service_tls: data_service_tls
      properties:
        backup:
          type: string
        capabilities:
          type: string
        cassandra:
          type: string
        consul:
          type: string
        couchbase:
          type: string
        crd_reporting:
          type: string
        data_service_tls:
          type: string
        database:
          type: string
        elasticsearch:
          type: string
        event_reporting:
          type: string
        kafka:
          type: string
        mongodb:
          type: string
        mysql:
          type: string
        postgresql:
          type: string
        rabbitmq:
          type: string
        redis:
          type: string
        restore:
          type: string
        sqlserver:
          type: string
        zookeeper:
          type: string
      type: object
    models.DeploymentTargetDeploymentEvent:
      example:
        reason: reason
        deployment_target_id: deployment_target_id
        count: 0
        name: name
        namespace: namespace
        action: action
        resource_kind: resource_kind
        deployment_id: deployment_id
        message: message
        resource_name: resource_name
        type: type
        timestamp: timestamp
      properties:
        action:
          type: string
        count:
          type: integer
        deployment_id:
          type: string
        deployment_target_id:
          type: string
        message:
          type: string
        name:
          type: string
        namespace:
          type: string
        reason:
          type: string
        resource_kind:
          type: string
        resource_name:
          type: string
        timestamp:
          type: string
        type:
          type: string
      type: object
    models.DeploymentTargetLastSyncedEvent:
      example:
        timestamp: 0
      properties:
        timestamp:
          description: Timestamp of the last synced event for the deployment target
          format: int64
          type: integer
      required:
      - timestamp
      type: object
    models.DeploymentTargetMetadata:
      example:
        kube_api_version: kube_api_version
        px_status: px_status
        pds_chart_version: pds_chart_version
        pds_features: pds_features
        px_service_namespace: px_service_namespace
        pds_operator_version: pds_operator_version
        kube_platform: kube_platform
        px_csi_enabled: px_csi_enabled
        px_version: px_version
      properties:
        kube_api_version:
          type: string
        kube_platform:
          type: string
        pds_chart_version:
          type: string
        pds_features:
          type: string
        pds_operator_version:
          type: string
        px_csi_enabled:
          type: string
        px_service_namespace:
          type: string
        px_status:
          type: string
        px_version:
          type: string
      type: object
    models.EULADetails:
      example:
        accepted_version: accepted_version
        accepted: true
      properties:
        accepted:
          type: boolean
        accepted_version:
          type: string
      type: object
    models.ErrorData:
      example:
        code: code
        details: details
        message: message
      properties:
        code:
          description: More detailed specification of the error when the 'state' is
            in one of the failed states.
          type: string
        details:
          description: More detailed error message possibly containing the root cause.
          type: string
        message:
          description: High level human-readable error message determined by the ErrorCode.
          type: string
      type: object
    models.GoogleCredentials:
      properties:
        json_key:
          description: JSON key for the Google Storage account.
          type: string
        project_id:
          description: Project ID of the Google project.
          type: string
      type: object
    models.IAM:
      example:
        account_id: account_id
        actor_type: actor_type
        updated_at: updated_at
        access_policy:
          account_id: account_id
          namespace:
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
          project:
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
          global:
          - global
          - global
          account:
          - account
          - account
          tenant:
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
          - role_name: role_name
            resource_ids:
            - resource_ids
            - resource_ids
        created_at: created_at
        actor_id: actor_id
        id: id
      properties:
        access_policy:
          $ref: '#/components/schemas/models.AccessPolicyWithAccountID'
        account_id:
          type: string
        actor_id:
          type: string
        actor_type:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Image:
      example:
        registry: registry
        images:
          key: images
        capabilities: '{}'
        data_service_id: data_service_id
        created_at: created_at
        tls_available: true
        version_id: version_id
        updated_at: updated_at
        build: build
        name: name
        namespace: namespace
        id: id
        tag: tag
      properties:
        build:
          type: string
        capabilities:
          properties: {}
          type: object
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        images:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        namespace:
          type: string
        registry:
          type: string
        tag:
          type: string
        tls_available:
          type: boolean
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
        version_id:
          type: string
      type: object
    models.LegacyAccountBinding:
      example:
        role_name: role_name
        account_id: account_id
        actor_type: actor_type
        actor_id: actor_id
      properties:
        account_id:
          type: string
        actor_id:
          type: string
        actor_type:
          type: string
        role_name:
          type: string
      type: object
    models.LegacyGlobalBinding:
      example:
        role_name: role_name
        actor_type: actor_type
        actor_id: actor_id
      properties:
        actor_id:
          type: string
        actor_type:
          type: string
        role_name:
          type: string
      type: object
    models.LegacyProjectBinding:
      example:
        role_name: role_name
        actor_type: actor_type
        project_id: project_id
        actor_id: actor_id
      properties:
        actor_id:
          type: string
        actor_type:
          description: 'TODO: https://portworx.atlassian.net/browse/DS-6197: Fetch
            ActorType from DB instead of taking in request'
          type: string
        project_id:
          type: string
        role_name:
          type: string
      type: object
    models.LegacyTenantBinding:
      example:
        role_name: role_name
        tenant_id: tenant_id
        actor_type: actor_type
        actor_id: actor_id
      properties:
        actor_id:
          type: string
        actor_type:
          description: 'TODO: https://portworx.atlassian.net/browse/DS-6197: Fetch
            ActorType from DB instead of taking in request'
          type: string
        role_name:
          type: string
        tenant_id:
          type: string
      type: object
    models.MAASDetails:
      example:
        maas_id: maas_id
      properties:
        maas_id:
          type: string
      type: object
    models.Namespace:
      example:
        tenant_id: tenant_id
        account_id: account_id
        deployment_target_id: deployment_target_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
        status: status
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        deployment_target_id:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        status:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.NodeRestrictions:
      example:
        simple_config:
        - 6
        - 6
        resize_disabled:
        - 0
        - 0
        downsize_enabled: true
      properties:
        downsize_enabled:
          description: Whether downsizing the cluster is enabled during editing.
          type: boolean
        resize_disabled:
          description: List of all node sizes that are not allowed to change during
            editing.
          items:
            type: integer
          type: array
        simple_config:
          description: List of all allowed node sizes.
          items:
            type: integer
          type: array
      type: object
    models.PaginatedResult-models_Account:
      example:
        pagination:
          continuation: continuation
        data:
        - global_config:
            version_updatability: version_updatability
            version_availability: version_availability
            tls_preview_enabled: tls_preview_enabled
          pxone_features_enabled: true
          updated_at: updated_at
          name: name
          created_at: created_at
          baas_features_enabled: true
          eula:
            accepted_version: accepted_version
            accepted: true
          id: id
          pds_features_enabled: true
        - global_config:
            version_updatability: version_updatability
            version_availability: version_availability
            tls_preview_enabled: tls_preview_enabled
          pxone_features_enabled: true
          updated_at: updated_at
          name: name
          created_at: created_at
          baas_features_enabled: true
          eula:
            accepted_version: accepted_version
            accepted: true
          id: id
          pds_features_enabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Account'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_AccountRoleInvitation:
      example:
        pagination:
          continuation: continuation
        data:
        - role_name: role_name
          account_id: account_id
          updated_at: updated_at
          created_at: created_at
          id: id
          email: email
          issuer: issuer
        - role_name: role_name
          account_id: account_id
          updated_at: updated_at
          created_at: created_at
          id: id
          email: email
          issuer: issuer
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.AccountRoleInvitation'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_ApplicationConfigurationTemplate:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          data_service_id: data_service_id
          updated_at: updated_at
          config_items:
          - deploy_time: true
            value: value
            key: key
          - deploy_time: true
            value: value
            key: key
          name: name
          created_at: created_at
          id: id
        - tenant_id: tenant_id
          account_id: account_id
          data_service_id: data_service_id
          updated_at: updated_at
          config_items:
          - deploy_time: true
            value: value
            key: key
          - deploy_time: true
            value: value
            key: key
          name: name
          created_at: created_at
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ApplicationConfigurationTemplate'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Backup:
      example:
        pagination:
          continuation: continuation
        data:
        - suspend: true
          tenant_id: tenant_id
          data_service_id: data_service_id
          deployment_name: deployment_name
          backup_target_id: backup_target_id
          backup_type: adhoc
          created_at: created_at
          cluster_resource_name: cluster_resource_name
          backup_level: snapshot
          job_history_limit: 0
          reclaim_policy: retain
          schedule: schedule
          account_id: account_id
          deployment_target_id: deployment_target_id
          namespace_id: namespace_id
          updated_at: updated_at
          project_id: project_id
          deployment_id: deployment_id
          id: id
          state: created
        - suspend: true
          tenant_id: tenant_id
          data_service_id: data_service_id
          deployment_name: deployment_name
          backup_target_id: backup_target_id
          backup_type: adhoc
          created_at: created_at
          cluster_resource_name: cluster_resource_name
          backup_level: snapshot
          job_history_limit: 0
          reclaim_policy: retain
          schedule: schedule
          account_id: account_id
          deployment_target_id: deployment_target_id
          namespace_id: namespace_id
          updated_at: updated_at
          project_id: project_id
          deployment_id: deployment_id
          id: id
          state: created
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Backup'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_BackupCredentials:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          type: azure
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          type: azure
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupCredentials'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_BackupJob:
      example:
        pagination:
          continuation: continuation
        data:
        - error_message: error_message
          completion_time: completion_time
          backup_spec: '{}'
          backup_capability: backup_capability
          cloud_snap_id: cloud_snap_id
          created_at: created_at
          cloud_credential_name: cloud_credential_name
          file_size: 0
          data_service_spec: '{}'
          backup_id: backup_id
          start_time: start_time
          deployment_target_id: deployment_target_id
          namespace_id: namespace_id
          updated_at: updated_at
          project_id: project_id
          completion_status: Active
          name: name
          error_code: JobFailed
          deployment_id: deployment_id
          id: id
          image_id: image_id
          timestamp: timestamp
        - error_message: error_message
          completion_time: completion_time
          backup_spec: '{}'
          backup_capability: backup_capability
          cloud_snap_id: cloud_snap_id
          created_at: created_at
          cloud_credential_name: cloud_credential_name
          file_size: 0
          data_service_spec: '{}'
          backup_id: backup_id
          start_time: start_time
          deployment_target_id: deployment_target_id
          namespace_id: namespace_id
          updated_at: updated_at
          project_id: project_id
          completion_status: Active
          name: name
          error_code: JobFailed
          deployment_id: deployment_id
          id: id
          image_id: image_id
          timestamp: timestamp
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupJob'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_BackupPolicy:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          schedules:
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          name: name
          created_at: created_at
          id: id
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          schedules:
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          - schedule: schedule
            retention_count: 0
            id: id
            type: incremental
          name: name
          created_at: created_at
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupPolicy'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_BackupTarget:
      example:
        pagination:
          continuation: continuation
        data:
        - bucket: bucket
          tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          backup_credentials_id: backup_credentials_id
          name: name
          created_at: created_at
          id: id
          region: region
          type: azure
        - bucket: bucket
          tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          backup_credentials_id: backup_credentials_id
          name: name
          created_at: created_at
          id: id
          region: region
          type: azure
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.BackupTarget'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_DataService:
      example:
        pagination:
          continuation: continuation
        data:
        - coming_soon: true
          node_restrictions:
            simple_config:
            - 6
            - 6
            resize_disabled:
            - 0
            - 0
            downsize_enabled: true
          updated_at: updated_at
          name: name
          created_at: created_at
          nodes_limitations: nodes_limitations
          short_name: short_name
          id: id
          has_incremental_backup: true
          has_full_backup: true
        - coming_soon: true
          node_restrictions:
            simple_config:
            - 6
            - 6
            resize_disabled:
            - 0
            - 0
            downsize_enabled: true
          updated_at: updated_at
          name: name
          created_at: created_at
          nodes_limitations: nodes_limitations
          short_name: short_name
          id: id
          has_incremental_backup: true
          has_full_backup: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.DataService'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Deployment:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          tls_enabled: true
          configuration: '{}'
          connection_details: '{}'
          created_at: created_at
          tls_issuer: tls_issuer
          error:
            code: code
            details: details
            message: message
          deployment_target_id: deployment_target_id
          updated_at: updated_at
          project_id: project_id
          dns_zone: dns_zone
          id: id
          node_count: 1
          state: created
          load_balancer_source_ranges:
          - load_balancer_source_ranges
          - load_balancer_source_ranges
          storage_options:
            fg: true
            provisioner: provisioner
            repl: 5
            secure: true
            fs: fs
          deployment_manifest:
            manifest: '{}'
            replicas: 6
            created_at: created_at
            health: Partially Available
            readyReplicas: 0
            restore_status: Pending
            restoring: true
            updated_at: updated_at
            deployment_id: deployment_id
            id: id
            status: Deploying
            timestamp: timestamp
          restore_id: restore_id
          data_service_id: data_service_id
          restore:
            completion_time: completion_time
            apply_status: apply_status
            cloud_snap_id: cloud_snap_id
            created_at: created_at
            cluster_resource_name: cluster_resource_name
            cloud_credential_name: cloud_credential_name
            start_time: start_time
            deployment_target_id: deployment_target_id
            namespace_id: namespace_id
            updated_at: updated_at
            name: name
            error_code: error_code
            backup_job_id: backup_job_id
            deployment_id: deployment_id
            id: id
            status: status
            timestamp: timestamp
          resources:
            storage_request: storage_request
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          cluster_resource_name: cluster_resource_name
          version_id: version_id
          service_type: ClusterIP
          account_id: account_id
          namespace_id: namespace_id
          name: name
          namespace:
            tenant_id: tenant_id
            account_id: account_id
            deployment_target_id: deployment_target_id
            updated_at: updated_at
            name: name
            created_at: created_at
            id: id
            status: status
          initialize: Once
          image_id: image_id
          deployment_target:
            tenant_id: tenant_id
            metadata:
              kube_api_version: kube_api_version
              px_status: px_status
              pds_chart_version: pds_chart_version
              pds_features: pds_features
              px_service_namespace: px_service_namespace
              pds_operator_version: pds_operator_version
              kube_platform: kube_platform
              px_csi_enabled: px_csi_enabled
              px_version: px_version
            teleport_agent_version: teleport_agent_version
            capabilities:
              backup: backup
              capabilities: capabilities
              restore: restore
              zookeeper: zookeeper
              crd_reporting: crd_reporting
              event_reporting: event_reporting
              rabbitmq: rabbitmq
              redis: redis
              database: database
              elasticsearch: elasticsearch
              postgresql: postgresql
              sqlserver: sqlserver
              cassandra: cassandra
              couchbase: couchbase
              consul: consul
              kafka: kafka
              mysql: mysql
              mongodb: mongodb
              data_service_tls: data_service_tls
            connection_status: connection_status
            created_at: created_at
            last_health_check: last_health_check
            tls_issuer: tls_issuer
            tls_required: true
            cluster_id: cluster_id
            account_id: account_id
            updated_at: updated_at
            name: name
            last_operator_heartbeat: last_operator_heartbeat
            id: id
            status: status
        - tenant_id: tenant_id
          tls_enabled: true
          configuration: '{}'
          connection_details: '{}'
          created_at: created_at
          tls_issuer: tls_issuer
          error:
            code: code
            details: details
            message: message
          deployment_target_id: deployment_target_id
          updated_at: updated_at
          project_id: project_id
          dns_zone: dns_zone
          id: id
          node_count: 1
          state: created
          load_balancer_source_ranges:
          - load_balancer_source_ranges
          - load_balancer_source_ranges
          storage_options:
            fg: true
            provisioner: provisioner
            repl: 5
            secure: true
            fs: fs
          deployment_manifest:
            manifest: '{}'
            replicas: 6
            created_at: created_at
            health: Partially Available
            readyReplicas: 0
            restore_status: Pending
            restoring: true
            updated_at: updated_at
            deployment_id: deployment_id
            id: id
            status: Deploying
            timestamp: timestamp
          restore_id: restore_id
          data_service_id: data_service_id
          restore:
            completion_time: completion_time
            apply_status: apply_status
            cloud_snap_id: cloud_snap_id
            created_at: created_at
            cluster_resource_name: cluster_resource_name
            cloud_credential_name: cloud_credential_name
            start_time: start_time
            deployment_target_id: deployment_target_id
            namespace_id: namespace_id
            updated_at: updated_at
            name: name
            error_code: error_code
            backup_job_id: backup_job_id
            deployment_id: deployment_id
            id: id
            status: status
            timestamp: timestamp
          resources:
            storage_request: storage_request
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          cluster_resource_name: cluster_resource_name
          version_id: version_id
          service_type: ClusterIP
          account_id: account_id
          namespace_id: namespace_id
          name: name
          namespace:
            tenant_id: tenant_id
            account_id: account_id
            deployment_target_id: deployment_target_id
            updated_at: updated_at
            name: name
            created_at: created_at
            id: id
            status: status
          initialize: Once
          image_id: image_id
          deployment_target:
            tenant_id: tenant_id
            metadata:
              kube_api_version: kube_api_version
              px_status: px_status
              pds_chart_version: pds_chart_version
              pds_features: pds_features
              px_service_namespace: px_service_namespace
              pds_operator_version: pds_operator_version
              kube_platform: kube_platform
              px_csi_enabled: px_csi_enabled
              px_version: px_version
            teleport_agent_version: teleport_agent_version
            capabilities:
              backup: backup
              capabilities: capabilities
              restore: restore
              zookeeper: zookeeper
              crd_reporting: crd_reporting
              event_reporting: event_reporting
              rabbitmq: rabbitmq
              redis: redis
              database: database
              elasticsearch: elasticsearch
              postgresql: postgresql
              sqlserver: sqlserver
              cassandra: cassandra
              couchbase: couchbase
              consul: consul
              kafka: kafka
              mysql: mysql
              mongodb: mongodb
              data_service_tls: data_service_tls
            connection_status: connection_status
            created_at: created_at
            last_health_check: last_health_check
            tls_issuer: tls_issuer
            tls_required: true
            cluster_id: cluster_id
            account_id: account_id
            updated_at: updated_at
            name: name
            last_operator_heartbeat: last_operator_heartbeat
            id: id
            status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Deployment'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_DeploymentTarget:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          metadata:
            kube_api_version: kube_api_version
            px_status: px_status
            pds_chart_version: pds_chart_version
            pds_features: pds_features
            px_service_namespace: px_service_namespace
            pds_operator_version: pds_operator_version
            kube_platform: kube_platform
            px_csi_enabled: px_csi_enabled
            px_version: px_version
          teleport_agent_version: teleport_agent_version
          capabilities:
            backup: backup
            capabilities: capabilities
            restore: restore
            zookeeper: zookeeper
            crd_reporting: crd_reporting
            event_reporting: event_reporting
            rabbitmq: rabbitmq
            redis: redis
            database: database
            elasticsearch: elasticsearch
            postgresql: postgresql
            sqlserver: sqlserver
            cassandra: cassandra
            couchbase: couchbase
            consul: consul
            kafka: kafka
            mysql: mysql
            mongodb: mongodb
            data_service_tls: data_service_tls
          connection_status: connection_status
          created_at: created_at
          last_health_check: last_health_check
          tls_issuer: tls_issuer
          tls_required: true
          cluster_id: cluster_id
          account_id: account_id
          updated_at: updated_at
          name: name
          last_operator_heartbeat: last_operator_heartbeat
          id: id
          status: status
        - tenant_id: tenant_id
          metadata:
            kube_api_version: kube_api_version
            px_status: px_status
            pds_chart_version: pds_chart_version
            pds_features: pds_features
            px_service_namespace: px_service_namespace
            pds_operator_version: pds_operator_version
            kube_platform: kube_platform
            px_csi_enabled: px_csi_enabled
            px_version: px_version
          teleport_agent_version: teleport_agent_version
          capabilities:
            backup: backup
            capabilities: capabilities
            restore: restore
            zookeeper: zookeeper
            crd_reporting: crd_reporting
            event_reporting: event_reporting
            rabbitmq: rabbitmq
            redis: redis
            database: database
            elasticsearch: elasticsearch
            postgresql: postgresql
            sqlserver: sqlserver
            cassandra: cassandra
            couchbase: couchbase
            consul: consul
            kafka: kafka
            mysql: mysql
            mongodb: mongodb
            data_service_tls: data_service_tls
          connection_status: connection_status
          created_at: created_at
          last_health_check: last_health_check
          tls_issuer: tls_issuer
          tls_required: true
          cluster_id: cluster_id
          account_id: account_id
          updated_at: updated_at
          name: name
          last_operator_heartbeat: last_operator_heartbeat
          id: id
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.DeploymentTarget'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Image:
      example:
        pagination:
          continuation: continuation
        data:
        - registry: registry
          images:
            key: images
          capabilities: '{}'
          data_service_id: data_service_id
          created_at: created_at
          tls_available: true
          version_id: version_id
          updated_at: updated_at
          build: build
          name: name
          namespace: namespace
          id: id
          tag: tag
        - registry: registry
          images:
            key: images
          capabilities: '{}'
          data_service_id: data_service_id
          created_at: created_at
          tls_available: true
          version_id: version_id
          updated_at: updated_at
          build: build
          name: name
          namespace: namespace
          id: id
          tag: tag
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Image'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Namespace:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          deployment_target_id: deployment_target_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          status: status
        - tenant_id: tenant_id
          account_id: account_id
          deployment_target_id: deployment_target_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Namespace'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Project:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Project'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_ResourceSettingsTemplate:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          data_service_id: data_service_id
          updated_at: updated_at
          storage_request: storage_request
          cpu_limit: cpu_limit
          name: name
          created_at: created_at
          memory_request: memory_request
          id: id
          memory_limit: memory_limit
          cpu_request: cpu_request
        - tenant_id: tenant_id
          account_id: account_id
          data_service_id: data_service_id
          updated_at: updated_at
          storage_request: storage_request
          cpu_limit: cpu_limit
          name: name
          created_at: created_at
          memory_request: memory_request
          id: id
          memory_limit: memory_limit
          cpu_request: cpu_request
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ResourceSettingsTemplate'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_ServiceAccount:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
        - tenant_id: tenant_id
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ServiceAccount'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_ServiceIdentity:
      example:
        pagination:
          continuation: continuation
        data:
        - account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          description: description
          secret_generation_count: 0
          id: id
          created_by: created_by
          secret_updated_at: secret_updated_at
          client_id: client_id
          enabled: true
        - account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          description: description
          secret_generation_count: 0
          id: id
          created_by: created_by
          secret_updated_at: secret_updated_at
          client_id: client_id
          enabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.ServiceIdentity'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_StorageOptionsTemplate:
      example:
        pagination:
          continuation: continuation
        data:
        - tenant_id: tenant_id
          fg: true
          provisioner: pxd.portworx.com
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          repl: 0
          id: id
          secure: true
          fs: xfs
        - tenant_id: tenant_id
          fg: true
          provisioner: pxd.portworx.com
          account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          repl: 0
          id: id
          secure: true
          fs: xfs
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.StorageOptionsTemplate'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Tenant:
      example:
        pagination:
          continuation: continuation
        data:
        - account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
        - account_id: account_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Tenant'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_User:
      example:
        pagination:
          continuation: continuation
        data:
        - updated_at: updated_at
          created_at: created_at
          external_id: external_id
          id: id
          email: email
          issuer: issuer
        - updated_at: updated_at
          created_at: created_at
          external_id: external_id
          id: id
          email: email
          issuer: issuer
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.User'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_UserAPIKey:
      example:
        pagination:
          continuation: continuation
        data:
        - expires_at: expires_at
          updated_at: updated_at
          user_id: user_id
          jwt_token: jwt_token
          name: name
          created_at: created_at
          id: id
          enabled: true
        - expires_at: expires_at
          updated_at: updated_at
          user_id: user_id
          jwt_token: jwt_token
          name: name
          created_at: created_at
          id: id
          enabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.UserAPIKey'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.PaginatedResult-models_Version:
      example:
        pagination:
          continuation: continuation
        data:
        - data_service_id: data_service_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          enabled: true
        - data_service_id: data_service_id
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          enabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/models.Version'
          type: array
        pagination:
          $ref: '#/components/schemas/constraint.Pagination'
      type: object
    models.Project:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.ResourceSettingsSample:
      example:
        data_service_id: data_service_id
        storage_request: storage_request
        created: created
        cpu_limit: cpu_limit
        name: name
        memory_request: memory_request
        memory_limit: memory_limit
        updated: updated
        version: 0
        cpu_request: cpu_request
      properties:
        cpu_limit:
          description: Maximal amount of CPU cores the deployment will have access
            to inside k8s.
          type: string
        cpu_request:
          description: Minimal amount of CPU cores the deployment will get reserved
            inside k8s.
          type: string
        created:
          type: string
        data_service_id:
          type: string
        memory_limit:
          description: Maximal amount of RAM the deployment will have access to inside
            k8s.
          type: string
        memory_request:
          description: Minimal amount of RAM the deployment will get reserved inside
            k8s.
          type: string
        name:
          description: Name of the template. Must be unique for a specific data service
            within the tenant scope.
          type: string
        storage_request:
          description: Amount of disk space the deployment will get reserved inside
            k8s.
          type: string
        updated:
          type: string
        version:
          type: integer
      type: object
    models.ResourceSettingsTemplate:
      example:
        tenant_id: tenant_id
        account_id: account_id
        data_service_id: data_service_id
        updated_at: updated_at
        storage_request: storage_request
        cpu_limit: cpu_limit
        name: name
        created_at: created_at
        memory_request: memory_request
        id: id
        memory_limit: memory_limit
        cpu_request: cpu_request
      properties:
        account_id:
          type: string
        cpu_limit:
          description: Maximal amount of CPU cores the deployment will have access
            to inside k8s.
          type: string
        cpu_request:
          description: Minimal amount of CPU cores the deployment will get reserved
            inside k8s.
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        memory_limit:
          description: Maximal amount of RAM the deployment will have access to inside
            k8s.
          type: string
        memory_request:
          description: Minimal amount of RAM the deployment will get reserved inside
            k8s.
          type: string
        name:
          description: Name of the template. Must be unique for a specific data service
            within the tenant scope.
          type: string
        storage_request:
          description: Amount of disk space the deployment will get reserved inside
            k8s.
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Restore:
      example:
        completion_time: completion_time
        apply_status: apply_status
        cloud_snap_id: cloud_snap_id
        created_at: created_at
        cluster_resource_name: cluster_resource_name
        cloud_credential_name: cloud_credential_name
        start_time: start_time
        deployment_target_id: deployment_target_id
        namespace_id: namespace_id
        updated_at: updated_at
        name: name
        error_code: error_code
        backup_job_id: backup_job_id
        deployment_id: deployment_id
        id: id
        status: status
        timestamp: timestamp
      properties:
        apply_status:
          description: Status of sending Restore CR to the Target Cluster
          type: string
        backup_job_id:
          description: ID of the backup to be restored, the job might be already deleted
          type: string
        cloud_credential_name:
          description: Identifier of the PX cloud credentials of the storage with
            the backup
          type: string
        cloud_snap_id:
          description: ID of the PX cloud snapshot with the backup
          type: string
        cluster_resource_name:
          description: ClusterResourceName k8s resource name for deployment, built
            from [restore + name + id].
          type: string
        completion_time:
          description: Completion time of the restore process
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        deployment_id:
          description: ID of the new deployment that will contain restored data
          type: string
        deployment_target_id:
          description: ID of the deployment target where the restore is applied
          type: string
        error_code:
          description: Error code of the restore from Target Cluster
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the restore
          type: string
        namespace_id:
          description: ID of the namespace where the restore is created
          type: string
        start_time:
          description: Starting time of the restore process
          type: string
        status:
          description: Status of the restore process on the Target Cluster
          type: string
        timestamp:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.S3CompatibleCredentials:
      properties:
        access_key:
          description: Access key for S3-compatible user.
          type: string
        endpoint:
          description: Endpoint of S3-compatible storage service.
          type: string
        secret_key:
          description: Secret key for S3-compatible user.
          type: string
      type: object
    models.S3Credentials:
      properties:
        access_key:
          description: Access key for the AWS IAM user.
          type: string
        endpoint:
          description: Endpoint of S3 storage service.
          type: string
        secret_key:
          description: Secret key for the AWS IAM user.
          type: string
      type: object
    models.ServiceAccount:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.ServiceIdentity:
      example:
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        description: description
        secret_generation_count: 0
        id: id
        created_by: created_by
        secret_updated_at: secret_updated_at
        client_id: client_id
        enabled: true
      properties:
        account_id:
          type: string
        client_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        created_by:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        secret_generation_count:
          type: integer
        secret_updated_at:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.ServiceIdentityWithToken:
      example:
        client_token: client_token
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        description: description
        secret_generation_count: 0
        id: id
        created_by: created_by
        secret_updated_at: secret_updated_at
        client_id: client_id
        enabled: true
      properties:
        account_id:
          type: string
        client_id:
          type: string
        client_token:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        created_by:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        secret_generation_count:
          type: integer
        secret_updated_at:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.StorageOptionsSample:
      example:
        fg: true
        provisioner: pxd.portworx.com
        created: created
        name: name
        repl: 0
        secure: true
        fs: xfs
        updated: updated
        version: 6
      properties:
        created:
          type: string
        fg:
          description: This option enforces volume group policy. If a volume belonging
            to a group cannot find nodes for its replication sets which don’t have
            other volumes of same group, the volume creation will fail.
          type: boolean
        fs:
          description: Filesystem to be laid out.
          enum:
          - xfs
          - ext4
          type: string
        name:
          description: Name of the template. Must be unique within the tenant scope.
          type: string
        provisioner:
          description: 'Portworx volume provisioner. Valid values are: "pxd.portworx.com"
            for PX CSI, "kubernetes.io/portworx-volume" for PX in-tree or "auto" for
            auto-detect'
          enum:
          - pxd.portworx.com
          - kubernetes.io/portworx-volume
          - auto
          type: string
        repl:
          description: Replication factor for the volume.
          type: integer
        secure:
          description: Flag to create an encrypted volume. Currently, not supported
            (should be set to `false`).
          type: boolean
        updated:
          type: string
        version:
          type: integer
      type: object
    models.StorageOptionsTemplate:
      example:
        tenant_id: tenant_id
        fg: true
        provisioner: pxd.portworx.com
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        repl: 0
        id: id
        secure: true
        fs: xfs
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        fg:
          description: This option enforces volume group policy. If a volume belonging
            to a group cannot find nodes for its replication sets which don’t have
            other volumes of same group, the volume creation will fail.
          type: boolean
        fs:
          description: Filesystem to be laid out.
          enum:
          - xfs
          - ext4
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          description: Name of the template. Must be unique within the tenant scope.
          type: string
        provisioner:
          description: 'Portworx volume provisioner. Valid values are: "pxd.portworx.com"
            for PX CSI, "kubernetes.io/portworx-volume" for PX in-tree or "auto" for
            auto-detect'
          enum:
          - pxd.portworx.com
          - kubernetes.io/portworx-volume
          - auto
          type: string
        repl:
          description: Replication factor for the volume.
          type: integer
        secure:
          description: Flag to create an encrypted volume. Currently, not supported
            (should be set to `false`).
          type: boolean
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Task:
      example:
        associated_resource: associated_resource
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        log:
        - log
        - log
        project_id: project_id
        created_at: created_at
        description: description
        total_steps: 1
        id: 6
        current_step: 0
        status: status
      properties:
        account_id:
          type: string
        associated_resource:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        current_step:
          type: integer
        description:
          type: string
        id:
          description: ID is auto generated on creation
          type: integer
        log:
          items:
            type: string
          type: array
        project_id:
          type: string
        status:
          type: string
        tenant_id:
          type: string
        total_steps:
          type: integer
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Team:
      example:
        tenant_id: tenant_id
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        tenant_id:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.Tenant:
      example:
        account_id: account_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
      properties:
        account_id:
          type: string
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.User:
      example:
        updated_at: updated_at
        created_at: created_at
        external_id: external_id
        id: id
        email: email
        issuer: issuer
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        email:
          type: string
        external_id:
          description: |-
            ExternalID identifies a User in context of its Issuer. Therefore, it must
            be unique in the context of the Issuer. But not necessarily unique across different issuers.
            In case of PX Central the ExternalID is the 'sub' claim from JWT token
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        issuer:
          description: |-
            Issuer identifies the identity provider where the User is originating from.
            It corresponds to the 'iss' claim in the JWT token. Example: "https://central.portworx.com"
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    models.UserAPIKey:
      example:
        expires_at: expires_at
        updated_at: updated_at
        user_id: user_id
        jwt_token: jwt_token
        name: name
        created_at: created_at
        id: id
        enabled: true
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        enabled:
          type: boolean
        expires_at:
          type: string
        id:
          description: ID is auto generated on creation
          type: string
        jwt_token:
          type: string
        name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
        user_id:
          type: string
      type: object
    models.Version:
      example:
        data_service_id: data_service_id
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
        enabled: true
      properties:
        created_at:
          description: CreatedAt is autogenerated on creation
          type: string
        data_service_id:
          type: string
        enabled:
          type: boolean
        id:
          description: ID is auto generated on creation
          type: string
        name:
          type: string
        updated_at:
          description: UpdatedAt is autogenerated on update
          type: string
      type: object
    policy.Role:
      example:
        extends:
        - extends
        - extends
        level: level
        permissions:
        - permissions
        - permissions
        name: name
      properties:
        extends:
          items:
            type: string
          type: array
        level:
          type: string
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
      type: object
    requests.CreateCopilotSearchRequest:
      properties:
        data_service_id:
          type: string
        query:
          description: 'TODO: fix example query with best query'
          example: how to list all records of table employee.
          type: string
      type: object
    requests.CreateDeploymentEventsRequest:
      properties:
        events:
          items:
            $ref: '#/components/schemas/requests.DeploymentEvent'
          type: array
      required:
      - events
      type: object
    requests.CreateDeploymentTargetRequest:
      properties:
        cluster_id:
          type: string
        name:
          type: string
        teleport_agent_version:
          type: string
        tls_issuer:
          type: string
        tls_required:
          type: boolean
      type: object
    requests.CreateProjectDeploymentRequest:
      properties:
        application_configuration_overrides:
          additionalProperties:
            type: string
          type: object
        application_configuration_template_id:
          type: string
        deployment_target_id:
          type: string
        dns_zone:
          type: string
        image_id:
          type: string
        load_balancer_source_ranges:
          items:
            type: string
          type: array
        name:
          example: my-service
          type: string
        namespace_id:
          type: string
        node_count:
          example: 3
          type: integer
        resource_settings_template_id:
          type: string
        scheduled_backup:
          $ref: '#/components/schemas/requests.DeploymentScheduledBackup'
        service_type:
          type: string
        storage_options_template_id:
          type: string
        tls_enabled:
          type: boolean
      type: object
    requests.CreateRestoreRequest:
      properties:
        deployment_target_id:
          type: string
        name:
          type: string
        namespace_id:
          type: string
      type: object
    requests.CreateUserAPIKeyRequest:
      properties:
        expires_at:
          description: Time when the key expires.
          type: string
        name:
          description: Name of the UserAPIKey. Must be unique for the given User.
          maxLength: 256
          minLength: 1
          type: string
      type: object
    requests.DeleteRoleBindingRequest:
      properties:
        actor_id:
          type: string
        actor_type:
          type: string
      type: object
    requests.DeploymentEvent:
      properties:
        deployment_id:
          description: DeploymentID of the event.
          type: string
        events:
          description: List of k8s events for the deployment
          items:
            $ref: '#/components/schemas/requests.K8sEvent'
          type: array
        namespace:
          description: Namespace in which the deployment events were generated.
          type: string
      required:
      - deployment_id
      - events
      - namespace
      type: object
    requests.DeploymentScheduledBackup:
      properties:
        backup_policy_id:
          type: string
        backup_target_id:
          description: BackupTargetID and BackupPolicyID must be both specified.
          type: string
      type: object
    requests.IAMRequest:
      properties:
        actor_id:
          type: string
        actor_type:
          description: 'TODO: https://portworx.atlassian.net/browse/DS-6197: Fetch
            ActorType from DB instead of taking in request'
          type: string
        data:
          $ref: '#/components/schemas/models.AccessPolicy'
      required:
      - actor_id
      - actor_type
      - data
      type: object
    requests.InvitationAccountRequest:
      properties:
        email:
          type: string
        role_name:
          type: string
      required:
      - email
      - role_name
      type: object
    requests.K8sEvent:
      properties:
        action:
          description: Action that was taken/failed regarding the given object.
          example: Scheduling
          type: string
        count:
          description: Count informs about how many times event was generated.
          format: int64
          type: integer
        message:
          description: Message is a human-readable description of the status of this
            operation.
          example: 0/3 nodes are available
          type: string
        name:
          description: Name of the Event resource in target cluster.
          example: cas-events-0h35cp-0.16f4c1e217362a3e
          type: string
        reason:
          description: Reason is a short, machine understandable string that gives
            the reason for the transition into the object's current status.
          example: FailedScheduling
          type: string
        resource_kind:
          description: ResourceKind is the type of resource being referenced
          type: string
        resource_name:
          description: ResourceName is the name of resource being referenced
          type: string
        timestamp:
          description: Timestamp informs about when did the event occur most recently.
          format: int64
          type: integer
        type:
          description: Type of this event , new types could be added in the future.
          enum:
          - Normal
          - Warning
          type: string
      required:
      - count
      - message
      - name
      - reason
      - resource_kind
      - resource_name
      - timestamp
      - type
      type: object
    requests.PatchAccountRoleInvitationRequest:
      properties:
        role_name:
          type: string
      type: object
    requests.PatchDeploymentTargetRequest:
      properties:
        name:
          type: string
        tls_issuer:
          type: string
        tls_required:
          type: boolean
      type: object
    requests.PatchDeploymentTargetsAgentMetadataRequest:
      properties:
        kube_api_version:
          type: string
        kube_platform:
          type: string
        pds_chart_version:
          type: string
        px_csi_enabled:
          type: string
        px_service_namespace:
          type: string
        px_version:
          type: string
        teleport_agent_version:
          type: string
      type: object
    requests.PatchUserAPIKeyRequest:
      properties:
        enabled:
          description: Whether the UserAPIKey is enabled or disabled.
          type: boolean
        name:
          description: The name of the UserAPIKey.
          maxLength: 256
          minLength: 1
          type: string
      type: object
    requests.PutBackupJobRequest:
      properties:
        backup_capability:
          type: string
        backup_id:
          type: string
        backup_spec:
          properties: {}
          type: object
        cloud_credential_name:
          type: string
        cloud_snap_id:
          type: string
        completion_status:
          description: CompletionStatus of the snapshot.
          type: string
        completion_time:
          type: string
        data_service_spec:
          properties: {}
          type: object
        deleted:
          type: boolean
        deployment_id:
          type: string
        deployment_target_id:
          type: string
        error_code:
          description: ErrorCode if CompletionStatus is "Failed"
          type: string
        error_message:
          type: string
        file_size:
          type: integer
        image_name:
          type: string
        name:
          type: string
        namespace_name:
          type: string
        project_id:
          type: string
        start_time:
          type: string
        timestamp:
          type: string
      required:
      - project_id
      type: object
    requests.PutLegacyBindingRequest:
      properties:
        actor_id:
          example: ID of the role subject
          type: string
        actor_type:
          example: Type of the role subject
          type: string
        role_name:
          example: Name of the assigned role
          type: string
      type: object
    requests.ServiceIdentityRequest:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        name:
          type: string
      required:
      - enabled
      - name
      type: object
    requests.UpdateOperatorMetadataRequest:
      properties:
        cluster_id:
          type: string
        pds_features:
          type: string
        pds_operator_version:
          type: string
        px_status:
          type: string
      type: object
    requests.UpdateRestoreRequest:
      properties:
        completion_status:
          description: Status of the restore process on the Target Cluster
          type: string
        completion_time:
          description: CompletionTime of the restore process.
          type: string
        error_code:
          description: Error code of the restore from Target Cluster
          type: string
        start_time:
          description: StartTime of the restore process.
          type: string
        timestamp:
          description: Timestamp of the update data.
          type: string
      type: object
    requests.UpsertDeploymentManifestRequest:
      properties:
        deleted:
          type: boolean
        manifest:
          properties: {}
          type: object
        timestamp:
          type: string
      type: object
    service.DeploymentStatus:
      example:
        replicas: 6
        health: Healthy
        initialized: "Yes"
        readyReplicas: 0
        resources:
        - resource:
            apiGroup: apiGroup
            kind: kind
            name: name
          conditions:
          - reason: reason
            message: message
            type: type
            status: status
          - reason: reason
            message: message
            type: type
            status: status
        - resource:
            apiGroup: apiGroup
            kind: kind
            name: name
          conditions:
          - reason: reason
            message: message
            type: type
            status: status
          - reason: reason
            message: message
            type: type
            status: status
        restoring: true
        status: Available
      properties:
        health:
          enum:
          - Healthy
          - Down
          - Degraded
          type: string
        initialized:
          enum:
          - "Yes"
          - "No"
          - Unknown
          - Pending
          - Manual
          type: string
        readyReplicas:
          type: integer
        replicas:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/deployments.ResourceConditions'
          type: array
        restoring:
          type: boolean
        status:
          enum:
          - Available
          - Partially Available
          - Unavailable
          - Deploying
          - Unknown
          - Restoring
          type: string
      type: object
    service.RestoreCompatibilityCondition:
      properties:
        backup_job:
          additionalProperties:
            type: string
          type: object
        image:
          additionalProperties:
            type: string
          type: object
        target_cluster:
          additionalProperties:
            type: string
          type: object
      type: object
    v1.TypedLocalObjectReference:
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
      properties:
        apiGroup:
          description: |-
            APIGroup is the group for the resource being referenced.
            If APIGroup is not specified, the specified Kind must be in the core API group.
            For any other third-party types, APIGroup is required.
            +optional
          type: string
        kind:
          description: Kind is the type of resource being referenced
          type: string
        name:
          description: Name is the name of resource being referenced
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"

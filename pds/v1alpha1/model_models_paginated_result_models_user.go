/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsPaginatedResultModelsUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPaginatedResultModelsUser{}

// ModelsPaginatedResultModelsUser struct for ModelsPaginatedResultModelsUser
type ModelsPaginatedResultModelsUser struct {
	Data []ModelsUser `json:"data,omitempty"`
	Pagination *ConstraintPagination `json:"pagination,omitempty"`
}

// NewModelsPaginatedResultModelsUser instantiates a new ModelsPaginatedResultModelsUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPaginatedResultModelsUser() *ModelsPaginatedResultModelsUser {
	this := ModelsPaginatedResultModelsUser{}
	return &this
}

// NewModelsPaginatedResultModelsUserWithDefaults instantiates a new ModelsPaginatedResultModelsUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPaginatedResultModelsUserWithDefaults() *ModelsPaginatedResultModelsUser {
	this := ModelsPaginatedResultModelsUser{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ModelsPaginatedResultModelsUser) GetData() []ModelsUser {
	if o == nil || IsNil(o.Data) {
		var ret []ModelsUser
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPaginatedResultModelsUser) GetDataOk() ([]ModelsUser, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ModelsPaginatedResultModelsUser) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ModelsUser and assigns it to the Data field.
func (o *ModelsPaginatedResultModelsUser) SetData(v []ModelsUser) {
	o.Data = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsPaginatedResultModelsUser) GetPagination() ConstraintPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ConstraintPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPaginatedResultModelsUser) GetPaginationOk() (*ConstraintPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsPaginatedResultModelsUser) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ConstraintPagination and assigns it to the Pagination field.
func (o *ModelsPaginatedResultModelsUser) SetPagination(v ConstraintPagination) {
	o.Pagination = &v
}

func (o ModelsPaginatedResultModelsUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPaginatedResultModelsUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableModelsPaginatedResultModelsUser struct {
	value *ModelsPaginatedResultModelsUser
	isSet bool
}

func (v NullableModelsPaginatedResultModelsUser) Get() *ModelsPaginatedResultModelsUser {
	return v.value
}

func (v *NullableModelsPaginatedResultModelsUser) Set(val *ModelsPaginatedResultModelsUser) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPaginatedResultModelsUser) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPaginatedResultModelsUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPaginatedResultModelsUser(val *ModelsPaginatedResultModelsUser) *NullableModelsPaginatedResultModelsUser {
	return &NullableModelsPaginatedResultModelsUser{value: val, isSet: true}
}

func (v NullableModelsPaginatedResultModelsUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPaginatedResultModelsUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



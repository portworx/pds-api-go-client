/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsDNSDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsDNSDetails{}

// ModelsDNSDetails struct for ModelsDNSDetails
type ModelsDNSDetails struct {
	AwsDetails *ModelsAWSDetails `json:"aws_details,omitempty"`
	DnsZone *string `json:"dns_zone,omitempty"`
}

// NewModelsDNSDetails instantiates a new ModelsDNSDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDNSDetails() *ModelsDNSDetails {
	this := ModelsDNSDetails{}
	return &this
}

// NewModelsDNSDetailsWithDefaults instantiates a new ModelsDNSDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDNSDetailsWithDefaults() *ModelsDNSDetails {
	this := ModelsDNSDetails{}
	return &this
}

// GetAwsDetails returns the AwsDetails field value if set, zero value otherwise.
func (o *ModelsDNSDetails) GetAwsDetails() ModelsAWSDetails {
	if o == nil || IsNil(o.AwsDetails) {
		var ret ModelsAWSDetails
		return ret
	}
	return *o.AwsDetails
}

// GetAwsDetailsOk returns a tuple with the AwsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDNSDetails) GetAwsDetailsOk() (*ModelsAWSDetails, bool) {
	if o == nil || IsNil(o.AwsDetails) {
		return nil, false
	}
	return o.AwsDetails, true
}

// HasAwsDetails returns a boolean if a field has been set.
func (o *ModelsDNSDetails) HasAwsDetails() bool {
	if o != nil && !IsNil(o.AwsDetails) {
		return true
	}

	return false
}

// SetAwsDetails gets a reference to the given ModelsAWSDetails and assigns it to the AwsDetails field.
func (o *ModelsDNSDetails) SetAwsDetails(v ModelsAWSDetails) {
	o.AwsDetails = &v
}

// GetDnsZone returns the DnsZone field value if set, zero value otherwise.
func (o *ModelsDNSDetails) GetDnsZone() string {
	if o == nil || IsNil(o.DnsZone) {
		var ret string
		return ret
	}
	return *o.DnsZone
}

// GetDnsZoneOk returns a tuple with the DnsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDNSDetails) GetDnsZoneOk() (*string, bool) {
	if o == nil || IsNil(o.DnsZone) {
		return nil, false
	}
	return o.DnsZone, true
}

// HasDnsZone returns a boolean if a field has been set.
func (o *ModelsDNSDetails) HasDnsZone() bool {
	if o != nil && !IsNil(o.DnsZone) {
		return true
	}

	return false
}

// SetDnsZone gets a reference to the given string and assigns it to the DnsZone field.
func (o *ModelsDNSDetails) SetDnsZone(v string) {
	o.DnsZone = &v
}

func (o ModelsDNSDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsDNSDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsDetails) {
		toSerialize["aws_details"] = o.AwsDetails
	}
	if !IsNil(o.DnsZone) {
		toSerialize["dns_zone"] = o.DnsZone
	}
	return toSerialize, nil
}

type NullableModelsDNSDetails struct {
	value *ModelsDNSDetails
	isSet bool
}

func (v NullableModelsDNSDetails) Get() *ModelsDNSDetails {
	return v.value
}

func (v *NullableModelsDNSDetails) Set(val *ModelsDNSDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDNSDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDNSDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDNSDetails(val *ModelsDNSDetails) *NullableModelsDNSDetails {
	return &NullableModelsDNSDetails{value: val, isSet: true}
}

func (v NullableModelsDNSDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDNSDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



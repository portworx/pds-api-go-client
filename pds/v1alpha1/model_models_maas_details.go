/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsMAASDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsMAASDetails{}

// ModelsMAASDetails struct for ModelsMAASDetails
type ModelsMAASDetails struct {
	MaasId *string `json:"maas_id,omitempty"`
}

// NewModelsMAASDetails instantiates a new ModelsMAASDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsMAASDetails() *ModelsMAASDetails {
	this := ModelsMAASDetails{}
	return &this
}

// NewModelsMAASDetailsWithDefaults instantiates a new ModelsMAASDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsMAASDetailsWithDefaults() *ModelsMAASDetails {
	this := ModelsMAASDetails{}
	return &this
}

// GetMaasId returns the MaasId field value if set, zero value otherwise.
func (o *ModelsMAASDetails) GetMaasId() string {
	if o == nil || IsNil(o.MaasId) {
		var ret string
		return ret
	}
	return *o.MaasId
}

// GetMaasIdOk returns a tuple with the MaasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMAASDetails) GetMaasIdOk() (*string, bool) {
	if o == nil || IsNil(o.MaasId) {
		return nil, false
	}
	return o.MaasId, true
}

// HasMaasId returns a boolean if a field has been set.
func (o *ModelsMAASDetails) HasMaasId() bool {
	if o != nil && !IsNil(o.MaasId) {
		return true
	}

	return false
}

// SetMaasId gets a reference to the given string and assigns it to the MaasId field.
func (o *ModelsMAASDetails) SetMaasId(v string) {
	o.MaasId = &v
}

func (o ModelsMAASDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsMAASDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaasId) {
		toSerialize["maas_id"] = o.MaasId
	}
	return toSerialize, nil
}

type NullableModelsMAASDetails struct {
	value *ModelsMAASDetails
	isSet bool
}

func (v NullableModelsMAASDetails) Get() *ModelsMAASDetails {
	return v.value
}

func (v *NullableModelsMAASDetails) Set(val *ModelsMAASDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsMAASDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsMAASDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsMAASDetails(val *ModelsMAASDetails) *NullableModelsMAASDetails {
	return &NullableModelsMAASDetails{value: val, isSet: true}
}

func (v NullableModelsMAASDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsMAASDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ControllersBackupPolicySamples type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControllersBackupPolicySamples{}

// ControllersBackupPolicySamples struct for ControllersBackupPolicySamples
type ControllersBackupPolicySamples struct {
	Data []ModelsBackupPolicySample `json:"data,omitempty"`
}

// NewControllersBackupPolicySamples instantiates a new ControllersBackupPolicySamples object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersBackupPolicySamples() *ControllersBackupPolicySamples {
	this := ControllersBackupPolicySamples{}
	return &this
}

// NewControllersBackupPolicySamplesWithDefaults instantiates a new ControllersBackupPolicySamples object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersBackupPolicySamplesWithDefaults() *ControllersBackupPolicySamples {
	this := ControllersBackupPolicySamples{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ControllersBackupPolicySamples) GetData() []ModelsBackupPolicySample {
	if o == nil || IsNil(o.Data) {
		var ret []ModelsBackupPolicySample
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersBackupPolicySamples) GetDataOk() ([]ModelsBackupPolicySample, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ControllersBackupPolicySamples) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ModelsBackupPolicySample and assigns it to the Data field.
func (o *ControllersBackupPolicySamples) SetData(v []ModelsBackupPolicySample) {
	o.Data = v
}

func (o ControllersBackupPolicySamples) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControllersBackupPolicySamples) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableControllersBackupPolicySamples struct {
	value *ControllersBackupPolicySamples
	isSet bool
}

func (v NullableControllersBackupPolicySamples) Get() *ControllersBackupPolicySamples {
	return v.value
}

func (v *NullableControllersBackupPolicySamples) Set(val *ControllersBackupPolicySamples) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersBackupPolicySamples) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersBackupPolicySamples) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersBackupPolicySamples(val *ControllersBackupPolicySamples) *NullableControllersBackupPolicySamples {
	return &NullableControllersBackupPolicySamples{value: val, isSet: true}
}

func (v NullableControllersBackupPolicySamples) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersBackupPolicySamples) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsAccount{}

// ModelsAccount struct for ModelsAccount
type ModelsAccount struct {
	BaasFeaturesEnabled *bool `json:"baas_features_enabled,omitempty"`
	// CreatedAt is autogenerated on creation
	CreatedAt *string `json:"created_at,omitempty"`
	Eula *ModelsEULADetails `json:"eula,omitempty"`
	GlobalConfig *ModelsAccountGlobalConfig `json:"global_config,omitempty"`
	// ID is auto generated on creation
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	PdsFeaturesEnabled *bool `json:"pds_features_enabled,omitempty"`
	PxoneFeaturesEnabled *bool `json:"pxone_features_enabled,omitempty"`
	// UpdatedAt is autogenerated on update
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsAccount instantiates a new ModelsAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAccount() *ModelsAccount {
	this := ModelsAccount{}
	return &this
}

// NewModelsAccountWithDefaults instantiates a new ModelsAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAccountWithDefaults() *ModelsAccount {
	this := ModelsAccount{}
	return &this
}

// GetBaasFeaturesEnabled returns the BaasFeaturesEnabled field value if set, zero value otherwise.
func (o *ModelsAccount) GetBaasFeaturesEnabled() bool {
	if o == nil || IsNil(o.BaasFeaturesEnabled) {
		var ret bool
		return ret
	}
	return *o.BaasFeaturesEnabled
}

// GetBaasFeaturesEnabledOk returns a tuple with the BaasFeaturesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetBaasFeaturesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BaasFeaturesEnabled) {
		return nil, false
	}
	return o.BaasFeaturesEnabled, true
}

// HasBaasFeaturesEnabled returns a boolean if a field has been set.
func (o *ModelsAccount) HasBaasFeaturesEnabled() bool {
	if o != nil && !IsNil(o.BaasFeaturesEnabled) {
		return true
	}

	return false
}

// SetBaasFeaturesEnabled gets a reference to the given bool and assigns it to the BaasFeaturesEnabled field.
func (o *ModelsAccount) SetBaasFeaturesEnabled(v bool) {
	o.BaasFeaturesEnabled = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsAccount) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsAccount) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsAccount) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEula returns the Eula field value if set, zero value otherwise.
func (o *ModelsAccount) GetEula() ModelsEULADetails {
	if o == nil || IsNil(o.Eula) {
		var ret ModelsEULADetails
		return ret
	}
	return *o.Eula
}

// GetEulaOk returns a tuple with the Eula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetEulaOk() (*ModelsEULADetails, bool) {
	if o == nil || IsNil(o.Eula) {
		return nil, false
	}
	return o.Eula, true
}

// HasEula returns a boolean if a field has been set.
func (o *ModelsAccount) HasEula() bool {
	if o != nil && !IsNil(o.Eula) {
		return true
	}

	return false
}

// SetEula gets a reference to the given ModelsEULADetails and assigns it to the Eula field.
func (o *ModelsAccount) SetEula(v ModelsEULADetails) {
	o.Eula = &v
}

// GetGlobalConfig returns the GlobalConfig field value if set, zero value otherwise.
func (o *ModelsAccount) GetGlobalConfig() ModelsAccountGlobalConfig {
	if o == nil || IsNil(o.GlobalConfig) {
		var ret ModelsAccountGlobalConfig
		return ret
	}
	return *o.GlobalConfig
}

// GetGlobalConfigOk returns a tuple with the GlobalConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetGlobalConfigOk() (*ModelsAccountGlobalConfig, bool) {
	if o == nil || IsNil(o.GlobalConfig) {
		return nil, false
	}
	return o.GlobalConfig, true
}

// HasGlobalConfig returns a boolean if a field has been set.
func (o *ModelsAccount) HasGlobalConfig() bool {
	if o != nil && !IsNil(o.GlobalConfig) {
		return true
	}

	return false
}

// SetGlobalConfig gets a reference to the given ModelsAccountGlobalConfig and assigns it to the GlobalConfig field.
func (o *ModelsAccount) SetGlobalConfig(v ModelsAccountGlobalConfig) {
	o.GlobalConfig = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsAccount) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsAccount) SetName(v string) {
	o.Name = &v
}

// GetPdsFeaturesEnabled returns the PdsFeaturesEnabled field value if set, zero value otherwise.
func (o *ModelsAccount) GetPdsFeaturesEnabled() bool {
	if o == nil || IsNil(o.PdsFeaturesEnabled) {
		var ret bool
		return ret
	}
	return *o.PdsFeaturesEnabled
}

// GetPdsFeaturesEnabledOk returns a tuple with the PdsFeaturesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetPdsFeaturesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PdsFeaturesEnabled) {
		return nil, false
	}
	return o.PdsFeaturesEnabled, true
}

// HasPdsFeaturesEnabled returns a boolean if a field has been set.
func (o *ModelsAccount) HasPdsFeaturesEnabled() bool {
	if o != nil && !IsNil(o.PdsFeaturesEnabled) {
		return true
	}

	return false
}

// SetPdsFeaturesEnabled gets a reference to the given bool and assigns it to the PdsFeaturesEnabled field.
func (o *ModelsAccount) SetPdsFeaturesEnabled(v bool) {
	o.PdsFeaturesEnabled = &v
}

// GetPxoneFeaturesEnabled returns the PxoneFeaturesEnabled field value if set, zero value otherwise.
func (o *ModelsAccount) GetPxoneFeaturesEnabled() bool {
	if o == nil || IsNil(o.PxoneFeaturesEnabled) {
		var ret bool
		return ret
	}
	return *o.PxoneFeaturesEnabled
}

// GetPxoneFeaturesEnabledOk returns a tuple with the PxoneFeaturesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetPxoneFeaturesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PxoneFeaturesEnabled) {
		return nil, false
	}
	return o.PxoneFeaturesEnabled, true
}

// HasPxoneFeaturesEnabled returns a boolean if a field has been set.
func (o *ModelsAccount) HasPxoneFeaturesEnabled() bool {
	if o != nil && !IsNil(o.PxoneFeaturesEnabled) {
		return true
	}

	return false
}

// SetPxoneFeaturesEnabled gets a reference to the given bool and assigns it to the PxoneFeaturesEnabled field.
func (o *ModelsAccount) SetPxoneFeaturesEnabled(v bool) {
	o.PxoneFeaturesEnabled = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsAccount) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccount) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsAccount) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsAccount) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaasFeaturesEnabled) {
		toSerialize["baas_features_enabled"] = o.BaasFeaturesEnabled
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Eula) {
		toSerialize["eula"] = o.Eula
	}
	if !IsNil(o.GlobalConfig) {
		toSerialize["global_config"] = o.GlobalConfig
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PdsFeaturesEnabled) {
		toSerialize["pds_features_enabled"] = o.PdsFeaturesEnabled
	}
	if !IsNil(o.PxoneFeaturesEnabled) {
		toSerialize["pxone_features_enabled"] = o.PxoneFeaturesEnabled
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsAccount struct {
	value *ModelsAccount
	isSet bool
}

func (v NullableModelsAccount) Get() *ModelsAccount {
	return v.value
}

func (v *NullableModelsAccount) Set(val *ModelsAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAccount(val *ModelsAccount) *NullableModelsAccount {
	return &NullableModelsAccount{value: val, isSet: true}
}

func (v NullableModelsAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTask{}

// ModelsTask struct for ModelsTask
type ModelsTask struct {
	AccountId *string `json:"account_id,omitempty"`
	AssociatedResource *string `json:"associated_resource,omitempty"`
	// CreatedAt is autogenerated on creation
	CreatedAt *string `json:"created_at,omitempty"`
	CurrentStep *int32 `json:"current_step,omitempty"`
	Description *string `json:"description,omitempty"`
	// ID is auto generated on creation
	Id *int32 `json:"id,omitempty"`
	Log []string `json:"log,omitempty"`
	ProjectId *string `json:"project_id,omitempty"`
	Status *string `json:"status,omitempty"`
	TenantId *string `json:"tenant_id,omitempty"`
	TotalSteps *int32 `json:"total_steps,omitempty"`
	// UpdatedAt is autogenerated on update
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsTask instantiates a new ModelsTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTask() *ModelsTask {
	this := ModelsTask{}
	return &this
}

// NewModelsTaskWithDefaults instantiates a new ModelsTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTaskWithDefaults() *ModelsTask {
	this := ModelsTask{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelsTask) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelsTask) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelsTask) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAssociatedResource returns the AssociatedResource field value if set, zero value otherwise.
func (o *ModelsTask) GetAssociatedResource() string {
	if o == nil || IsNil(o.AssociatedResource) {
		var ret string
		return ret
	}
	return *o.AssociatedResource
}

// GetAssociatedResourceOk returns a tuple with the AssociatedResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetAssociatedResourceOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedResource) {
		return nil, false
	}
	return o.AssociatedResource, true
}

// HasAssociatedResource returns a boolean if a field has been set.
func (o *ModelsTask) HasAssociatedResource() bool {
	if o != nil && !IsNil(o.AssociatedResource) {
		return true
	}

	return false
}

// SetAssociatedResource gets a reference to the given string and assigns it to the AssociatedResource field.
func (o *ModelsTask) SetAssociatedResource(v string) {
	o.AssociatedResource = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsTask) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsTask) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsTask) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentStep returns the CurrentStep field value if set, zero value otherwise.
func (o *ModelsTask) GetCurrentStep() int32 {
	if o == nil || IsNil(o.CurrentStep) {
		var ret int32
		return ret
	}
	return *o.CurrentStep
}

// GetCurrentStepOk returns a tuple with the CurrentStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetCurrentStepOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentStep) {
		return nil, false
	}
	return o.CurrentStep, true
}

// HasCurrentStep returns a boolean if a field has been set.
func (o *ModelsTask) HasCurrentStep() bool {
	if o != nil && !IsNil(o.CurrentStep) {
		return true
	}

	return false
}

// SetCurrentStep gets a reference to the given int32 and assigns it to the CurrentStep field.
func (o *ModelsTask) SetCurrentStep(v int32) {
	o.CurrentStep = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsTask) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsTask) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsTask) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTask) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTask) SetId(v int32) {
	o.Id = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *ModelsTask) GetLog() []string {
	if o == nil || IsNil(o.Log) {
		var ret []string
		return ret
	}
	return o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetLogOk() ([]string, bool) {
	if o == nil || IsNil(o.Log) {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *ModelsTask) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given []string and assigns it to the Log field.
func (o *ModelsTask) SetLog(v []string) {
	o.Log = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ModelsTask) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ModelsTask) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ModelsTask) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelsTask) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelsTask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelsTask) SetStatus(v string) {
	o.Status = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ModelsTask) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ModelsTask) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ModelsTask) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTotalSteps returns the TotalSteps field value if set, zero value otherwise.
func (o *ModelsTask) GetTotalSteps() int32 {
	if o == nil || IsNil(o.TotalSteps) {
		var ret int32
		return ret
	}
	return *o.TotalSteps
}

// GetTotalStepsOk returns a tuple with the TotalSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetTotalStepsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSteps) {
		return nil, false
	}
	return o.TotalSteps, true
}

// HasTotalSteps returns a boolean if a field has been set.
func (o *ModelsTask) HasTotalSteps() bool {
	if o != nil && !IsNil(o.TotalSteps) {
		return true
	}

	return false
}

// SetTotalSteps gets a reference to the given int32 and assigns it to the TotalSteps field.
func (o *ModelsTask) SetTotalSteps(v int32) {
	o.TotalSteps = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsTask) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTask) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsTask) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsTask) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AssociatedResource) {
		toSerialize["associated_resource"] = o.AssociatedResource
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CurrentStep) {
		toSerialize["current_step"] = o.CurrentStep
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.TotalSteps) {
		toSerialize["total_steps"] = o.TotalSteps
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsTask struct {
	value *ModelsTask
	isSet bool
}

func (v NullableModelsTask) Get() *ModelsTask {
	return v.value
}

func (v *NullableModelsTask) Set(val *ModelsTask) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTask) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTask(val *ModelsTask) *NullableModelsTask {
	return &NullableModelsTask{value: val, isSet: true}
}

func (v NullableModelsTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ModelsNodeRestrictions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsNodeRestrictions{}

// ModelsNodeRestrictions struct for ModelsNodeRestrictions
type ModelsNodeRestrictions struct {
	// Whether downsizing the cluster is enabled during editing.
	DownsizeEnabled *bool `json:"downsize_enabled,omitempty"`
	// List of all node sizes that are not allowed to change during editing.
	ResizeDisabled []int32 `json:"resize_disabled,omitempty"`
	// List of all allowed node sizes.
	SimpleConfig []int32 `json:"simple_config,omitempty"`
}

// NewModelsNodeRestrictions instantiates a new ModelsNodeRestrictions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsNodeRestrictions() *ModelsNodeRestrictions {
	this := ModelsNodeRestrictions{}
	return &this
}

// NewModelsNodeRestrictionsWithDefaults instantiates a new ModelsNodeRestrictions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsNodeRestrictionsWithDefaults() *ModelsNodeRestrictions {
	this := ModelsNodeRestrictions{}
	return &this
}

// GetDownsizeEnabled returns the DownsizeEnabled field value if set, zero value otherwise.
func (o *ModelsNodeRestrictions) GetDownsizeEnabled() bool {
	if o == nil || IsNil(o.DownsizeEnabled) {
		var ret bool
		return ret
	}
	return *o.DownsizeEnabled
}

// GetDownsizeEnabledOk returns a tuple with the DownsizeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsNodeRestrictions) GetDownsizeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DownsizeEnabled) {
		return nil, false
	}
	return o.DownsizeEnabled, true
}

// HasDownsizeEnabled returns a boolean if a field has been set.
func (o *ModelsNodeRestrictions) HasDownsizeEnabled() bool {
	if o != nil && !IsNil(o.DownsizeEnabled) {
		return true
	}

	return false
}

// SetDownsizeEnabled gets a reference to the given bool and assigns it to the DownsizeEnabled field.
func (o *ModelsNodeRestrictions) SetDownsizeEnabled(v bool) {
	o.DownsizeEnabled = &v
}

// GetResizeDisabled returns the ResizeDisabled field value if set, zero value otherwise.
func (o *ModelsNodeRestrictions) GetResizeDisabled() []int32 {
	if o == nil || IsNil(o.ResizeDisabled) {
		var ret []int32
		return ret
	}
	return o.ResizeDisabled
}

// GetResizeDisabledOk returns a tuple with the ResizeDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsNodeRestrictions) GetResizeDisabledOk() ([]int32, bool) {
	if o == nil || IsNil(o.ResizeDisabled) {
		return nil, false
	}
	return o.ResizeDisabled, true
}

// HasResizeDisabled returns a boolean if a field has been set.
func (o *ModelsNodeRestrictions) HasResizeDisabled() bool {
	if o != nil && !IsNil(o.ResizeDisabled) {
		return true
	}

	return false
}

// SetResizeDisabled gets a reference to the given []int32 and assigns it to the ResizeDisabled field.
func (o *ModelsNodeRestrictions) SetResizeDisabled(v []int32) {
	o.ResizeDisabled = v
}

// GetSimpleConfig returns the SimpleConfig field value if set, zero value otherwise.
func (o *ModelsNodeRestrictions) GetSimpleConfig() []int32 {
	if o == nil || IsNil(o.SimpleConfig) {
		var ret []int32
		return ret
	}
	return o.SimpleConfig
}

// GetSimpleConfigOk returns a tuple with the SimpleConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsNodeRestrictions) GetSimpleConfigOk() ([]int32, bool) {
	if o == nil || IsNil(o.SimpleConfig) {
		return nil, false
	}
	return o.SimpleConfig, true
}

// HasSimpleConfig returns a boolean if a field has been set.
func (o *ModelsNodeRestrictions) HasSimpleConfig() bool {
	if o != nil && !IsNil(o.SimpleConfig) {
		return true
	}

	return false
}

// SetSimpleConfig gets a reference to the given []int32 and assigns it to the SimpleConfig field.
func (o *ModelsNodeRestrictions) SetSimpleConfig(v []int32) {
	o.SimpleConfig = v
}

func (o ModelsNodeRestrictions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsNodeRestrictions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DownsizeEnabled) {
		toSerialize["downsize_enabled"] = o.DownsizeEnabled
	}
	if !IsNil(o.ResizeDisabled) {
		toSerialize["resize_disabled"] = o.ResizeDisabled
	}
	if !IsNil(o.SimpleConfig) {
		toSerialize["simple_config"] = o.SimpleConfig
	}
	return toSerialize, nil
}

type NullableModelsNodeRestrictions struct {
	value *ModelsNodeRestrictions
	isSet bool
}

func (v NullableModelsNodeRestrictions) Get() *ModelsNodeRestrictions {
	return v.value
}

func (v *NullableModelsNodeRestrictions) Set(val *ModelsNodeRestrictions) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsNodeRestrictions) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsNodeRestrictions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsNodeRestrictions(val *ModelsNodeRestrictions) *NullableModelsNodeRestrictions {
	return &NullableModelsNodeRestrictions{value: val, isSet: true}
}

func (v NullableModelsNodeRestrictions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsNodeRestrictions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



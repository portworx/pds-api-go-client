/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the ControllersUpdateDeploymentScheduledBackup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControllersUpdateDeploymentScheduledBackup{}

// ControllersUpdateDeploymentScheduledBackup struct for ControllersUpdateDeploymentScheduledBackup
type ControllersUpdateDeploymentScheduledBackup struct {
	BackupPolicyId *string `json:"backup_policy_id,omitempty"`
	// BackupTargetID and BackupPolicyID must be both specified or not. Set both to null to have no scheduled backup.
	BackupTargetId *string `json:"backup_target_id,omitempty"`
}

// NewControllersUpdateDeploymentScheduledBackup instantiates a new ControllersUpdateDeploymentScheduledBackup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersUpdateDeploymentScheduledBackup() *ControllersUpdateDeploymentScheduledBackup {
	this := ControllersUpdateDeploymentScheduledBackup{}
	return &this
}

// NewControllersUpdateDeploymentScheduledBackupWithDefaults instantiates a new ControllersUpdateDeploymentScheduledBackup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersUpdateDeploymentScheduledBackupWithDefaults() *ControllersUpdateDeploymentScheduledBackup {
	this := ControllersUpdateDeploymentScheduledBackup{}
	return &this
}

// GetBackupPolicyId returns the BackupPolicyId field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentScheduledBackup) GetBackupPolicyId() string {
	if o == nil || IsNil(o.BackupPolicyId) {
		var ret string
		return ret
	}
	return *o.BackupPolicyId
}

// GetBackupPolicyIdOk returns a tuple with the BackupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentScheduledBackup) GetBackupPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.BackupPolicyId) {
		return nil, false
	}
	return o.BackupPolicyId, true
}

// HasBackupPolicyId returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentScheduledBackup) HasBackupPolicyId() bool {
	if o != nil && !IsNil(o.BackupPolicyId) {
		return true
	}

	return false
}

// SetBackupPolicyId gets a reference to the given string and assigns it to the BackupPolicyId field.
func (o *ControllersUpdateDeploymentScheduledBackup) SetBackupPolicyId(v string) {
	o.BackupPolicyId = &v
}

// GetBackupTargetId returns the BackupTargetId field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentScheduledBackup) GetBackupTargetId() string {
	if o == nil || IsNil(o.BackupTargetId) {
		var ret string
		return ret
	}
	return *o.BackupTargetId
}

// GetBackupTargetIdOk returns a tuple with the BackupTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentScheduledBackup) GetBackupTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.BackupTargetId) {
		return nil, false
	}
	return o.BackupTargetId, true
}

// HasBackupTargetId returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentScheduledBackup) HasBackupTargetId() bool {
	if o != nil && !IsNil(o.BackupTargetId) {
		return true
	}

	return false
}

// SetBackupTargetId gets a reference to the given string and assigns it to the BackupTargetId field.
func (o *ControllersUpdateDeploymentScheduledBackup) SetBackupTargetId(v string) {
	o.BackupTargetId = &v
}

func (o ControllersUpdateDeploymentScheduledBackup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControllersUpdateDeploymentScheduledBackup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupPolicyId) {
		toSerialize["backup_policy_id"] = o.BackupPolicyId
	}
	if !IsNil(o.BackupTargetId) {
		toSerialize["backup_target_id"] = o.BackupTargetId
	}
	return toSerialize, nil
}

type NullableControllersUpdateDeploymentScheduledBackup struct {
	value *ControllersUpdateDeploymentScheduledBackup
	isSet bool
}

func (v NullableControllersUpdateDeploymentScheduledBackup) Get() *ControllersUpdateDeploymentScheduledBackup {
	return v.value
}

func (v *NullableControllersUpdateDeploymentScheduledBackup) Set(val *ControllersUpdateDeploymentScheduledBackup) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersUpdateDeploymentScheduledBackup) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersUpdateDeploymentScheduledBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersUpdateDeploymentScheduledBackup(val *ControllersUpdateDeploymentScheduledBackup) *NullableControllersUpdateDeploymentScheduledBackup {
	return &NullableControllersUpdateDeploymentScheduledBackup{value: val, isSet: true}
}

func (v NullableControllersUpdateDeploymentScheduledBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersUpdateDeploymentScheduledBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// checks if the DeploymentsResourceEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentsResourceEvent{}

// DeploymentsResourceEvent struct for DeploymentsResourceEvent
type DeploymentsResourceEvent struct {
	// Action that was taken/failed regarding to the given object.
	Action *string `json:"action,omitempty"`
	// Message is a human-readable description of the status of this operation.
	Message *string `json:"message,omitempty"`
	// Name of the Event resource in target cluster.
	Name *string `json:"name,omitempty"`
	// Reason is a short, machine understandable string that gives the reason for the transition into the object's current status.
	Reason *string `json:"reason,omitempty"`
	// Timestamp informs about when did the event occur most recently.
	Timestamp *string `json:"timestamp,omitempty"`
	// Type of this event , new types could be added in the future.
	Type *string `json:"type,omitempty"`
}

// NewDeploymentsResourceEvent instantiates a new DeploymentsResourceEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentsResourceEvent() *DeploymentsResourceEvent {
	this := DeploymentsResourceEvent{}
	return &this
}

// NewDeploymentsResourceEventWithDefaults instantiates a new DeploymentsResourceEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentsResourceEventWithDefaults() *DeploymentsResourceEvent {
	this := DeploymentsResourceEvent{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *DeploymentsResourceEvent) SetAction(v string) {
	o.Action = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DeploymentsResourceEvent) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeploymentsResourceEvent) SetName(v string) {
	o.Name = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *DeploymentsResourceEvent) SetReason(v string) {
	o.Reason = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *DeploymentsResourceEvent) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DeploymentsResourceEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsResourceEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DeploymentsResourceEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DeploymentsResourceEvent) SetType(v string) {
	o.Type = &v
}

func (o DeploymentsResourceEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentsResourceEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDeploymentsResourceEvent struct {
	value *DeploymentsResourceEvent
	isSet bool
}

func (v NullableDeploymentsResourceEvent) Get() *DeploymentsResourceEvent {
	return v.value
}

func (v *NullableDeploymentsResourceEvent) Set(val *DeploymentsResourceEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentsResourceEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentsResourceEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentsResourceEvent(val *DeploymentsResourceEvent) *NullableDeploymentsResourceEvent {
	return &NullableDeploymentsResourceEvent{value: val, isSet: true}
}

func (v NullableDeploymentsResourceEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentsResourceEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



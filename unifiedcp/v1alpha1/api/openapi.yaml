openapi: 3.0.3
info:
  title: public/portworx/pds/tasks/apiv1/tasks.proto
  version: version not set
servers:
- url: /
tags:
- name: TaskService
- name: CopilotService
- name: ImageService
- name: DataServicesService
- name: DataServiceVersionService
- name: BackupConfigService
- name: DeploymentEventService
- name: DeploymentService
- name: BackupService
- name: RestoreService
- name: DeploymentConfigUpdateService
paths:
  /pds/v1/tasks:
    get:
      operationId: TaskService_ListTasks
      parameters:
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the deployment.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the backup.
        explode: true
        in: query
        name: backupId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the restore.
        explode: true
        in: query
        name: restoreId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTasksResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListTasks returns the list of tasks.
      tags:
      - TaskService
  /pds/v1/tasks/{id}:
    get:
      operationId: TaskService_GetTask
      parameters:
      - description: UID of the task.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Task'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetTask API returns the information about the specified task.
      tags:
      - TaskService
  /pds/v1/copilot/search:
    post:
      operationId: CopilotService_SearchQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SearchQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchQueryResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Search dataservice queries.
      tags:
      - CopilotService
  /pds/v1/catalog/images:
    get:
      operationId: ImageService_ListImages
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: dataServiceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListImagesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListImages API lists the data service images.
      tags:
      - ImageService
  /pds/v1/catalog/images/{id}:
    get:
      operationId: ImageService_GetImage
      parameters:
      - description: UID of the image.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Image'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetImage API returns the information about the specified image.
      tags:
      - ImageService
  /pds/v1/catalog/dataServices:
    get:
      operationId: DataServicesService_ListDataServices
      parameters:
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDataServicesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListDataServices API lists the the data service resources.
      tags:
      - DataServicesService
  /pds/v1/catalog/dataServices/{id}:
    get:
      operationId: DataServicesService_GetDataService
      parameters:
      - description: UID of the Data Service.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DataService'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetDataService API returns the the data service resource.
      tags:
      - DataServicesService
  /pds/v1/catalog/dataServiceVersions/{id}:
    get:
      operationId: DataServiceVersionService_GetDataServiceVersion
      parameters:
      - description: UID of the version
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DataServiceVersion'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetDataServiceVersion returns a data service version
      tags:
      - DataServiceVersionService
  /pds/v1/catalog/dataServiceVersions:listCompatibleVersions:
    get:
      operationId: DataServiceVersionService_ListCompatibleDataServiceVersions
      parameters:
      - description: UID of the data service for which compatible data service versions
          are requested
        explode: true
        in: query
        name: dataServiceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the data service version for which compatible versions
          are requested
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCompatibleDataServiceVersionsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListCompatibleDataServiceVersions lists all the data service versions
        compatible with other version of a data service
      tags:
      - DataServiceVersionService
  /pds/v1/catalog/dataServices/{dataServiceId}/dataServiceVersions:
    get:
      operationId: DataServiceVersionService_ListDataServiceVersions
      parameters:
      - description: UID of the data service
        explode: false
        in: path
        name: dataServiceId
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDataServiceVersionsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListDataServiceVersions lists all the versions of a data service
      tags:
      - DataServiceVersionService
  /pds/v1/backupConfigs:
    get:
      operationId: BackupConfigService_ListBackupConfigs
      parameters:
      - description: Account ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Cluster ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: targetClusterId
        required: false
        schema:
          type: string
        style: form
      - description: Namespace ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: Deployment ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBackupConfigsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListBackupConfigs API lists all the backup configuration for a deployment.
      tags:
      - BackupConfigService
  /pds/v1/backupConfigs/{backupConfig.meta.uid}:
    put:
      operationId: BackupConfigService_UpdateBackupConfig
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: backupConfig.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Desired_backup_configuration_'
        description: Desired backup configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: UpdateBackupConfig API updates the backup configuration of the backup.
      tags:
      - BackupConfigService
  /pds/v1/backupConfigs/{id}:
    delete:
      operationId: BackupConfigService_DeleteBackupConfig
      parameters:
      - description: ID of the backup configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteBackupConfig API deletes the backup configuration.
      tags:
      - BackupConfigService
    get:
      operationId: BackupConfigService_GetBackupConfig
      parameters:
      - description: ID of the backup configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetBackupConfig API returns the the backup configuration resource.
      tags:
      - BackupConfigService
  /pds/v1/projects/{projectId}/backupConfigs:
    post:
      operationId: BackupConfigService_CreateBackupConfig
      parameters:
      - description: |-
          (-- api-linter: core::0133::request-required-fields=disabled
              aip.dev/not-precedent: We really need this field to be required to support creation of
              the resource in the project context. --)
          (-- api-linter: core::0133::request-unknown-fields=disabled
              aip.dev/not-precedent: We really need this field to be required to support creation of
              the resource in the project context. --)
          The parent project id under which backup configuration will be created.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          (-- api-linter: core::0133::request-unknown-fields=disabled
              aip.dev/not-precedent: We really need this field to be required
              to support creation of the resource in the deployment context.. --)
          (-- api-linter: core::0133::request-required-fields=disabled
              aip.dev/not-precedent: We really need this field to be required
              to support creation of the resource in the deployment context.. --)
          Deployment id associated with the backup configuration.
        explode: true
        in: query
        name: deploymentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BackupConfig'
        description: Backup configuration for the backup.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateBackupConfig API creates the backup configuration of the backup.
      tags:
      - BackupConfigService
  /pds/v1/deployments/{deploymentId}/events:
    get:
      operationId: DeploymentEventService_ListDeploymentEvents
      parameters:
      - description: Deployment id for which events need to be listed.
        explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentEventsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListDeploymentEvents API returns the list of kubernetes events related
        to a deployment.
      tags:
      - DeploymentEventService
  /pds/v1/deployments:
    get:
      operationId: DeploymentService_ListDeployments
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the target cluster.
        explode: true
        in: query
        name: clusterId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the namespace.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: ListDeployments API lists the Deployment resources.
      tags:
      - DeploymentService
    put:
      operationId: DeploymentService_UpdateDeployment
      requestBody:
        $ref: '#/components/requestBodies/v1Deployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: UpdateDeployment API updates the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/deployments/{id}:
    delete:
      operationId: DeploymentService_DeleteDeployment
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: DeleteDeployment API deletes the Deployment resource.
      tags:
      - DeploymentService
    get:
      operationId: DeploymentService_GetDeployment
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: GetDeployment API returns the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/deployments/{id}:credentials:
    get:
      operationId: DeploymentService_GetDeploymentCredentials
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentCredentials'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: GetDeploymentCredentials API returns the Credentials to be used to
        access the Deployment .
      tags:
      - DeploymentService
  /pds/v1/namespace/{namespaceId}/deployment:
    post:
      operationId: DeploymentService_CreateDeployment
      parameters:
      - description: |-
          UID of the namespace resource where this deployment will be created.
          (-- api-linter: core::0133::request-unknown-fields=disabled
              aip.dev/not-precedent: We need this field for to support creation of
              the resource in the namespace context. --)
        explode: false
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/v1Deployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: CreateDeployment API creates the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/backups:
    get:
      operationId: BackupService_ListBackups
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the target cluster.
        explode: true
        in: query
        name: clusterId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the namespace.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the backupConfiguration
        explode: true
        in: query
        name: backupConfigId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBackupsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: ListBackups API lists the Backup resources.
      tags:
      - BackupService
  /pds/v1/backups/{id}:
    delete:
      operationId: BackupService_DeleteBackup
      parameters:
      - description: UID of the Backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: DeleteBackup API deletes the Backup resource.
      tags:
      - BackupService
    get:
      operationId: BackupService_GetBackup
      parameters:
      - description: UID of the Backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Backup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: GetBackup API returns the Backup resource.
      tags:
      - BackupService
  /pds/v1/namespaces/{namespaceId}/restores:
    post:
      operationId: RestoreService_CreateRestore
      parameters:
      - description: |-
          UID of the namespace where restore will be created
          (-- api-linter: core::0133::request-unknown-fields=disabled
              aip.dev/not-precedent: We really need this field because namespace is the parent of the restore. --)
        explode: false
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Restore'
        description: Restore resource.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateRestore API creates the Restore resource.
      tags:
      - RestoreService
  /pds/v1/restores:
    get:
      operationId: RestoreService_ListRestores
      parameters:
      - description: Account ID for which the restore will be listed.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant ID for which the restore will be listed.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the restore will be listed.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Deployment ID for which the restore will be listed.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: Backup ID for which the restore will be listed.
        explode: true
        in: query
        name: backupId
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRestoresResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListRestore API lists the Restore resources.
      tags:
      - RestoreService
  /pds/v1/restores/{id}:
    delete:
      operationId: RestoreService_DeleteRestore
      parameters:
      - description: UID of the Restore.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteRestore API deletes the restore.
      tags:
      - RestoreService
    get:
      operationId: RestoreService_GetRestore
      parameters:
      - description: UID of the restore.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetRestore API returns the Restore resource.
      tags:
      - RestoreService
  /pds/v1/restores/{id}:recreate:
    post:
      operationId: RestoreService_RecreateRestore
      parameters:
      - description: UID of the existing restore
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreServiceRecreateRestoreBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: RecreateRestore API recreates a already failed restore.
      tags:
      - RestoreService
  /pds/v1/deploymentConfigUpdates:
    get:
      operationId: DeploymentConfigUpdateService_ListDeploymentConfigUpdates
      parameters:
      - description: UID of the deployment
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Name of the attribute to sort results by.

           - FIELD_UNSPECIFIED: Unspecified, do not use.
           - NAME: Sorting based on the name of the resource.
           - CREATED_AT: Sorting on create time of the resource.
           - UPDATED_AT: Sorting on update time of the resource.
           - PHASE: Sorting on phase of the resource.
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: |-
          Order of sorting to be applied on requested list.
          If sort_by having some value and sort_order is not provided, by default ascending order will be used to sort the list.

           - VALUE_UNSPECIFIED: Unspecified, do not use.
           - ASC: Sort order ascending.
           - DESC: Sort order descending.
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentConfigUpdatesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: ListDeploymentConfigUpdates API returns a list of deployment config
        updates
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deploymentConfigUpdates/{id}:
    get:
      operationId: DeploymentConfigUpdateService_GetDeploymentConfigUpdate
      parameters:
      - description: UID of the deployment config update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: GetDeploymentConfigUpdate API returns a deployment config update by
        id
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deploymentConfigUpdates/{id}:retry:
    post:
      operationId: DeploymentConfigUpdateService_RetryDeploymentConfigUpdate
      parameters:
      - description: UID of the deployment config update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentConfigUpdateServiceRetryDeploymentConfigUpdateBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: RetryDeploymentConfigUpdate API retries a deployment config update
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deployments/{deploymentConfigUpdate.config.deploymentMeta.uid}/deploymentConfigUpdates:
    put:
      operationId: DeploymentConfigUpdateService_CreateDeploymentConfigUpdate
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: deploymentConfigUpdate.config.deploymentMeta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config_of_the_deployment_for_which_config_update_is_requested'
        description: Config of the deployment for which config update is requested
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: |-
        CreateDeploymentConfigUpdate API creates a deployment config update
        (-- api-linter: core::0133::http-method=disabled
            aip.dev/not-precedent: We need to do this because here we are actually updating deployment config. --)
      tags:
      - DeploymentConfigUpdateService
components:
  requestBodies:
    v1Deployment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1Deployment'
      description: Deployment resource.
      required: true
  schemas:
    SortByField:
      default: FIELD_UNSPECIFIED
      description: |-
        Field names for sorting the list of resources.

         - FIELD_UNSPECIFIED: Unspecified, do not use.
         - NAME: Sorting based on the name of the resource.
         - CREATED_AT: Sorting on create time of the resource.
         - UPDATED_AT: Sorting on update time of the resource.
         - PHASE: Sorting on phase of the resource.
      enum:
      - FIELD_UNSPECIFIED
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - PHASE
      type: string
    SortOrderValue:
      default: VALUE_UNSPECIFIED
      description: |-
        Value of sort order for the list of resources.

         - VALUE_UNSPECIFIED: Unspecified, do not use.
         - ASC: Sort order ascending.
         - DESC: Sort order descending.
      enum:
      - VALUE_UNSPECIFIED
      - ASC
      - DESC
      type: string
    StatusState:
      default: STATE_UNSPECIFIED
      description: |-
        Enum for State of the Task.

         - STATE_UNSPECIFIED: State is unspecified.
         - QUEUED: Task queued.
         - FAILED: Task failed.
         - RUNNING: Task is still running.
         - COMPLETED: Task is completed.
      enum:
      - STATE_UNSPECIFIED
      - QUEUED
      - FAILED
      - RUNNING
      - COMPLETED
      type: string
    googlerpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    protobufAny:
      additionalProperties: {}
      properties:
        '@type':
          type: string
      type: object
    taskv1Status:
      description: Status of the Task.
      example:
        currentStep: currentStep
        totalSteps: totalSteps
        associatedResource:
          uid: uid
          type: type
          version: version
        state: null
        logs:
        - logs
        - logs
      properties:
        totalSteps:
          description: Total number of steps involved in the task.
          format: int64
          type: string
        currentStep:
          description: Current step of the running task.
          format: int64
          type: string
        logs:
          description: List of log strings associated with the task.
          items:
            type: string
          type: array
        associatedResource:
          $ref: '#/components/schemas/v1Reference'
        state:
          $ref: '#/components/schemas/StatusState'
      type: object
    v1ListTasksResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        tasks:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            currentStep: currentStep
            totalSteps: totalSteps
            associatedResource:
              uid: uid
              type: type
              version: version
            state: null
            logs:
            - logs
            - logs
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            currentStep: currentStep
            totalSteps: totalSteps
            associatedResource:
              uid: uid
              type: type
              version: version
            state: null
            logs:
            - logs
            - logs
      properties:
        tasks:
          description: List of Task resources.
          items:
            $ref: '#/components/schemas/v1Task'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: Response to list tasks apis
      type: object
    v1Meta:
      description: Meta holds general resource metadata.
      example:
        uid: uid
        parentReference:
          uid: uid
          type: type
          version: version
        createTime: 2000-01-23T04:56:07.000+00:00
        resourceVersion: resourceVersion
        name: name
        description: description
        annotations:
          key: annotations
        updateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        uid:
          description: UID of the resource of the format <resource prefix>-<uuid>.
          type: string
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      type: object
    v1PageBasedPaginationRequest:
      properties:
        pageNumber:
          format: int64
          title: Page number is the page number to return based on the size
          type: string
        pageSize:
          format: int64
          title: Page size is the maximum number of records to include per page
          type: string
      title: Request parameters for page-based pagination
      type: object
    v1PageBasedPaginationResponse:
      example:
        totalRecords: totalRecords
        nextPage: nextPage
        totalPages: totalPages
        pageSize: pageSize
        prevPage: prevPage
        currentPage: currentPage
      properties:
        totalRecords:
          format: int64
          title: Total records without pagination available in the dataset
          type: string
        currentPage:
          format: int64
          title: Current page number for this paginated response
          type: string
        pageSize:
          format: int64
          title: Page size used for pagination
          type: string
        totalPages:
          format: int64
          title: Total pages based on the page_size provided in the request
          type: string
        nextPage:
          format: int64
          title: "Next page if available in the dataset, -1 if unavailable"
          type: string
        prevPage:
          format: int64
          title: "Previous page if available in the dataset, -1 if unavailable"
          type: string
      title: Metadata related to page based pagination for paginated API responses
      type: object
    v1Reference:
      description: |-
        Reference identifies the resource type, version of the uid and
        the resource.
      example:
        uid: uid
        type: type
        version: version
      properties:
        type:
          description: API group of the resource.
          type: string
        version:
          description: Version of the API.
          type: string
        uid:
          description: UID of the resource.
          type: string
      type: object
    v1Sort:
      description: The details of the attribute for which the requested list of resource
        to be sorted.
      properties:
        sortBy:
          $ref: '#/components/schemas/SortByField'
        sortOrder:
          $ref: '#/components/schemas/SortOrderValue'
      type: object
    v1Task:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          currentStep: currentStep
          totalSteps: totalSteps
          associatedResource:
            uid: uid
            type: type
            version: version
          state: null
          logs:
          - logs
          - logs
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/taskv1Status'
      title: Resource representing the backend worker task
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1SearchQueryRequest:
      properties:
        dataServiceId:
          description: Id of the dataservice.
          type: string
        query:
          description: Query string.
          type: string
      title: Search request to query
      type: object
    v1SearchQueryResponse:
      description: Response structure contains fields for query response from copilot
        service.
      example:
        dataServiceId: dataServiceId
        response: response
        responseTime: 2000-01-23T04:56:07.000+00:00
        query: query
        id: id
      properties:
        dataServiceId:
          description: |-
            (-- api-linter: core::0158::response-repeated-first-field=disabled
                aip.dev/not-precedent: We need to do this because of the copilot response. --)
            (-- api-linter: core::0158::response-plural-first-field=disabled
                aip.dev/not-precedent: We need to do this because of the copilot response. --)
            Id of the dataservice.
          type: string
        id:
          description: Unique id of response.
          type: string
        query:
          description: Query string.
          type: string
        response:
          description: Response string.
          type: string
        responseTime:
          description: Response time.
          format: date-time
          type: string
      type: object
    v1Image:
      description: Resource representing the data service image.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        info:
          registry: registry
          capabilities:
            key: capabilities
          references:
            dataServiceId: dataServiceId
          build: build
          additionalImages:
            key: additionalImages
          namespace: namespace
          tag: tag
          tlsSupport: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        info:
          $ref: '#/components/schemas/v1Info'
      type: object
    v1Info:
      description: Information related to the data service image.
      example:
        registry: registry
        capabilities:
          key: capabilities
        references:
          dataServiceId: dataServiceId
        build: build
        additionalImages:
          key: additionalImages
        namespace: namespace
        tag: tag
        tlsSupport: true
      properties:
        references:
          $ref: '#/components/schemas/v1References'
        registry:
          description: Image registry where the image is stored.
          type: string
        namespace:
          description: Image registry namespace where the image is stored.
          type: string
        tag:
          description: Tag associated with the image.
          type: string
        build:
          description: Build version of the image.
          type: string
        tlsSupport:
          description: Flag indicating if TLS is supported for a data service using
            this image.
          type: boolean
        capabilities:
          additionalProperties:
            type: string
          description: Capabilities associated with this image.
          type: object
        additionalImages:
          additionalProperties:
            type: string
          description: Additional images associated with this data service image.
          type: object
      type: object
    v1ListImagesResponse:
      description: Response to list images request.
      example:
        images:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            registry: registry
            capabilities:
              key: capabilities
            references:
              dataServiceId: dataServiceId
            build: build
            additionalImages:
              key: additionalImages
            namespace: namespace
            tag: tag
            tlsSupport: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            registry: registry
            capabilities:
              key: capabilities
            references:
              dataServiceId: dataServiceId
            build: build
            additionalImages:
              key: additionalImages
            namespace: namespace
            tag: tag
            tlsSupport: true
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        images:
          description: List of images.
          items:
            $ref: '#/components/schemas/v1Image'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1References:
      description: References to other resources.
      example:
        dataServiceId: dataServiceId
      properties:
        dataServiceId:
          description: UID of the Data service.
          type: string
      type: object
    v1DataService:
      description: "A data service is a independent, loosely coupled function that\
        \ calculate information collected and saved in data storage volumes."
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        info:
          nodeRestrictions:
            allowedSizes:
            - allowedSizes
            - allowedSizes
            resizeDisabledSizes:
            - resizeDisabledSizes
            - resizeDisabledSizes
            downsizeEnabled: true
          nodesLimitations: nodesLimitations
          shortName: shortName
          enabled: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        info:
          $ref: '#/components/schemas/v1Info1'
      type: object
    v1Info1:
      description: Desired Info of the data service.
      example:
        nodeRestrictions:
          allowedSizes:
          - allowedSizes
          - allowedSizes
          resizeDisabledSizes:
          - resizeDisabledSizes
          - resizeDisabledSizes
          downsizeEnabled: true
        nodesLimitations: nodesLimitations
        shortName: shortName
        enabled: true
      properties:
        shortName:
          description: Short name of the data service.
          type: string
        enabled:
          description: Enabled flag suggests if the data service is enabled or not.
          type: boolean
        nodesLimitations:
          description: Node limitations.
          type: string
        nodeRestrictions:
          $ref: '#/components/schemas/v1NodeRestrictions'
      type: object
    v1ListDataServicesResponse:
      description: Response for listing data service.
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        dataServices:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            nodeRestrictions:
              allowedSizes:
              - allowedSizes
              - allowedSizes
              resizeDisabledSizes:
              - resizeDisabledSizes
              - resizeDisabledSizes
              downsizeEnabled: true
            nodesLimitations: nodesLimitations
            shortName: shortName
            enabled: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            nodeRestrictions:
              allowedSizes:
              - allowedSizes
              - allowedSizes
              resizeDisabledSizes:
              - resizeDisabledSizes
              - resizeDisabledSizes
              downsizeEnabled: true
            nodesLimitations: nodesLimitations
            shortName: shortName
            enabled: true
      properties:
        dataServices:
          description: List of data service resources.
          items:
            $ref: '#/components/schemas/v1DataService'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1NodeRestrictions:
      example:
        allowedSizes:
        - allowedSizes
        - allowedSizes
        resizeDisabledSizes:
        - resizeDisabledSizes
        - resizeDisabledSizes
        downsizeEnabled: true
      properties:
        allowedSizes:
          description: List of all allowed node sizes.
          items:
            format: int64
            type: string
          type: array
        downsizeEnabled:
          description: Flag to determine whether downsizing the cluster is enabled
            during editing.
          type: boolean
        resizeDisabledSizes:
          description: List of all node sizes that are not allowed to change during
            editing.
          items:
            format: int64
            type: string
          type: array
      title: |-
        Node Restrictions defines the number of replicas of data service on which the restrictions are imposed.
        Eg: allowed_sizes = [1,2,4,6]; downsize_enabled = true;  resize_disabled_sizes = [2]
      type: object
    v1CompatibleVersions:
      description: CompatibleVersions contains compatibility information for a particular
        Version.
      example:
        versionId: versionId
        dataServiceId: dataServiceId
        dataServiceName: dataServiceName
        latestCompatibleVersions:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
        versionName: versionName
        latestCompatiblePatch:
          meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
        compatibleVersions:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
      properties:
        dataServiceId:
          title: UID of the data service
          type: string
        dataServiceName:
          title: name of the data service
          type: string
        versionId:
          title: UID of the version
          type: string
        versionName:
          title: name of the version
          type: string
        latestCompatiblePatch:
          $ref: '#/components/schemas/v1DataServiceVersion'
        latestCompatibleVersions:
          description: LatestCompatibleVersions contains the latest patch versions
            of compatible major/minor versions.
          items:
            $ref: '#/components/schemas/v1DataServiceVersion'
          type: array
        compatibleVersions:
          description: CompatibleVersions contains all compatible versions.
          items:
            $ref: '#/components/schemas/v1DataServiceVersion'
          type: array
      type: object
    v1DataServiceVersion:
      description: Version represents a particular version of a data service.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        info:
          enabled: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        info:
          $ref: '#/components/schemas/v1Info2'
      type: object
    v1Info2:
      description: Information related to the data service version.
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled indicates if the version is enabled.
          type: boolean
      type: object
    v1ListCompatibleDataServiceVersionsResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        compatibleDataServiceVersions:
        - versionId: versionId
          dataServiceId: dataServiceId
          dataServiceName: dataServiceName
          latestCompatibleVersions:
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          versionName: versionName
          latestCompatiblePatch:
            meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          compatibleVersions:
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
        - versionId: versionId
          dataServiceId: dataServiceId
          dataServiceName: dataServiceName
          latestCompatibleVersions:
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          versionName: versionName
          latestCompatiblePatch:
            meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          compatibleVersions:
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
          - meta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            info:
              enabled: true
      properties:
        compatibleDataServiceVersions:
          items:
            $ref: '#/components/schemas/v1CompatibleVersions'
          title: List of compatible versions of the data service
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListCompatibleDataServiceVersionsResponse is the response for ListCompatibleDataServiceVersions
      type: object
    v1ListDataServiceVersionsResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        dataServiceVersions:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            enabled: true
      properties:
        dataServiceVersions:
          items:
            $ref: '#/components/schemas/v1DataServiceVersion'
          title: List of versions of the data service
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListDataServiceVersionsResponse is the response object for ListVersions
      type: object
    protobufAny1:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    rpcStatus1:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny1'
          type: array
      type: object
    ConfigBackupLevel:
      default: BACKUP_LEVEL_UNSPECIFIED
      description: |-
        Enum for Backup Level of the backup configuration.

         - BACKUP_LEVEL_UNSPECIFIED: Unspecified level.
         - SNAPSHOT: Snapshot.
         - INCREMENTAL: Incremental.
      enum:
      - BACKUP_LEVEL_UNSPECIFIED
      - SNAPSHOT
      - INCREMENTAL
      type: string
    ConfigBackupType:
      default: BACKUP_TYPE_UNSPECIFIED
      description: |-
        Enum for Backup Type of the backup configuration.

         - BACKUP_TYPE_UNSPECIFIED: Unspecified type.
         - ADHOC: Adhoc Backup.
         - SCHEDULED: Scheduled Backup.
      enum:
      - BACKUP_TYPE_UNSPECIFIED
      - ADHOC
      - SCHEDULED
      type: string
    ConfigReclaimPolicyType:
      default: RECLAIM_POLICY_TYPE_UNSPECIFIED
      description: |-
        Enum for Reclaim Policy for the backup configuration.

         - RECLAIM_POLICY_TYPE_UNSPECIFIED: Unspecified.
         - DELETE: Delete snapshot.
         - RETAIN: Retain snapshot.
      enum:
      - RECLAIM_POLICY_TYPE_UNSPECIFIED
      - DELETE
      - RETAIN
      type: string
    StatusPhase:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for Phases of the backup configuration.

         - PHASE_UNSPECIFIED: Unspecified state.
         - PENDING: Pending state.
         - FAILED: Failed state.
         - CREATED: Created state.
         - SUSPENDED: Suspended state.
      enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - FAILED
      - CREATED
      - SUSPENDED
      type: string
    backupconfigv1Status:
      description: Status for backup configuration.
      example:
        phase: null
        deploymentMetaData:
          tlsEnabled: true
          deploymentTargetName: deploymentTargetName
          name: name
          customResourceName: customResourceName
          namespaceName: namespaceName
        customResourceName: customResourceName
        isScheduleSynchronized: true
      properties:
        phase:
          $ref: '#/components/schemas/StatusPhase'
        customResourceName:
          description: Custom Resource Name is the kubernetes resource name for the
            backup that is built from ID.
          type: string
        isScheduleSynchronized:
          description: Flag to check if the schedule is synchronized or not.
          type: boolean
        deploymentMetaData:
          $ref: '#/components/schemas/v1DeploymentMetaData'
      type: object
    v1BackupConfig:
      description: Resource representing the backup configuration for a backup.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          jobHistoryLimit: 0
          suspend: true
          schedule:
            resourceVersion: resourceVersion
            id: id
          references:
            dataServiceId: dataServiceId
            deploymentId: deploymentId
            backupLocationId: backupLocationId
          reclaimPolicy: null
          backupLevel: null
          backupType: null
        status:
          phase: null
          deploymentMetaData:
            tlsEnabled: true
            deploymentTargetName: deploymentTargetName
            name: name
            customResourceName: customResourceName
            namespaceName: namespaceName
          customResourceName: customResourceName
          isScheduleSynchronized: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config'
        status:
          $ref: '#/components/schemas/backupconfigv1Status'
      type: object
    v1Config:
      description: Desired config of the backup configuration.
      example:
        jobHistoryLimit: 0
        suspend: true
        schedule:
          resourceVersion: resourceVersion
          id: id
        references:
          dataServiceId: dataServiceId
          deploymentId: deploymentId
          backupLocationId: backupLocationId
        reclaimPolicy: null
        backupLevel: null
        backupType: null
      properties:
        references:
          $ref: '#/components/schemas/v1References1'
        jobHistoryLimit:
          description: Job History Limit is a number of retained backup jobs. Must
            be greater than or equal to 1.
          format: int32
          type: integer
        schedule:
          $ref: '#/components/schemas/v1Schedule'
        suspend:
          description: Suspend flag is used to suspend a scheduled backup from creating
            new backup jobs.
          type: boolean
        backupType:
          $ref: '#/components/schemas/ConfigBackupType'
        backupLevel:
          $ref: '#/components/schemas/ConfigBackupLevel'
        reclaimPolicy:
          $ref: '#/components/schemas/ConfigReclaimPolicyType'
      type: object
    v1DeploymentMetaData:
      description: Deployment Meta Data contains the details of the deployment associated
        with the backup configuration.
      example:
        tlsEnabled: true
        deploymentTargetName: deploymentTargetName
        name: name
        customResourceName: customResourceName
        namespaceName: namespaceName
      properties:
        name:
          description: Name of the deployment.
          type: string
        customResourceName:
          description: Custom Resource Name is the kubernetes resource name for the
            deployment meta data.
          readOnly: true
          type: string
        deploymentTargetName:
          description: Deployment Target Name associated with the backup configuration.
          type: string
        namespaceName:
          description: Namespace name to which the backup configuration is associated.
          type: string
        tlsEnabled:
          description: Flag to check whether Transport Layer Security support is enabled
            or not.
          type: boolean
      type: object
    v1ListBackupConfigsResponse:
      description: Response of list of backup configurations.
      example:
        backupConfigs:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            jobHistoryLimit: 0
            suspend: true
            schedule:
              resourceVersion: resourceVersion
              id: id
            references:
              dataServiceId: dataServiceId
              deploymentId: deploymentId
              backupLocationId: backupLocationId
            reclaimPolicy: null
            backupLevel: null
            backupType: null
          status:
            phase: null
            deploymentMetaData:
              tlsEnabled: true
              deploymentTargetName: deploymentTargetName
              name: name
              customResourceName: customResourceName
              namespaceName: namespaceName
            customResourceName: customResourceName
            isScheduleSynchronized: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            jobHistoryLimit: 0
            suspend: true
            schedule:
              resourceVersion: resourceVersion
              id: id
            references:
              dataServiceId: dataServiceId
              deploymentId: deploymentId
              backupLocationId: backupLocationId
            reclaimPolicy: null
            backupLevel: null
            backupType: null
          status:
            phase: null
            deploymentMetaData:
              tlsEnabled: true
              deploymentTargetName: deploymentTargetName
              name: name
              customResourceName: customResourceName
              namespaceName: namespaceName
            customResourceName: customResourceName
            isScheduleSynchronized: true
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        backupConfigs:
          description: The list of backup configurations.
          items:
            $ref: '#/components/schemas/v1BackupConfig'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1References1:
      description: References to the associated resources for backup configuration.
      example:
        dataServiceId: dataServiceId
        deploymentId: deploymentId
        backupLocationId: backupLocationId
      properties:
        deploymentId:
          description: UID of the deployment to which the backup configuration belong.
          readOnly: true
          type: string
        backupLocationId:
          description: UID of the backup target to which the backup configuration
            belong.
          type: string
        dataServiceId:
          description: UID of the data service to which the backup configuration belong.
          readOnly: true
          type: string
      type: object
    v1Schedule:
      description: Schedule associated with the backup config.
      example:
        resourceVersion: resourceVersion
        id: id
      properties:
        id:
          description: UID of the schedule associated with the backup configuration.
          type: string
        resourceVersion:
          description: Resource version of the schedule.
          type: string
      type: object
    deploymenteventsv1Status:
      description: Status of the event.
      example:
        resourceKind: resourceKind
        reason: reason
        count: count
        action: action
        timestampTime: 2000-01-23T04:56:07.000+00:00
        resourceName: resourceName
        message: message
        type: null
      properties:
        action:
          description: Action involved in the event.
          type: string
        count:
          description: No. of times the event has been generated.
          format: int64
          type: string
        message:
          description: Message related to the event.
          type: string
        reason:
          description: Reason for the event.
          type: string
        resourceKind:
          description: Resource Kind.
          type: string
        resourceName:
          description: Resource Name.
          type: string
        timestampTime:
          description: Timestamp of the event.
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/v1EventType'
      type: object
    v1DeploymentEvent:
      description: DeploymentEvent contains all the fields received from kubernetes
        event of a deployment.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          resourceKind: resourceKind
          reason: reason
          count: count
          action: action
          timestampTime: 2000-01-23T04:56:07.000+00:00
          resourceName: resourceName
          message: message
          type: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/deploymenteventsv1Status'
      type: object
    v1EventType:
      default: EVENT_TYPE_UNSPECIFIED
      description: |-
        EventType is type of kubernetes event.

         - EVENT_TYPE_UNSPECIFIED: Unspecified.
         - NORMAL: Normal event.
         - WARNING: Warning event.
      enum:
      - EVENT_TYPE_UNSPECIFIED
      - NORMAL
      - WARNING
      type: string
    v1ListDeploymentEventsResponse:
      description: Response to list the deployment events.
      example:
        deploymentEvents:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            resourceKind: resourceKind
            reason: reason
            count: count
            action: action
            timestampTime: 2000-01-23T04:56:07.000+00:00
            resourceName: resourceName
            message: message
            type: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            resourceKind: resourceKind
            reason: reason
            count: count
            action: action
            timestampTime: 2000-01-23T04:56:07.000+00:00
            resourceName: resourceName
            message: message
            type: null
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deploymentEvents:
          description: List of Event resources.
          items:
            $ref: '#/components/schemas/v1DeploymentEvent'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    deploymentv1Status:
      description: Status of the Deployment.
      example:
        phase: null
        deploymentTopologyStatus:
        - phase: null
          health: null
          readyReplicas: readyReplicas
          connectionInfo:
            notReadyPods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            pods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            connectionDetails:
              nodes:
              - nodes
              - nodes
              ports:
                key: 0
            clusterDetails:
              key:
                '@type': '@type'
        - phase: null
          health: null
          readyReplicas: readyReplicas
          connectionInfo:
            notReadyPods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            pods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            connectionDetails:
              nodes:
              - nodes
              - nodes
              ports:
                key: 0
            clusterDetails:
              key:
                '@type': '@type'
        health: null
        initialized: initialized
        connectionInfo:
          key:
            '@type': '@type'
      properties:
        health:
          $ref: '#/components/schemas/v1StatusHealth'
        phase:
          $ref: '#/components/schemas/v1StatusPhase'
        connectionInfo:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny2'
          description: "ConnectionDetails urls, ports, credentials, etc for connecting\
            \ to the data service."
          type: object
        initialized:
          description: Initialize used to control startup scripts.
          type: string
        deploymentTopologyStatus:
          description: Status of the deployment topology.
          items:
            $ref: '#/components/schemas/v1DeploymentTopologyStatus'
          type: array
      type: object
    googlerpcStatus1:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny2'
          type: array
      type: object
    protobufAny2:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      example:
        '@type': '@type'
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    v1Config1:
      description: Desired configuration of the Deployment.
      example:
        tlsEnabled: true
        references:
          imageId: imageId
          restoreId: restoreId
          projectId: projectId
          targetClusterId: targetClusterId
        deploymentTopologies:
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
      properties:
        references:
          $ref: '#/components/schemas/v1References2'
        tlsEnabled:
          description: Flag to enable TLS for the Data Service.
          type: boolean
        deploymentTopologies:
          description: A deployment topology contains a number of nodes that have
            various attributes as a collective group.
          items:
            $ref: '#/components/schemas/v1DeploymentTopology'
          type: array
      type: object
    v1ConnectionDetails:
      description: ConnectionDetails of data service.
      example:
        nodes:
        - nodes
        - nodes
        ports:
          key: 0
      properties:
        nodes:
          description: Nodes of the data service.
          items:
            type: string
          type: array
        ports:
          additionalProperties:
            format: int32
            type: integer
          description: Ports provided by the data service (name and number).
          type: object
      type: object
    v1ConnectionInfo:
      description: Connection Information for the Deployment Topology.
      example:
        notReadyPods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        pods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        connectionDetails:
          nodes:
          - nodes
          - nodes
          ports:
            key: 0
        clusterDetails:
          key:
            '@type': '@type'
      properties:
        pods:
          description: Ready pods.
          items:
            $ref: '#/components/schemas/v1PodInfo'
          type: array
        notReadyPods:
          description: Pods that are not ready.
          items:
            $ref: '#/components/schemas/v1PodInfo'
          type: array
        connectionDetails:
          $ref: '#/components/schemas/v1ConnectionDetails'
        clusterDetails:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny2'
          description: Stores details about the cluster.
          type: object
      type: object
    v1Deployment:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          tlsEnabled: true
          references:
            imageId: imageId
            restoreId: restoreId
            projectId: projectId
            targetClusterId: targetClusterId
          deploymentTopologies:
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
        status:
          phase: null
          deploymentTopologyStatus:
          - phase: null
            health: null
            readyReplicas: readyReplicas
            connectionInfo:
              notReadyPods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              pods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              connectionDetails:
                nodes:
                - nodes
                - nodes
                ports:
                  key: 0
              clusterDetails:
                key:
                  '@type': '@type'
          - phase: null
            health: null
            readyReplicas: readyReplicas
            connectionInfo:
              notReadyPods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              pods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              connectionDetails:
                nodes:
                - nodes
                - nodes
                ports:
                  key: 0
              clusterDetails:
                key:
                  '@type': '@type'
          health: null
          initialized: initialized
          connectionInfo:
            key:
              '@type': '@type'
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config1'
        status:
          $ref: '#/components/schemas/deploymentv1Status'
      title: Resource representing a Data Service Deployment
      type: object
    v1DeploymentCredentials:
      example:
        secret: secret
      properties:
        secret:
          description: secret to access the resource.
          type: string
      title: Credentials to access a Data Service Deployment
      type: object
    v1DeploymentTopology:
      description: |-
        A deployment topology contains a number of nodes that have various attributes as a collective group.
        This is consumed in a deployment and the functionality is being controlled by the CRUD APIs of deployment.
      example:
        serviceType: serviceType
        storageTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        resourceTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        replicas: replicas
        name: name
        description: description
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        serviceName: serviceName
        applicationTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
      properties:
        name:
          description: Name of the deployment topology.
          type: string
        description:
          description: Description of the deployment topology.
          type: string
        replicas:
          description: Number of replicas of data services.
          format: int64
          type: string
        serviceType:
          description: "Service type are standard Kubernetes service types such as\
            \ clusterIP, NodePort, load balancers, etc."
          type: string
        serviceName:
          description: Service name is the name of service as provided by user.
          type: string
        loadBalancerSourceRanges:
          description: Source IP ranges to use for the deployed Load Balancer.
          items:
            type: string
          type: array
        resourceTemplate:
          $ref: '#/components/schemas/v1Template'
        applicationTemplate:
          $ref: '#/components/schemas/v1Template'
        storageTemplate:
          $ref: '#/components/schemas/v1Template'
      type: object
    v1DeploymentTopologyStatus:
      description: Status of the deployment topology. It is consumed in Deployment.
      example:
        phase: null
        health: null
        readyReplicas: readyReplicas
        connectionInfo:
          notReadyPods:
          - workerNode: workerNode
            ip: ip
            name: name
          - workerNode: workerNode
            ip: ip
            name: name
          pods:
          - workerNode: workerNode
            ip: ip
            name: name
          - workerNode: workerNode
            ip: ip
            name: name
          connectionDetails:
            nodes:
            - nodes
            - nodes
            ports:
              key: 0
          clusterDetails:
            key:
              '@type': '@type'
      properties:
        health:
          $ref: '#/components/schemas/v1DeploymentTopologyStatusHealth'
        phase:
          $ref: '#/components/schemas/v1DeploymentTopologyStatusPhase'
        readyReplicas:
          description: Number of replicas reported by Target Cluster that are up and
            running.
          format: int64
          type: string
        connectionInfo:
          $ref: '#/components/schemas/v1ConnectionInfo'
      type: object
    v1DeploymentTopologyStatusHealth:
      default: UNKNOWN
      description: |-
        Enum for Health of the deployment topology.

         - UNKNOWN: Health is unknown.
         - UNAVAILABLE: Deployment Topology is Unavailable.
         - PARTIALLY_AVAILABLE: Deployment Topology is Partially available.
         - AVAILABLE: Deployment Topology is available.
      enum:
      - UNKNOWN
      - UNAVAILABLE
      - PARTIALLY_AVAILABLE
      - AVAILABLE
      type: string
    v1DeploymentTopologyStatusPhase:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for Phase of the Deployment Topology.

         - PHASE_UNSPECIFIED: Unspecified status.
         - IN_PROGRESS: In progress Status.
         - PARTIAL_SUCCESS: Partial Success Status.
         - SUCCESS: Successful Status.
         - DELETE_PENDING: Delete is pending Status.
         - DELETING: Delete in progress Status.
         - FAILED: Failed Status.
         - TIMED_OUT: Timed Out Status.
      enum:
      - PHASE_UNSPECIFIED
      - IN_PROGRESS
      - PARTIAL_SUCCESS
      - SUCCESS
      - DELETE_PENDING
      - DELETING
      - FAILED
      - TIMED_OUT
      type: string
    v1ListDeploymentsResponse:
      description: Response to list Deployment request.
      example:
        deployments:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
          status:
            phase: null
            deploymentTopologyStatus:
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            health: null
            initialized: initialized
            connectionInfo:
              key:
                '@type': '@type'
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
          status:
            phase: null
            deploymentTopologyStatus:
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            health: null
            initialized: initialized
            connectionInfo:
              key:
                '@type': '@type'
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deployments:
          description: List of deployment resources.
          items:
            $ref: '#/components/schemas/v1Deployment'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1PodInfo:
      description: PodInfo contains information about a pod.
      example:
        workerNode: workerNode
        ip: ip
        name: name
      properties:
        ip:
          description: The IP of a pod.
          type: string
        name:
          description: Name is the Hostname of a pod.
          type: string
        workerNode:
          description: Node that hosts a particular pod.
          type: string
      type: object
    v1References2:
      description: References to other resources.
      example:
        imageId: imageId
        restoreId: restoreId
        projectId: projectId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          description: UID of the target cluster in which Data Service will be deployed.
          type: string
        imageId:
          description: UID of the image to be used for the Data Service Deployment.
          type: string
        projectId:
          description: UID of the project to which DataService Deployment associated.
          type: string
        restoreId:
          description: UID of the restore id for the Deployment.
          readOnly: true
          type: string
      type: object
    v1StatusHealth:
      default: HEALTH_UNSPECIFIED
      description: |-
        Enum for Health of the Deployment.

         - HEALTH_UNSPECIFIED: Health is unspecified.
         - AVAILABLE: Deployment is Available.
         - PARTIALLY_AVAILABLE: Deployment is PartiallyAvailable.
         - UNAVAILABLE: Deployment is Unavailable.
      enum:
      - HEALTH_UNSPECIFIED
      - AVAILABLE
      - PARTIALLY_AVAILABLE
      - UNAVAILABLE
      type: string
    v1StatusPhase:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for Status of the Deployment.

         - PHASE_UNSPECIFIED: Phase is unspecified.
         - INITIALIZING: Deployment is initializing.
         - RESTORING: Restore of Deployment is in progress.
         - FAILED: Deployment is Failed.
         - DELETING: Deployment is being deleted.
         - PREPARING: Deployment is Preparing.
         - DEPLOYED: Deployment is Deployed.
         - TIMED_OUT: Deployment is Timeout.
      enum:
      - PHASE_UNSPECIFIED
      - INITIALIZING
      - RESTORING
      - FAILED
      - DELETING
      - PREPARING
      - DEPLOYED
      - TIMED_OUT
      type: string
    v1Template:
      description: Template.
      example:
        resourceVersion: resourceVersion
        values:
          key:
            '@type': '@type'
        id: id
      properties:
        id:
          description: UID of the Template.
          type: string
        resourceVersion:
          description: Resource version of the template.
          readOnly: true
          type: string
        values:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny4'
          description: Values required for template.
          type: object
      type: object
    StatusPhase1:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for Phase of the Deployment.

         - PHASE_UNSPECIFIED: Phase is unspecified.
         - QUEUED: Backup is Queued.
         - COMPLETED: Backup is completed.
         - FAILED: Backup is failed.
      enum:
      - PHASE_UNSPECIFIED
      - QUEUED
      - COMPLETED
      - FAILED
      type: string
    backupv1Status:
      description: Status of the Backup.
      example:
        phase: null
        completionTime: 2000-01-23T04:56:07.000+00:00
        cloudSnapId: cloudSnapId
        fileSize: fileSize
        errorMessage: errorMessage
        errorCode: errorCode
        startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        cloudSnapId:
          title: CloudSnapID snapshot of the backup volume
          type: string
        startTime:
          format: date-time
          title: Start time of backup
          type: string
        completionTime:
          format: date-time
          title: Completion time of backup
          type: string
        phase:
          $ref: '#/components/schemas/StatusPhase1'
        errorCode:
          description: ErrorCode if CompletionStatus is "Failed".
          type: string
        errorMessage:
          title: ErrorMessage associated with the ErrorCode
          type: string
        fileSize:
          description: FileSize of the CloudSnap image.
          format: int64
          type: string
      type: object
    googlerpcStatus2:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny3'
          type: array
      type: object
    protobufAny3:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    v1Backup:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          references:
            imageId: imageId
          backupCapability: backupCapability
        status:
          phase: null
          completionTime: 2000-01-23T04:56:07.000+00:00
          cloudSnapId: cloudSnapId
          fileSize: fileSize
          errorMessage: errorMessage
          errorCode: errorCode
          startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config2'
        status:
          $ref: '#/components/schemas/backupv1Status'
      title: Resource representing a Data Service Backup
      type: object
    v1Config2:
      description: Desired configuration of the Backup.
      example:
        references:
          imageId: imageId
        backupCapability: backupCapability
      properties:
        references:
          $ref: '#/components/schemas/v1References3'
        backupCapability:
          description: BackupCapability of the deployment target when the snapshot
            was created.
          type: string
      type: object
    v1ListBackupsResponse:
      description: Reponse to list Backup request.
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        backups:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            references:
              imageId: imageId
            backupCapability: backupCapability
          status:
            phase: null
            completionTime: 2000-01-23T04:56:07.000+00:00
            cloudSnapId: cloudSnapId
            fileSize: fileSize
            errorMessage: errorMessage
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            references:
              imageId: imageId
            backupCapability: backupCapability
          status:
            phase: null
            completionTime: 2000-01-23T04:56:07.000+00:00
            cloudSnapId: cloudSnapId
            fileSize: fileSize
            errorMessage: errorMessage
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        backups:
          description: List of backup resources.
          items:
            $ref: '#/components/schemas/v1Backup'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1References3:
      description: References to other resources.
      example:
        imageId: imageId
      properties:
        imageId:
          description: UID of the image of the data service which will needs to be
            backup .
          type: string
      type: object
    RestoreServiceRecreateRestoreBody:
      example:
        namespaceId: namespaceId
        name: name
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          title: UID of the target cluster where restore will be created
          type: string
        name:
          title: Name of the restore
          type: string
        namespaceId:
          title: UID of mamespace where restore will be created
          type: string
      title: Request to recreate a restore
      type: object
    restorev1Status:
      description: Status of the restore.
      example:
        phase: null
        completedAt: 2000-01-23T04:56:07.000+00:00
        errorMessage: errorMessage
        startedAt: 2000-01-23T04:56:07.000+00:00
        errorCode: null
      properties:
        startedAt:
          format: date-time
          title: |-
            Time when restore was started
            (-- api-linter: core::0142::time-field-names=disabled
                aip.dev/not-precedent: We need to do this because we need different name for the field. --)
          type: string
        completedAt:
          format: date-time
          title: |-
            Time when restore was completed
            (-- api-linter: core::0142::time-field-names=disabled
                aip.dev/not-precedent: We need to do this because we need different name for the field. --)
          type: string
        errorCode:
          $ref: '#/components/schemas/v1ErrorCode'
        errorMessage:
          title: Error message is description of the error in restore
          type: string
        phase:
          $ref: '#/components/schemas/v1Phase'
      type: object
    v1Config3:
      description: Desired configuration of the restore.
      example:
        destinationReferences:
          deploymentId: deploymentId
          targetClusterId: targetClusterId
        sourceReferences:
          cloudsnapId: cloudsnapId
          deploymentId: deploymentId
          backupId: backupId
          backupLocationId: backupLocationId
        customResourceName: customResourceName
      properties:
        sourceReferences:
          $ref: '#/components/schemas/v1SourceReferences'
        destinationReferences:
          $ref: '#/components/schemas/v1DestinationReferences'
        customResourceName:
          description: "K8s resource name for restore, built from [\"restore-\" +\
            \ name + short-id]."
          readOnly: true
          type: string
      type: object
    v1DestinationReferences:
      description: Destination references for the restore.
      example:
        deploymentId: deploymentId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          title: UID of the target cluster where restore will be created
          type: string
        deploymentId:
          description: UID of the deployment created by the restore.
          readOnly: true
          type: string
      type: object
    v1ErrorCode:
      default: ERROR_CODE_UNSPECIFIED
      description: |-
        - ERROR_CODE_UNSPECIFIED: Error code not specified.
         - PX_CLOUD_CREDENTIALS_NOT_FOUND: Cloud credentials specified in Restore spec were not found by Portworx.
         - PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED: Problem triggering the cloudsnap restore in PX.
         - PX_CLOUD_SNAP_RESTORE_FAILED: Problem with finishing the cloudsnap restore in PX.
         - PX_GET_CLOUD_SNAP_STATUS_FAILED: Problem with getting the cloudsnap restore status from PX.
         - PX_GET_VOLUME_FAILED: Problem with getting the volume from PX.
         - READ_DATA_SERVICE_MANIFEST_FAILED: Problem with reading the data service manifest from the busybox pod.
         - UNMARSHAL_DATA_SERVICE_JSON: Problem with unmarshalling the JSON with data service manifest.
         - DEPLOYMENT_NAME_ALREADY_EXIST: Deployment name already used in the namespace.
         - TIMEOUT_BUSYBOX_POD_RUNNING: Timeout while waiting for the BusyBox pod to enter the running state.
         - BUSYBOX_POD_FAILED: Busybox pod has failed.
      enum:
      - ERROR_CODE_UNSPECIFIED
      - PX_CLOUD_CREDENTIALS_NOT_FOUND
      - PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED
      - PX_CLOUD_SNAP_RESTORE_FAILED
      - PX_GET_CLOUD_SNAP_STATUS_FAILED
      - PX_GET_VOLUME_FAILED
      - READ_DATA_SERVICE_MANIFEST_FAILED
      - UNMARSHAL_DATA_SERVICE_JSON
      - DEPLOYMENT_NAME_ALREADY_EXIST
      - TIMEOUT_BUSYBOX_POD_RUNNING
      - BUSYBOX_POD_FAILED
      title: Enums for error codes for restore on the target cluster
      type: string
    v1ListRestoresResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        restores:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            destinationReferences:
              deploymentId: deploymentId
              targetClusterId: targetClusterId
            sourceReferences:
              cloudsnapId: cloudsnapId
              deploymentId: deploymentId
              backupId: backupId
              backupLocationId: backupLocationId
            customResourceName: customResourceName
          status:
            phase: null
            completedAt: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            startedAt: 2000-01-23T04:56:07.000+00:00
            errorCode: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            destinationReferences:
              deploymentId: deploymentId
              targetClusterId: targetClusterId
            sourceReferences:
              cloudsnapId: cloudsnapId
              deploymentId: deploymentId
              backupId: backupId
              backupLocationId: backupLocationId
            customResourceName: customResourceName
          status:
            phase: null
            completedAt: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            startedAt: 2000-01-23T04:56:07.000+00:00
            errorCode: null
      properties:
        restores:
          items:
            $ref: '#/components/schemas/v1Restore'
          title: List of restores
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListRestoresResponse represents list restores response
      type: object
    v1Phase:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for phase of the restore.

         - PHASE_UNSPECIFIED: Phase is unspecified.
         - INITIALIZING: Restore is initializing.
         - PENDING: Restore has not yet started.
         - RESTORING_CLOUDSNAP: Waiting for the cloud snap restore to complete.
         - RESTORING_DATA_SERVICE_CR: PV and PVC resources are ready and we're waiting to get the data service manifest from the backup.
         - RESTORING_DEPLOYMENT: New data service has been created and we're waiting for the restore process to complete.
         - DEPLOYMENT_ENTERING_NORMAL_MODE: Restore process in data service has succeeded and we're waiting until it becomes healthy in normal mode.
         - SUCCESSFUL: Restore successful.
         - FAILED: Restore failed.
      enum:
      - PHASE_UNSPECIFIED
      - INITIALIZING
      - PENDING
      - RESTORING_CLOUDSNAP
      - RESTORING_DATA_SERVICE_CR
      - RESTORING_DEPLOYMENT
      - DEPLOYMENT_ENTERING_NORMAL_MODE
      - SUCCESSFUL
      - FAILED
      type: string
    v1Restore:
      description: Restore represents a data service restore.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          destinationReferences:
            deploymentId: deploymentId
            targetClusterId: targetClusterId
          sourceReferences:
            cloudsnapId: cloudsnapId
            deploymentId: deploymentId
            backupId: backupId
            backupLocationId: backupLocationId
          customResourceName: customResourceName
        status:
          phase: null
          completedAt: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          startedAt: 2000-01-23T04:56:07.000+00:00
          errorCode: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config3'
        status:
          $ref: '#/components/schemas/restorev1Status'
      type: object
    v1SourceReferences:
      description: SourceReferences for the restore.
      example:
        cloudsnapId: cloudsnapId
        deploymentId: deploymentId
        backupId: backupId
        backupLocationId: backupLocationId
      properties:
        deploymentId:
          description: UID of the deployment which was backed up.
          readOnly: true
          type: string
        backupId:
          description: UID of the backup.
          type: string
        backupLocationId:
          description: UID of the backup location.
          readOnly: true
          type: string
        cloudsnapId:
          description: UID of the cloud snapshot of the backup volume used for restore.
          readOnly: true
          type: string
      type: object
    DeploymentConfigUpdateServiceRetryDeploymentConfigUpdateBody:
      title: RetryDeploymentConfigUpdateRequest is the request for RetryDeploymentConfigUpdate
      type: object
    googlerpcStatus3:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny4'
          type: array
      type: object
    pdsdeploymentconfigupdatev1Config:
      example:
        deploymentMeta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        deploymentConfig:
          tlsEnabled: true
          references:
            imageId: imageId
            restoreId: restoreId
            projectId: projectId
            targetClusterId: targetClusterId
          deploymentTopologies:
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
      properties:
        deploymentMeta:
          $ref: '#/components/schemas/v1Meta'
        deploymentConfig:
          $ref: '#/components/schemas/pdsdeploymentv1Config'
      title: Config of the desired deployment configuration
      type: object
    pdsdeploymentconfigupdatev1Status:
      example:
        phase: null
        retryCount: 0
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        errorCode:
          description: Error Code is a short string that represents the error.
          type: string
        errorMessage:
          description: Error Message is a description of the error.
          type: string
        retryCount:
          format: int32
          title: Number of times the deployment config update has been retried
          type: integer
        phase:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1StatusPhase'
      title: Status of the deployment config update
      type: object
    pdsdeploymentconfigupdatev1StatusPhase:
      default: PHASE_UNSPECIFIED
      description: |-
        Enum for Phase of the Deployment config update.

         - PHASE_UNSPECIFIED: Phase is unspecified.
         - FAILED: Deployment config update failed.
         - QUEUED: Deployment config update is queued.
         - COMPLETED: Deployment config update is completed.
         - REQUEUED: Deployment config update is requeued.
      enum:
      - PHASE_UNSPECIFIED
      - FAILED
      - QUEUED
      - COMPLETED
      - REQUEUED
      type: string
    pdsdeploymentv1Config:
      description: Desired configuration of the Deployment.
      example:
        tlsEnabled: true
        references:
          imageId: imageId
          restoreId: restoreId
          projectId: projectId
          targetClusterId: targetClusterId
        deploymentTopologies:
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
      properties:
        references:
          $ref: '#/components/schemas/v1References4'
        tlsEnabled:
          description: Flag to enable TLS for the Data Service.
          type: boolean
        deploymentTopologies:
          description: A deployment topology contains a number of nodes that have
            various attributes as a collective group.
          items:
            $ref: '#/components/schemas/v1DeploymentTopology1'
          type: array
      type: object
    protobufAny4:
      additionalProperties: {}
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      example:
        '@type': '@type'
      properties:
        '@type':
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
      type: object
    v1DeploymentConfigUpdate:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          deploymentMeta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          deploymentConfig:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
        status:
          phase: null
          retryCount: 0
          errorMessage: errorMessage
          errorCode: errorCode
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Config'
        status:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Status'
      title: DeploymentConfigUpdate represents a deployment config update resource
      type: object
    v1DeploymentTopology1:
      description: |-
        A deployment topology contains a number of nodes that have various attributes as a collective group.
        This is consumed in a deployment and the functionality is being controlled by the CRUD APIs of deployment.
      example:
        serviceType: serviceType
        storageTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        resourceTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        replicas: replicas
        name: name
        description: description
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        serviceName: serviceName
        applicationTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
      properties:
        name:
          description: Name of the deployment topology.
          type: string
        description:
          description: Description of the deployment topology.
          type: string
        replicas:
          description: Number of replicas of data services.
          format: int64
          type: string
        serviceType:
          description: "Service type are standard Kubernetes service types such as\
            \ clusterIP, NodePort, load balancers, etc."
          type: string
        serviceName:
          description: Service name is the name of service as provided by user.
          type: string
        loadBalancerSourceRanges:
          description: Source IP ranges to use for the deployed Load Balancer.
          items:
            type: string
          type: array
        resourceTemplate:
          $ref: '#/components/schemas/v1Template'
        applicationTemplate:
          $ref: '#/components/schemas/v1Template'
        storageTemplate:
          $ref: '#/components/schemas/v1Template'
      type: object
    v1ListDeploymentConfigUpdatesResponse:
      example:
        deploymentConfigUpdates:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            deploymentMeta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            deploymentConfig:
              tlsEnabled: true
              references:
                imageId: imageId
                restoreId: restoreId
                projectId: projectId
                targetClusterId: targetClusterId
              deploymentTopologies:
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
          status:
            phase: null
            retryCount: 0
            errorMessage: errorMessage
            errorCode: errorCode
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            deploymentMeta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            deploymentConfig:
              tlsEnabled: true
              references:
                imageId: imageId
                restoreId: restoreId
                projectId: projectId
                targetClusterId: targetClusterId
              deploymentTopologies:
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
          status:
            phase: null
            retryCount: 0
            errorMessage: errorMessage
            errorCode: errorCode
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deploymentConfigUpdates:
          items:
            $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          title: List of deployment config updates
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListDeploymentConfigUpdatesResponse is the response for ListDeploymentConfigUpdates
      type: object
    v1References4:
      description: References to other resources.
      example:
        imageId: imageId
        restoreId: restoreId
        projectId: projectId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          description: UID of the target cluster in which Data Service will be deployed.
          type: string
        imageId:
          description: UID of the image to be used for the Data Service Deployment.
          type: string
        projectId:
          description: UID of the project to which DataService Deployment associated.
          type: string
        restoreId:
          description: UID of the restore id for the Deployment.
          readOnly: true
          type: string
      type: object
    Metadata_of_the_backup_configuration_:
      description: Metadata of the backup configuration.
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the backup configuration.
      type: object
    Desired_backup_configuration_:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_of_the_backup_configuration_'
        config:
          $ref: '#/components/schemas/v1Config'
        status:
          $ref: '#/components/schemas/backupconfigv1Status'
      title: Desired backup configuration.
      type: object
    Metadata_of_the_deployment_resource:
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the deployment resource
      type: object
    Config_of_the_deployment_for_which_config_update_is_requested:
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/Config_of_the_deployment_for_which_config_update_is_requested'
        status:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Status'
      title: Config of the deployment for which config update is requested
      type: object

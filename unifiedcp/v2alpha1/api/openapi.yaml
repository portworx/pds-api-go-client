openapi: 3.0.3
info:
  title: public/portworx/pds/backupconfig/apiv1/backupconfig.proto
  version: version not set
servers:
- url: /
tags:
- name: BackupConfigService
- name: BackupService
- name: DataServicesService
- name: DeploymentService
- name: DeploymentConfigUpdateService
- name: ImageService
- name: RestoreService
- name: TaskService
- name: CopilotService
- name: DeploymentEventService
- name: AccountService
- name: BackupLocationService
- name: CloudCredentialService
- name: IAMService
- name: InvitationService
- name: NamespaceService
- name: ProjectService
- name: ServiceAccountService
- name: TargetClusterService
- name: TargetClusterRegistrationManifestService
- name: TenantService
- name: ApplicationService
- name: WhoAmIService
paths:
  /pds/v1/backupConfigs:
    get:
      operationId: BackupConfigService_ListBackupConfigs
      parameters:
      - description: Account ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Cluster ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: targetClusterId
        required: false
        schema:
          type: string
        style: form
      - description: Namespace ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: Deployment ID for which the backup configurations will be listed.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBackupConfigsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListBackupConfigs API lists all the backup configuration for a deployment.
      tags:
      - BackupConfigService
  /pds/v1/backupConfigs/{backupConfig.meta.uid}:
    put:
      operationId: BackupConfigService_UpdateBackupConfig
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: backupConfig.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Desired_backup_configuration_'
        description: Desired backup configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: UpdateBackupConfig API updates the backup configuration of the backup.
      tags:
      - BackupConfigService
  /pds/v1/backupConfigs/{id}:
    delete:
      operationId: BackupConfigService_DeleteBackupConfig
      parameters:
      - description: ID of the backup configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteBackupConfig API deletes the backup configuration.
      tags:
      - BackupConfigService
    get:
      operationId: BackupConfigService_GetBackupConfig
      parameters:
      - description: ID of the backup configuration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetBackupConfig API returns the the backup configuration resource.
      tags:
      - BackupConfigService
  /pds/v1/projects/{projectId}/backupConfigs:
    post:
      operationId: BackupConfigService_CreateBackupConfig
      parameters:
      - description: "(-- api-linter: core::0133::request-required-fields=disabled\n\
          \    aip.dev/not-precedent: We really need this field to be required to\
          \ support creation of\n    the resource in the project context. --)\n(--\
          \ api-linter: core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We really need this field to be required to support creation of\n    the\
          \ resource in the project context. --)\nThe parent project id under which\
          \ backup configuration will be created."
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: "(-- api-linter: core::0133::request-unknown-fields=disabled\n\
          \    aip.dev/not-precedent: We really need this field to be required\n \
          \   to support creation of the resource in the deployment context.. --)\n\
          (-- api-linter: core::0133::request-required-fields=disabled\n    aip.dev/not-precedent:\
          \ We really need this field to be required\n    to support creation of the\
          \ resource in the deployment context.. --)\nDeployment id associated with\
          \ the backup configuration."
        explode: true
        in: query
        name: deploymentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BackupConfig'
        description: Backup configuration for the backup.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupConfig'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateBackupConfig API creates the backup configuration of the backup.
      tags:
      - BackupConfigService
  /pds/v1/backups:
    get:
      operationId: BackupService_ListBackups
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the target cluster.
        explode: true
        in: query
        name: clusterId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the namespace.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the backupConfiguration
        explode: true
        in: query
        name: backupConfigId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBackupsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: ListBackups API lists the Backup resources.
      tags:
      - BackupService
  /pds/v1/backups/{id}:
    delete:
      operationId: BackupService_DeleteBackup
      parameters:
      - description: UID of the Backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: DeleteBackup API deletes the Backup resource.
      tags:
      - BackupService
    get:
      operationId: BackupService_GetBackup
      parameters:
      - description: UID of the Backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Backup'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus1'
          description: An unexpected error response.
      summary: GetBackup API returns the Backup resource.
      tags:
      - BackupService
  /pds/v1/catalog/dataServices:
    get:
      operationId: DataServicesService_ListDataServices
      parameters:
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDataServicesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListDataServices API lists the the data service resources.
      tags:
      - DataServicesService
  /pds/v1/catalog/dataServices/{id}:
    get:
      operationId: DataServicesService_GetDataService
      parameters:
      - description: UID of the Data Service.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DataService'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetDataService API returns the the data service resource.
      tags:
      - DataServicesService
  /pds/v1/deployments:
    get:
      operationId: DeploymentService_ListDeployments
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the target cluster.
        explode: true
        in: query
        name: clusterId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the namespace.
        explode: true
        in: query
        name: namespaceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: ListDeployments API lists the Deployment resources.
      tags:
      - DeploymentService
    put:
      operationId: DeploymentService_UpdateDeployment
      requestBody:
        $ref: '#/components/requestBodies/v1Deployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: UpdateDeployment API updates the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/deployments/{id}:
    delete:
      operationId: DeploymentService_DeleteDeployment
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: DeleteDeployment API deletes the Deployment resource.
      tags:
      - DeploymentService
    get:
      operationId: DeploymentService_GetDeployment
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: GetDeployment API returns the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/deployments/{id}:credentials:
    get:
      operationId: DeploymentService_GetDeploymentCredentials
      parameters:
      - description: UID of the Deployment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentCredentials'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: GetDeploymentCredentials API returns the Credentials to be used to
        access the Deployment .
      tags:
      - DeploymentService
  /pds/v1/namespace/{namespaceId}/deployment:
    post:
      operationId: DeploymentService_CreateDeployment
      parameters:
      - description: "UID of the namespace resource where this deployment will be\
          \ created.\n(-- api-linter: core::0133::request-unknown-fields=disabled\n\
          \    aip.dev/not-precedent: We need this field for to support creation of\n\
          \    the resource in the namespace context. --)"
        explode: false
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/v1Deployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Deployment'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus2'
          description: An unexpected error response.
      summary: CreateDeployment API creates the Deployment resource.
      tags:
      - DeploymentService
  /pds/v1/deploymentConfigUpdates:
    get:
      operationId: DeploymentConfigUpdateService_ListDeploymentConfigUpdates
      parameters:
      - description: UID of the deployment
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentConfigUpdatesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: ListDeploymentConfigUpdates API returns a list of deployment config
        updates
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deploymentConfigUpdates/{id}:
    get:
      operationId: DeploymentConfigUpdateService_GetDeploymentConfigUpdate
      parameters:
      - description: UID of the deployment config update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: GetDeploymentConfigUpdate API returns a deployment config update by
        id
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deploymentConfigUpdates/{id}:retry:
    post:
      operationId: DeploymentConfigUpdateService_RetryDeploymentConfigUpdate
      parameters:
      - description: UID of the deployment config update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentConfigUpdateServiceRetryDeploymentConfigUpdateBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: RetryDeploymentConfigUpdate API retries a deployment config update
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/deployments/{deploymentConfigUpdate.config.deploymentMeta.uid}/deploymentConfigUpdates:
    put:
      operationId: DeploymentConfigUpdateService_CreateDeploymentConfigUpdate
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: deploymentConfigUpdate.config.deploymentMeta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config_of_the_deployment_for_which_config_update_is_requested'
        description: Config of the deployment for which config update is requested
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus3'
          description: An unexpected error response.
      summary: "CreateDeploymentConfigUpdate API creates a deployment config update\n\
        (-- api-linter: core::0133::http-method=disabled\n    aip.dev/not-precedent:\
        \ We need to do this because here we are actually updating deployment config.\
        \ --)"
      tags:
      - DeploymentConfigUpdateService
  /pds/v1/catalog/images:
    get:
      operationId: ImageService_ListImages
      parameters:
      - description: UID of the account.
        explode: true
        in: query
        name: dataServiceId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the tenant.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListImagesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListImages API lists the data service images.
      tags:
      - ImageService
  /pds/v1/catalog/images/{id}:
    get:
      operationId: ImageService_GetImage
      parameters:
      - description: UID of the image.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Image'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetImage API returns the information about the specified image.
      tags:
      - ImageService
  /pds/v1/namespaces/{namespaceId}/restores:
    post:
      operationId: RestoreService_CreateRestore
      parameters:
      - description: "UID of the namespace where restore will be created\n(-- api-linter:\
          \ core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We really need this field because namespace is the parent of the restore.\
          \ --)"
        explode: false
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Restore'
        description: Restore resource.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateRestore API creates the Restore resource.
      tags:
      - RestoreService
  /pds/v1/restores:
    get:
      operationId: RestoreService_ListRestores
      parameters:
      - description: Account ID for which the restore will be listed.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant ID for which the restore will be listed.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the restore will be listed.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Deployment ID for which the restore will be listed.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: Backup ID for which the restore will be listed.
        explode: true
        in: query
        name: backupId
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRestoresResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListRestore API lists the Restore resources.
      tags:
      - RestoreService
  /pds/v1/restores/{id}:
    delete:
      operationId: RestoreService_DeleteRestore
      parameters:
      - description: UID of the Restore.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteRestore API deletes the restore.
      tags:
      - RestoreService
    get:
      operationId: RestoreService_GetRestore
      parameters:
      - description: UID of the restore.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetRestore API returns the Restore resource.
      tags:
      - RestoreService
  /pds/v1/restores/{id}:recreate:
    post:
      operationId: RestoreService_RecreateRestore
      parameters:
      - description: UID of the existing restore
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreServiceRecreateRestoreBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Restore'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: RecreateRestore API recreates a already failed restore.
      tags:
      - RestoreService
  /pds/v1/tasks:
    get:
      operationId: TaskService_ListTasks
      parameters:
      - description: UID of the project.
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the deployment.
        explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the backup.
        explode: true
        in: query
        name: backupId
        required: false
        schema:
          type: string
        style: form
      - description: UID of the restore.
        explode: true
        in: query
        name: restoreId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTasksResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListTasks returns the list of tasks.
      tags:
      - TaskService
  /pds/v1/tasks/{id}:
    get:
      operationId: TaskService_GetTask
      parameters:
      - description: UID of the task.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Task'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetTask API returns the information about the specified task.
      tags:
      - TaskService
  /pds/v1/copilot/search:
    post:
      operationId: CopilotService_SearchQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SearchQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SearchQueryResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Search dataservice queries.
      tags:
      - CopilotService
  /pds/v1/deployments/{deploymentId}/events:
    get:
      operationId: DeploymentEventService_ListDeploymentEvents
      parameters:
      - description: Deployment id for which events need to be listed.
        explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDeploymentEventsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListDeploymentEvents API returns the list of kubernetes events related
        to a deployment.
      tags:
      - DeploymentEventService
  /v1/accounts:
    get:
      operationId: AccountService_ListAccounts
      parameters:
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAccountsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListAccounts API lists the accounts visible to the caller
      tags:
      - AccountService
    post:
      operationId: AccountService_CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Account'
        description: account to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Account'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: CreateAccount API creates a new Account
      tags:
      - AccountService
  /v1/accounts/{account.meta.uid}:
    put:
      operationId: AccountService_UpdateAccount
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: account.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account__for_which_name_needs_to_be_updated'
        description: account  for which name needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Account'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: UpdateAccount API updates the specified account.This API requires the
        caller to first get an Account from GetAccount().
      tags:
      - AccountService
  /v1/accounts/{accountId}:
    delete:
      operationId: AccountService_DeleteAccount
      parameters:
      - description: account id for which account details need to be fetched
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: DeleteAccount API deletes the specified account
      tags:
      - AccountService
    get:
      operationId: AccountService_GetAccount
      parameters:
      - description: account id for which account details need to be fetched
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Account'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetAccount API returns the info about account for given account id
      tags:
      - AccountService
  /v1/backupLocations:
    get:
      operationId: BackupLocationService_ListBackupLocations
      parameters:
      - description: Tenant ID for which the backup locations will be listed
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the backup locations will be listed
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBackupLocationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: List API lists all the backup locations for a tenant or project
      tags:
      - BackupLocationService
  /v1/backupLocations/{id}:
    delete:
      operationId: BackupLocationService_DeleteBackupLocation
      parameters:
      - description: ID of the backup location
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Delete API deletes a backup location
      tags:
      - BackupLocationService
    get:
      operationId: BackupLocationService_GetBackupLocation
      parameters:
      - description: ID of the backup location
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupLocation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Get API returns the backup location
      tags:
      - BackupLocationService
    put:
      operationId: BackupLocationService_UpdateBackupLocation
      parameters:
      - description: ID of the backup location
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the field that should be updated to the value specified
          in backup_location
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BackupLocation'
        description: Desired backup location configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupLocation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Update API updates a backup location
      tags:
      - BackupLocationService
  /v1/tenants/{tenantId}/backupLocations:
    post:
      operationId: BackupLocationService_CreateBackupLocation
      parameters:
      - description: "The parent tenant id under which backup location will be created\n\
          (-- api-linter: core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We need this field for to support creation of\n    the resource in the\
          \ tenant context. --)"
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BackupLocation'
        description: Backup location configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BackupLocation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Create API creates a backup location for a tenant
      tags:
      - BackupLocationService
  /v1/cloudCredentials:
    get:
      operationId: CloudCredentialService_ListCloudCredentials
      parameters:
      - description: Tenant ID for which the credentials will be listed
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project ID for which the credentials will be listed
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListCloudCredentialsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List API lists all the cloud credentials for a tenant or project
      tags:
      - CloudCredentialService
  /v1/cloudCredentials/{id}:
    delete:
      operationId: CloudCredentialService_DeleteCloudCredential
      parameters:
      - description: ID of the cloud credential
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Delete API deletes the cloud credentials
      tags:
      - CloudCredentialService
    put:
      operationId: CloudCredentialService_UpdateCloudCredential
      parameters:
      - description: id of the cloud credential to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Specifies the field that should be updated to the value specified in
          cloud_credentials
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CloudCredential'
        description: Desired cloud credential configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CloudCredential'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update API updates a cloud credential
      tags:
      - CloudCredentialService
  /v1/cloudcredentials/{id}:
    get:
      operationId: CloudCredentialService_GetCloudCredential
      parameters:
      - description: ID of the cloud credential
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Specifies option to include configuration details
          excluding sensitive information
        explode: true
        in: query
        name: includeConfig
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CloudCredential'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get API returns the cloud credential details sans the actual credentials
      tags:
      - CloudCredentialService
  /v1/tenants/{tenantId}/cloudCredentials:
    post:
      operationId: CloudCredentialService_CreateCloudCredential
      parameters:
      - description: "The parent tenant id under which cloud credential will be created\n\
          (-- api-linter: core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We need this field for to support creation of\n    the resource in the\
          \ tenant context. --)"
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CloudCredential'
        description: Cloud credential configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CloudCredential'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create API creates a set of cloud credentials for a tenant
      tags:
      - CloudCredentialService
  /v1/iam:
    get:
      operationId: IAMService_ListIAM
      parameters:
      - description: Actor ID for which the IAM should be listed
        explode: true
        in: query
        name: actorId
        required: false
        schema:
          type: string
        style: form
      - description: Account UID for which the IAM should be listed
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant UID for which the IAM should be listed
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project UID for which the IAM should be listed
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListIAMResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListIAM API lists the role bindings
      tags:
      - IAMService
    post:
      operationId: IAMService_CreateIAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1IAM'
        description: IAM to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1IAM'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: CreateIAM API creates a new IAM rolebinding
      tags:
      - IAMService
  /v1/iam/{actorId}:
    delete:
      operationId: IAMService_DeleteIAM
      parameters:
      - description: Actor ID for which the IAM should be deleted.
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "DeleteIAM API delete IAM, currently required only for name"
      tags:
      - IAMService
    get:
      operationId: IAMService_GetIAM
      parameters:
      - description: Actor ID for which the details need to be fetched
        explode: false
        in: path
        name: actorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1IAM'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetIAM API returns the info about IAM for given IAM id
      tags:
      - IAMService
  /v1/iam/{iam.config.actorId}:grant:
    post:
      operationId: IAMService_GrantIAM
      parameters:
      - description: Actor ID for the associated actor
        explode: false
        in: path
        name: iam.config.actorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IAMServiceGrantIAMBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GrantIAMResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GrantIAM API creates new IAM rolebinding at tenant, project and account\
        \ level"
      tags:
      - IAMService
  /v1/iam/{iam.config.actorId}:revoke:
    post:
      operationId: IAMService_RevokeIAM
      parameters:
      - description: Actor ID for the associated actor
        explode: false
        in: path
        name: iam.config.actorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IAMServiceRevokeIAMBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RevokeIAMResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "RevokeIAM API delete IAM rolebinding at tenant, project and account\
        \ level"
      tags:
      - IAMService
  /v1/iam/{iam.meta.uid}:
    put:
      operationId: IAMService_UpdateIAM
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: iam.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IAM_to_be_updated'
        description: IAM to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1IAM'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: UpdateIAM API updates IAM with the new set of role bindings. The request
        replaces the existing set of bindings.
      tags:
      - IAMService
  /v1/invite:
    get:
      operationId: InvitationService_ListInvitations
      parameters:
      - description: Account UID to which the user has been invited. User can be invited
          to multiple accounts
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Tenant UID to which the user has been invited. User can be invited
          to multiple tenants
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Project UID to which the user has been invited. User can be invited
          to multiple projects
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListInvitationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListInvitation API lists invitation in an account/tenant/project
      tags:
      - InvitationService
    post:
      operationId: InvitationService_CreateInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateInvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Invitation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateInvitation API creates an invitation
      tags:
      - InvitationService
  /v1/invite/{uid}:
    delete:
      operationId: InvitationService_DeleteInvitation
      parameters:
      - description: UID is the unique ID of the invitation.
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteInvitation deletes the specified invitation from the system
      tags:
      - InvitationService
    get:
      operationId: InvitationService_GetInvitation
      parameters:
      - description: UID of the invitation
        explode: false
        in: path
        name: uid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Invitation'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetInvitation deletes the specified invitation from the system
      tags:
      - InvitationService
  /v1/invite:accept:
    post:
      operationId: InvitationService_AcceptInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AcceptInvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AcceptInvitationResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: AcceptInvitation API accepts the invitation from the system
      tags:
      - InvitationService
  /v1/clusters/{clusterId}/namespaces:
    get:
      operationId: NamespaceService_ListNamespaces
      parameters:
      - description: cluster ID for which namespaces need to be fetched
        explode: false
        in: path
        name: clusterId
        required: true
        schema:
          type: string
        style: simple
      - description: tenant ID for which namespace need to be fetched
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: project ID for which namespaces need to be fetched
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: for label based filtering of the namespaces
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListNamespacesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListNamespaces API will return all the namespaces on the control plane
      tags:
      - NamespaceService
  /v1/projects:
    get:
      operationId: ProjectService_ListProjects
      parameters:
      - description: "Type of the application managed resource for which projects\
          \ to be listed.\n\n - TYPE_UNSPECIFIED: Unspecified, do not use.\n - PDS_DEPLOYMENT:\
          \ List of supported PDS application resources.\nPDS application resource\
          \ of type deployment.\n - PDS_BACKUP: PDS application resource of type backup.\n\
          \ - PDS_RESTORE: PDS application resource of type restore.\n - BAAS_BACKUP:\
          \ List of supported BAAS application resources.\nBAAS application resource\
          \ of type backup."
        explode: true
        in: query
        name: query.appResource
        required: false
        schema:
          default: TYPE_UNSPECIFIED
          enum:
          - TYPE_UNSPECIFIED
          - PDS_DEPLOYMENT
          - PDS_BACKUP
          - PDS_RESTORE
          - BAAS_BACKUP
          type: string
        style: form
      - description: "Type of the infra resource for which projects to be listed.\n\
          \n - TYPE_UNSPECIFIED: Unspecified, do not use.\n - ACCOUNT: Currently supported\
          \ infra resources.\nInfra resource of type account.\n - TENANT: Infra resource\
          \ of type tenant.\n - PROJECT: Infra resource of type projects.\n - TARGET_CLUSTER:\
          \ Infra resource target cluster.\n - NAMESPACE: Infra resource of type namespace.\n\
          \ - CREDENTIAL: Infra resource of type credential.\n - BACKUP_LOCATION:\
          \ Infra resource of type backup location."
        explode: true
        in: query
        name: query.infraResource
        required: false
        schema:
          default: TYPE_UNSPECIFIED
          enum:
          - TYPE_UNSPECIFIED
          - ACCOUNT
          - TENANT
          - PROJECT
          - TARGET_CLUSTER
          - NAMESPACE
          - CREDENTIAL
          - BACKUP_LOCATION
          type: string
        style: form
      - description: ID of the resource for which projects to be listed.
        explode: true
        in: query
        name: query.resourceId
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListProjects API lists the projects visible to the caller for the provided
        tenant.
      tags:
      - ProjectService
  /v1/projects/{projectId}:
    delete:
      operationId: ProjectService_DeleteProject
      parameters:
      - description: ID of the project which needs to be deleted.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Deletes a project and its associated resources.
      tags:
      - ProjectService
    get:
      operationId: ProjectService_GetProject
      parameters:
      - description: Project id.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Get project apis returns a requested project.
      tags:
      - ProjectService
  /v1/projects/{projectId}:associate:
    put:
      operationId: ProjectService_AssociateResources
      parameters:
      - description: ID of the project.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectServiceAssociateResourcesBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: "AssociateResources will append the supplied resources to existing\
        \ infra resources of a given project config.\n(-- api-linter: core::0136::http-method=disabled\n\
        \    aip.dev/not-precedent: We need to do this because renaming creating issues\
        \ with other apis)"
      tags:
      - ProjectService
  /v1/projects/{projectId}:disassociate:
    put:
      operationId: ProjectService_DisassociateResources
      parameters:
      - description: ID of the project from which infra resources to be disassociated.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectServiceDisassociateResourcesBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: "DisassociateResource will remove the infra resources supplied in the\
        \ request from the project config.\n(-- api-linter: core::0136::http-method=disabled\n\
        \    aip.dev/not-precedent: We need to do this because renaming creating issues\
        \ with other apis)"
      tags:
      - ProjectService
  /v1/tenants/{tenantId}/projects:
    post:
      operationId: ProjectService_CreateProject
      parameters:
      - description: "The parent tenant under which project will be created\n(-- api-linter:\
          \ core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We need this field for to support creation of\n    the resource in the\
          \ tenant context. --)"
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectServiceCreateProjectBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Create project api creates a project.
      tags:
      - ProjectService
  /v1/serviceAccounts:
    get:
      operationId: ServiceAccountService_ListServiceAccount
      parameters:
      - description: "id of tenant on which service account should be listed. If not\
          \ provided,\nthen list will filtered on account id present in the context."
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: "Name of the attribute to sort results by.\n\n - FIELD_UNSPECIFIED:\
          \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
          \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT:\
          \ Sorting on update time of the resource.\n - PHASE: Sorting on phase of\
          \ the resource."
        explode: true
        in: query
        name: sort.sortBy
        required: false
        schema:
          default: FIELD_UNSPECIFIED
          enum:
          - FIELD_UNSPECIFIED
          - NAME
          - CREATED_AT
          - UPDATED_AT
          - PHASE
          type: string
        style: form
      - description: "Order of sorting to be applied on requested list.\nIf sort_by\
          \ having some value and sort_order is not provided, by default ascending\
          \ order will be used to sort the list.\n\n - VALUE_UNSPECIFIED: Unspecified,\
          \ do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order descending."
        explode: true
        in: query
        name: sort.sortOrder
        required: false
        schema:
          default: VALUE_UNSPECIFIED
          enum:
          - VALUE_UNSPECIFIED
          - ASC
          - DESC
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListServiceAccountResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Returns a requested list of service accounts.
      tags:
      - ServiceAccountService
  /v1/serviceAccounts/{id}:
    delete:
      operationId: ServiceAccountService_DeleteServiceAccount
      parameters:
      - description: Unique identifier for the service account to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Inititates deletion of a service account.
      tags:
      - ServiceAccountService
    get:
      operationId: ServiceAccountService_GetServiceAccount
      parameters:
      - description: Unique identifier for the service account to be fetched.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Tenant id to which a service account is associated.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Returns a requested service account.
      tags:
      - ServiceAccountService
    put:
      operationId: ServiceAccountService_UpdateServiceAccount
      parameters:
      - description: Unique identifier for the service account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ServiceAccount'
        description: Service account to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Updates a service account.
      tags:
      - ServiceAccountService
  /v1/serviceAccounts/{id}:regenerate:
    get:
      operationId: ServiceAccountService_RegenerateServiceAccountSecret
      parameters:
      - description: Unique identifier for the service account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Regenerate access token for a service account.
      tags:
      - ServiceAccountService
  /v1/tenants/{tenantId}/serviceAccounts:
    post:
      operationId: ServiceAccountService_CreateServiceAccount
      parameters:
      - description: "The parent tenant under which the service account will be created\n\
          (-- api-linter: core::0133::request-unknown-fields=disabled\n    aip.dev/not-precedent:\
          \ We need this field for to support creation of\n    the resource in the\
          \ tenant context. --)"
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ServiceAccount'
        description: Service account details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ServiceAccount'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Create a requested service account.
      tags:
      - ServiceAccountService
  /v1/tenants/{tenantId}:getToken:
    post:
      operationId: ServiceAccountService_GetAccessToken
      parameters:
      - description: ID of the tenant under which the service account was created.
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountServiceGetAccessTokenBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AccessToken'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: "Get access token for a service account.\n(-- api-linter: core::0131::http-body=disabled\n\
        \    api-linter: core::0131::http-method=disabled\n    aip.dev/not-precedent:\
        \ We need to do this because reasons API needs input from request body. --)"
      tags:
      - ServiceAccountService
  /v1/clusters:
    get:
      operationId: TargetClusterService_ListTargetClusters
      parameters:
      - description: list target clusters associated with an account
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: list target clusters associated with a project
        explode: true
        in: query
        name: projectId
        required: false
        schema:
          type: string
        style: form
      - description: list target clusters associated with a tenant
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTargetClustersResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListTargetCluster API lists the TargetClusters visible to the caller
      tags:
      - TargetClusterService
  /v1/clusters/{id}:
    delete:
      operationId: TargetClusterService_DeleteTargetCluster
      parameters:
      - description: Unique identifier of the cluster whose details needs to be fetched
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Flag to indicate force delete
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: DeleteTargetCluster API deletes the specified TargetCluster
      tags:
      - TargetClusterService
    get:
      operationId: TargetClusterService_GetTargetCluster
      parameters:
      - description: Unique identifier of the cluster whose details needs to be fetched
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TargetCluster'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetTargetCluster API returns the info about the TargetCluster for given
        name
      tags:
      - TargetClusterService
  /v1/clusters/{targetCluster.meta.uid}:
    patch:
      operationId: TargetClusterService_UpdateTargetCluster
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: targetCluster.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target_cluster_details'
        description: Target cluster details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TargetCluster'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: UpdateTargetCluster API updates the metadata(e.g name or labels) of
        the specified TargetCluster
      tags:
      - TargetClusterService
  /v1/tenants/{tenantId}:registrationManifests:
    post:
      operationId: TargetClusterRegistrationManifestService_GenerateTargetClusterRegistrationManifest
      parameters:
      - description: tenanat_id is the id of the tenant for which manifest is requested
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetClusterRegistrationManifestServiceGenerateTargetClusterRegistrationManifestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TargetClusterRegistrationManifest'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetTargetClusterRegistrationManifest fetches registration manifest
        for the given request
      tags:
      - TargetClusterRegistrationManifestService
  /v1/accounts/{accountId}/tenants:
    get:
      operationId: TenantService_ListTenants2
      parameters:
      - description: ID of the account which needs to get list tenant.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTenantsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListTenants API lists the tenants visible to the caller for the provided
        account.
      tags:
      - TenantService
  /v1/tenants:
    get:
      operationId: TenantService_ListTenants
      parameters:
      - description: ID of the account which needs to get list tenant.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: Page number is the page number to return based on the size
        explode: true
        in: query
        name: pagination.pageNumber
        required: false
        schema:
          format: int64
          type: string
        style: form
      - description: Page size is the maximum number of records to include per page
        explode: true
        in: query
        name: pagination.pageSize
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTenantsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: ListTenants API lists the tenants visible to the caller for the provided
        account.
      tags:
      - TenantService
    post:
      operationId: TenantService_CreateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Tenant'
        description: tenant to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tenant'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: CreateTenant API creates a new Tenant
      tags:
      - TenantService
  /v1/tenants/{tenant.meta.uid}:
    put:
      operationId: TenantService_UpdateTenant
      parameters:
      - description: UID of the resource of the format <resource prefix>-<uuid>.
        explode: false
        in: path
        name: tenant.meta.uid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tenant_which__needs_to_be_updated'
        description: tenant which  needs to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tenant'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: UpdateTenant API updates tenant.
      tags:
      - TenantService
  /v1/tenants/{tenantId}:
    delete:
      operationId: TenantService_DeleteTenant
      parameters:
      - description: ID of the tenant which needs to be deleted.
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: Delete tenant removes a tenant record.
      tags:
      - TenantService
    get:
      operationId: TenantService_GetTenant
      parameters:
      - description: ID of the tenant which needs to get info.
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Tenant'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
          description: An unexpected error response.
      summary: GetTenant API returns the info about  for given tenant id
      tags:
      - TenantService
  /v1/tenants/{tenantId}:listAvailableApplications:
    get:
      operationId: ApplicationService_ListAvailableApplications
      parameters:
      - description: tenant_id for which list of applications needs to be fetched
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAvailableApplicationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListAvailableApplications API lists all the applications visible to
        a caller
      tags:
      - ApplicationService
  /v1/whoami:
    get:
      operationId: WhoAmIService_WhoAmI
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1WhoAmIResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: WhoAmI API returns the current actor accounts.
      tags:
      - WhoAmIService
components:
  requestBodies:
    v1Deployment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/v1Deployment'
      description: Deployment resource.
      required: true
  schemas:
    ConfigBackupLevel:
      default: BACKUP_LEVEL_UNSPECIFIED
      description: "Enum for Backup Level of the backup configuration.\n\n - BACKUP_LEVEL_UNSPECIFIED:\
        \ Unspecified level.\n - SNAPSHOT: Snapshot.\n - INCREMENTAL: Incremental."
      enum:
      - BACKUP_LEVEL_UNSPECIFIED
      - SNAPSHOT
      - INCREMENTAL
      type: string
    ConfigBackupType:
      default: BACKUP_TYPE_UNSPECIFIED
      description: "Enum for Backup Type of the backup configuration.\n\n - BACKUP_TYPE_UNSPECIFIED:\
        \ Unspecified type.\n - ADHOC: Adhoc Backup.\n - SCHEDULED: Scheduled Backup."
      enum:
      - BACKUP_TYPE_UNSPECIFIED
      - ADHOC
      - SCHEDULED
      type: string
    ConfigReclaimPolicyType:
      default: RECLAIM_POLICY_TYPE_UNSPECIFIED
      description: "Enum for Reclaim Policy for the backup configuration.\n\n - RECLAIM_POLICY_TYPE_UNSPECIFIED:\
        \ Unspecified.\n - DELETE: Delete snapshot.\n - RETAIN: Retain snapshot."
      enum:
      - RECLAIM_POLICY_TYPE_UNSPECIFIED
      - DELETE
      - RETAIN
      type: string
    SortByField:
      default: FIELD_UNSPECIFIED
      description: "Field names for sorting the list of resources.\n\n - FIELD_UNSPECIFIED:\
        \ Unspecified, do not use.\n - NAME: Sorting based on the name of the resource.\n\
        \ - CREATED_AT: Sorting on create time of the resource.\n - UPDATED_AT: Sorting\
        \ on update time of the resource.\n - PHASE: Sorting on phase of the resource."
      enum:
      - FIELD_UNSPECIFIED
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - PHASE
      type: string
    SortOrderValue:
      default: VALUE_UNSPECIFIED
      description: "Value of sort order for the list of resources.\n\n - VALUE_UNSPECIFIED:\
        \ Unspecified, do not use.\n - ASC: Sort order ascending.\n - DESC: Sort order\
        \ descending."
      enum:
      - VALUE_UNSPECIFIED
      - ASC
      - DESC
      type: string
    StatusPhase:
      default: PHASE_UNSPECIFIED
      description: "Enum for Phases of the backup configuration.\n\n - PHASE_UNSPECIFIED:\
        \ Unspecified state.\n - PENDING: Pending state.\n - FAILED: Failed state.\n\
        \ - CREATED: Created state.\n - SUSPENDED: Suspended state."
      enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - FAILED
      - CREATED
      - SUSPENDED
      type: string
    backupconfigv1Status:
      description: Status for backup configuration.
      example:
        phase: null
        deploymentMetaData:
          tlsEnabled: true
          deploymentTargetName: deploymentTargetName
          name: name
          customResourceName: customResourceName
          namespaceName: namespaceName
        customResourceName: customResourceName
        isScheduleSynchronized: true
      properties:
        phase:
          $ref: '#/components/schemas/StatusPhase'
        customResourceName:
          description: Custom Resource Name is the kubernetes resource name for the
            backup that is built from ID.
          type: string
        isScheduleSynchronized:
          description: Flag to check if the schedule is synchronized or not.
          type: boolean
        deploymentMetaData:
          $ref: '#/components/schemas/v1DeploymentMetaData'
      type: object
    googlerpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    protobufAny:
      additionalProperties: {}
      properties:
        '@type':
          type: string
      type: object
    v1BackupConfig:
      description: Resource representing the backup configuration for a backup.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          jobHistoryLimit: 0
          suspend: true
          schedule:
            resourceVersion: resourceVersion
            id: id
          references:
            dataServiceId: dataServiceId
            deploymentId: deploymentId
            backupLocationId: backupLocationId
          reclaimPolicy: null
          backupLevel: null
          backupType: null
        status:
          phase: null
          deploymentMetaData:
            tlsEnabled: true
            deploymentTargetName: deploymentTargetName
            name: name
            customResourceName: customResourceName
            namespaceName: namespaceName
          customResourceName: customResourceName
          isScheduleSynchronized: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config'
        status:
          $ref: '#/components/schemas/backupconfigv1Status'
      type: object
    v1Config:
      description: Desired config of the backup configuration.
      example:
        jobHistoryLimit: 0
        suspend: true
        schedule:
          resourceVersion: resourceVersion
          id: id
        references:
          dataServiceId: dataServiceId
          deploymentId: deploymentId
          backupLocationId: backupLocationId
        reclaimPolicy: null
        backupLevel: null
        backupType: null
      properties:
        references:
          $ref: '#/components/schemas/v1References'
        jobHistoryLimit:
          description: Job History Limit is a number of retained backup jobs. Must
            be greater than or equal to 1.
          format: int32
          type: integer
        schedule:
          $ref: '#/components/schemas/v1Schedule'
        suspend:
          description: Suspend flag is used to suspend a scheduled backup from creating
            new backup jobs.
          type: boolean
        backupType:
          $ref: '#/components/schemas/ConfigBackupType'
        backupLevel:
          $ref: '#/components/schemas/ConfigBackupLevel'
        reclaimPolicy:
          $ref: '#/components/schemas/ConfigReclaimPolicyType'
      type: object
    v1DeploymentMetaData:
      description: Deployment Meta Data contains the details of the deployment associated
        with the backup configuration.
      example:
        tlsEnabled: true
        deploymentTargetName: deploymentTargetName
        name: name
        customResourceName: customResourceName
        namespaceName: namespaceName
      properties:
        name:
          description: Name of the deployment.
          type: string
        customResourceName:
          description: Custom Resource Name is the kubernetes resource name for the
            deployment meta data.
          readOnly: true
          type: string
        deploymentTargetName:
          description: Deployment Target Name associated with the backup configuration.
          type: string
        namespaceName:
          description: Namespace name to which the backup configuration is associated.
          type: string
        tlsEnabled:
          description: Flag to check whether Transport Layer Security support is enabled
            or not.
          type: boolean
      type: object
    v1ListBackupConfigsResponse:
      description: Response of list of backup configurations.
      example:
        backupConfigs:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            jobHistoryLimit: 0
            suspend: true
            schedule:
              resourceVersion: resourceVersion
              id: id
            references:
              dataServiceId: dataServiceId
              deploymentId: deploymentId
              backupLocationId: backupLocationId
            reclaimPolicy: null
            backupLevel: null
            backupType: null
          status:
            phase: null
            deploymentMetaData:
              tlsEnabled: true
              deploymentTargetName: deploymentTargetName
              name: name
              customResourceName: customResourceName
              namespaceName: namespaceName
            customResourceName: customResourceName
            isScheduleSynchronized: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            jobHistoryLimit: 0
            suspend: true
            schedule:
              resourceVersion: resourceVersion
              id: id
            references:
              dataServiceId: dataServiceId
              deploymentId: deploymentId
              backupLocationId: backupLocationId
            reclaimPolicy: null
            backupLevel: null
            backupType: null
          status:
            phase: null
            deploymentMetaData:
              tlsEnabled: true
              deploymentTargetName: deploymentTargetName
              name: name
              customResourceName: customResourceName
              namespaceName: namespaceName
            customResourceName: customResourceName
            isScheduleSynchronized: true
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        backupConfigs:
          description: The list of backup configurations.
          items:
            $ref: '#/components/schemas/v1BackupConfig'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1Meta:
      description: Meta holds general resource metadata.
      example:
        uid: uid
        parentReference:
          uid: uid
          type: type
          version: version
        createTime: 2000-01-23T04:56:07.000+00:00
        resourceVersion: resourceVersion
        name: name
        description: description
        annotations:
          key: annotations
        updateTime: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        uid:
          description: UID of the resource of the format <resource prefix>-<uuid>.
          type: string
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      type: object
    v1PageBasedPaginationRequest:
      properties:
        pageNumber:
          format: int64
          title: Page number is the page number to return based on the size
          type: string
        pageSize:
          format: int64
          title: Page size is the maximum number of records to include per page
          type: string
      title: Request parameters for page-based pagination
      type: object
    v1PageBasedPaginationResponse:
      example:
        totalRecords: totalRecords
        nextPage: nextPage
        totalPages: totalPages
        pageSize: pageSize
        prevPage: prevPage
        currentPage: currentPage
      properties:
        totalRecords:
          format: int64
          title: Total records without pagination available in the dataset
          type: string
        currentPage:
          format: int64
          title: Current page number for this paginated response
          type: string
        pageSize:
          format: int64
          title: Page size used for pagination
          type: string
        totalPages:
          format: int64
          title: Total pages based on the page_size provided in the request
          type: string
        nextPage:
          format: int64
          title: "Next page if available in the dataset, -1 if unavailable"
          type: string
        prevPage:
          format: int64
          title: "Previous page if available in the dataset, -1 if unavailable"
          type: string
      title: Metadata related to page based pagination for paginated API responses
      type: object
    v1Reference:
      description: "Reference identifies the resource type, version of the uid and\n\
        the resource."
      example:
        uid: uid
        type: type
        version: version
      properties:
        type:
          description: API group of the resource.
          type: string
        version:
          description: Version of the API.
          type: string
        uid:
          description: UID of the resource.
          type: string
      type: object
    v1References:
      description: References to the associated resources for backup configuration.
      example:
        dataServiceId: dataServiceId
        deploymentId: deploymentId
        backupLocationId: backupLocationId
      properties:
        deploymentId:
          description: UID of the deployment to which the backup configuration belong.
          readOnly: true
          type: string
        backupLocationId:
          description: UID of the backup target to which the backup configuration
            belong.
          type: string
        dataServiceId:
          description: UID of the data service to which the backup configuration belong.
          readOnly: true
          type: string
      type: object
    v1Schedule:
      description: Schedule associated with the backup config.
      example:
        resourceVersion: resourceVersion
        id: id
      properties:
        id:
          description: UID of the schedule associated with the backup configuration.
          type: string
        resourceVersion:
          description: Resource version of the schedule.
          type: string
      type: object
    v1Sort:
      description: The details of the attribute for which the requested list of resource
        to be sorted.
      properties:
        sortBy:
          $ref: '#/components/schemas/SortByField'
        sortOrder:
          $ref: '#/components/schemas/SortOrderValue'
      type: object
    StatusPhase1:
      default: PHASE_UNSPECIFIED
      description: "Enum for Phase of the Deployment.\n\n - PHASE_UNSPECIFIED: Phase\
        \ is unspecified.\n - QUEUED: Backup is Queued.\n - COMPLETED: Backup is completed.\n\
        \ - FAILED: Backup is failed."
      enum:
      - PHASE_UNSPECIFIED
      - QUEUED
      - COMPLETED
      - FAILED
      type: string
    backupv1Status:
      description: Status of the Backup.
      example:
        phase: null
        completionTime: 2000-01-23T04:56:07.000+00:00
        cloudSnapId: cloudSnapId
        fileSize: fileSize
        errorMessage: errorMessage
        errorCode: errorCode
        startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        cloudSnapId:
          title: CloudSnapID snapshot of the backup volume
          type: string
        startTime:
          format: date-time
          title: Start time of backup
          type: string
        completionTime:
          format: date-time
          title: Completion time of backup
          type: string
        phase:
          $ref: '#/components/schemas/StatusPhase1'
        errorCode:
          description: ErrorCode if CompletionStatus is "Failed".
          type: string
        errorMessage:
          title: ErrorMessage associated with the ErrorCode
          type: string
        fileSize:
          description: FileSize of the CloudSnap image.
          format: int64
          type: string
      type: object
    googlerpcStatus1:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny1'
          type: array
      type: object
    protobufAny1:
      additionalProperties: {}
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a\nURL that describes the type of the serialized message.\n\n\
        Protobuf library provides support to pack/unpack Any values in the form\n\
        of utility functions or additional generated methods of the Any type.\n\n\
        Example 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any\
        \ any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n \
        \     ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo\
        \ foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
        \ {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance()))\
        \ {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example\
        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
        \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n    \
        \  any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in\
        \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if\
        \ err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n    \
        \ if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe\
        \ pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
        \ as the type URL and the unpack\nmethods only use the fully qualified type\
        \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
        \ will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of\
        \ an `Any` value uses the regular\nrepresentation of the deserialized, embedded\
        \ message, with an\nadditional field `@type` which contains the type URL.\
        \ Example:\n\n    package google.profile;\n    message Person {\n      string\
        \ first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\"\
        : \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n\
        \      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known\
        \ and has a custom JSON\nrepresentation, that representation will be embedded\
        \ adding a field\n`value` which holds the custom JSON in addition to the `@type`\n\
        field. Example (for message [google.protobuf.Duration][]):\n\n    {\n    \
        \  \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"\
        value\": \"1.212s\"\n    }"
      properties:
        '@type':
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized\nprotocol buffer message. This string must contain at least\n\
            one \"/\" character. The last segment of the URL's path must represent\n\
            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
            \ The name should be in a canonical form\n(e.g., leading \".\" is not\
            \ accepted).\n\nIn practice, teams usually precompile into the binary\
            \ all types that they\nexpect it to use in the context of Any. However,\
            \ for URLs which use the\nscheme `http`, `https`, or no scheme, one can\
            \ optionally set up a type\nserver that maps type URLs to message definitions\
            \ as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An\
            \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in\
            \ binary format, or produce an error.\n* Applications are allowed to cache\
            \ lookup results based on the\n  URL, or have them precompiled into a\
            \ binary to avoid any\n  lookup. Therefore, binary compatibility needs\
            \ to be preserved\n  on changes to types. (Use versioned type names to\
            \ manage\n  breaking changes.)\n\nNote: this functionality is not currently\
            \ available in the official\nprotobuf release, and it is not used for\
            \ type URLs beginning with\ntype.googleapis.com. As of May 2023, there\
            \ are no widely used type server\nimplementations and no plans to implement\
            \ one.\n\nSchemes other than `http`, `https` (or the empty scheme) might\
            \ be\nused with implementation specific semantics."
          type: string
      type: object
    v1Backup:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          references:
            imageId: imageId
          backupCapability: backupCapability
        status:
          phase: null
          completionTime: 2000-01-23T04:56:07.000+00:00
          cloudSnapId: cloudSnapId
          fileSize: fileSize
          errorMessage: errorMessage
          errorCode: errorCode
          startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config1'
        status:
          $ref: '#/components/schemas/backupv1Status'
      title: Resource representing a Data Service Backup
      type: object
    v1Config1:
      description: Desired configuration of the Backup.
      example:
        references:
          imageId: imageId
        backupCapability: backupCapability
      properties:
        references:
          $ref: '#/components/schemas/v1References1'
        backupCapability:
          description: BackupCapability of the deployment target when the snapshot
            was created.
          type: string
      type: object
    v1ListBackupsResponse:
      description: Reponse to list Backup request.
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        backups:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            references:
              imageId: imageId
            backupCapability: backupCapability
          status:
            phase: null
            completionTime: 2000-01-23T04:56:07.000+00:00
            cloudSnapId: cloudSnapId
            fileSize: fileSize
            errorMessage: errorMessage
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            references:
              imageId: imageId
            backupCapability: backupCapability
          status:
            phase: null
            completionTime: 2000-01-23T04:56:07.000+00:00
            cloudSnapId: cloudSnapId
            fileSize: fileSize
            errorMessage: errorMessage
            errorCode: errorCode
            startTime: 2000-01-23T04:56:07.000+00:00
      properties:
        backups:
          description: List of backup resources.
          items:
            $ref: '#/components/schemas/v1Backup'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1References1:
      description: References to other resources.
      example:
        imageId: imageId
      properties:
        imageId:
          description: UID of the image of the data service which will needs to be
            backup .
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1DataService:
      description: "A data service is a independent, loosely coupled function that\
        \ calculate information collected and saved in data storage volumes."
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        info:
          nodeRestrictions:
            allowedSizes:
            - allowedSizes
            - allowedSizes
            resizeDisabledSizes:
            - resizeDisabledSizes
            - resizeDisabledSizes
            downsizeEnabled: true
          nodesLimitations: nodesLimitations
          shortName: shortName
          enabled: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        info:
          $ref: '#/components/schemas/v1Info'
      type: object
    v1Info:
      description: Desired Info of the data service.
      example:
        nodeRestrictions:
          allowedSizes:
          - allowedSizes
          - allowedSizes
          resizeDisabledSizes:
          - resizeDisabledSizes
          - resizeDisabledSizes
          downsizeEnabled: true
        nodesLimitations: nodesLimitations
        shortName: shortName
        enabled: true
      properties:
        shortName:
          description: Short name of the data service.
          type: string
        enabled:
          description: Enabled flag suggests if the data service is enabled or not.
          type: boolean
        nodesLimitations:
          description: Node limitations.
          type: string
        nodeRestrictions:
          $ref: '#/components/schemas/v1NodeRestrictions'
      type: object
    v1ListDataServicesResponse:
      description: Response for listing data service.
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        dataServices:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            nodeRestrictions:
              allowedSizes:
              - allowedSizes
              - allowedSizes
              resizeDisabledSizes:
              - resizeDisabledSizes
              - resizeDisabledSizes
              downsizeEnabled: true
            nodesLimitations: nodesLimitations
            shortName: shortName
            enabled: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            nodeRestrictions:
              allowedSizes:
              - allowedSizes
              - allowedSizes
              resizeDisabledSizes:
              - resizeDisabledSizes
              - resizeDisabledSizes
              downsizeEnabled: true
            nodesLimitations: nodesLimitations
            shortName: shortName
            enabled: true
      properties:
        dataServices:
          description: List of data service resources.
          items:
            $ref: '#/components/schemas/v1DataService'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1NodeRestrictions:
      example:
        allowedSizes:
        - allowedSizes
        - allowedSizes
        resizeDisabledSizes:
        - resizeDisabledSizes
        - resizeDisabledSizes
        downsizeEnabled: true
      properties:
        allowedSizes:
          description: List of all allowed node sizes.
          items:
            format: int64
            type: string
          type: array
        downsizeEnabled:
          description: Flag to determine whether downsizing the cluster is enabled
            during editing.
          type: boolean
        resizeDisabledSizes:
          description: List of all node sizes that are not allowed to change during
            editing.
          items:
            format: int64
            type: string
          type: array
      title: "Node Restrictions defines the number of replicas of data service on\
        \ which the restrictions are imposed.\nEg: allowed_sizes = [1,2,4,6]; downsize_enabled\
        \ = true;  resize_disabled_sizes = [2]"
      type: object
    deploymentv1Status:
      description: Status of the Deployment.
      example:
        phase: null
        deploymentTopologyStatus:
        - phase: null
          health: null
          readyReplicas: readyReplicas
          connectionInfo:
            notReadyPods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            pods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            connectionDetails:
              nodes:
              - nodes
              - nodes
              ports:
                key: 0
            clusterDetails:
              key:
                '@type': '@type'
        - phase: null
          health: null
          readyReplicas: readyReplicas
          connectionInfo:
            notReadyPods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            pods:
            - workerNode: workerNode
              ip: ip
              name: name
            - workerNode: workerNode
              ip: ip
              name: name
            connectionDetails:
              nodes:
              - nodes
              - nodes
              ports:
                key: 0
            clusterDetails:
              key:
                '@type': '@type'
        health: null
        initialized: initialized
        connectionInfo:
          key:
            '@type': '@type'
      properties:
        health:
          $ref: '#/components/schemas/v1StatusHealth'
        phase:
          $ref: '#/components/schemas/v1StatusPhase'
        connectionInfo:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny2'
          description: "ConnectionDetails urls, ports, credentials, etc for connecting\
            \ to the data service."
          type: object
        initialized:
          description: Initialize used to control startup scripts.
          type: string
        deploymentTopologyStatus:
          description: Status of the deployment topology.
          items:
            $ref: '#/components/schemas/v1DeploymentTopologyStatus'
          type: array
      type: object
    googlerpcStatus2:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny2'
          type: array
      type: object
    protobufAny2:
      additionalProperties: {}
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a\nURL that describes the type of the serialized message.\n\n\
        Protobuf library provides support to pack/unpack Any values in the form\n\
        of utility functions or additional generated methods of the Any type.\n\n\
        Example 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any\
        \ any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n \
        \     ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo\
        \ foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
        \ {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance()))\
        \ {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example\
        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
        \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n    \
        \  any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in\
        \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if\
        \ err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n    \
        \ if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe\
        \ pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
        \ as the type URL and the unpack\nmethods only use the fully qualified type\
        \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
        \ will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of\
        \ an `Any` value uses the regular\nrepresentation of the deserialized, embedded\
        \ message, with an\nadditional field `@type` which contains the type URL.\
        \ Example:\n\n    package google.profile;\n    message Person {\n      string\
        \ first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\"\
        : \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n\
        \      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known\
        \ and has a custom JSON\nrepresentation, that representation will be embedded\
        \ adding a field\n`value` which holds the custom JSON in addition to the `@type`\n\
        field. Example (for message [google.protobuf.Duration][]):\n\n    {\n    \
        \  \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"\
        value\": \"1.212s\"\n    }"
      example:
        '@type': '@type'
      properties:
        '@type':
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized\nprotocol buffer message. This string must contain at least\n\
            one \"/\" character. The last segment of the URL's path must represent\n\
            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
            \ The name should be in a canonical form\n(e.g., leading \".\" is not\
            \ accepted).\n\nIn practice, teams usually precompile into the binary\
            \ all types that they\nexpect it to use in the context of Any. However,\
            \ for URLs which use the\nscheme `http`, `https`, or no scheme, one can\
            \ optionally set up a type\nserver that maps type URLs to message definitions\
            \ as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An\
            \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in\
            \ binary format, or produce an error.\n* Applications are allowed to cache\
            \ lookup results based on the\n  URL, or have them precompiled into a\
            \ binary to avoid any\n  lookup. Therefore, binary compatibility needs\
            \ to be preserved\n  on changes to types. (Use versioned type names to\
            \ manage\n  breaking changes.)\n\nNote: this functionality is not currently\
            \ available in the official\nprotobuf release, and it is not used for\
            \ type URLs beginning with\ntype.googleapis.com. As of May 2023, there\
            \ are no widely used type server\nimplementations and no plans to implement\
            \ one.\n\nSchemes other than `http`, `https` (or the empty scheme) might\
            \ be\nused with implementation specific semantics."
          type: string
      type: object
    v1Config2:
      description: Desired configuration of the Deployment.
      example:
        tlsEnabled: true
        references:
          imageId: imageId
          restoreId: restoreId
          projectId: projectId
          targetClusterId: targetClusterId
        deploymentTopologies:
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
      properties:
        references:
          $ref: '#/components/schemas/v1References2'
        tlsEnabled:
          description: Flag to enable TLS for the Data Service.
          type: boolean
        deploymentTopologies:
          description: A deployment topology contains a number of nodes that have
            various attributes as a collective group.
          items:
            $ref: '#/components/schemas/v1DeploymentTopology'
          type: array
      type: object
    v1ConnectionDetails:
      description: ConnectionDetails of data service.
      example:
        nodes:
        - nodes
        - nodes
        ports:
          key: 0
      properties:
        nodes:
          description: Nodes of the data service.
          items:
            type: string
          type: array
        ports:
          additionalProperties:
            format: int32
            type: integer
          description: Ports provided by the data service (name and number).
          type: object
      type: object
    v1ConnectionInfo:
      description: Connection Information for the Deployment Topology.
      example:
        notReadyPods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        pods:
        - workerNode: workerNode
          ip: ip
          name: name
        - workerNode: workerNode
          ip: ip
          name: name
        connectionDetails:
          nodes:
          - nodes
          - nodes
          ports:
            key: 0
        clusterDetails:
          key:
            '@type': '@type'
      properties:
        pods:
          description: Ready pods.
          items:
            $ref: '#/components/schemas/v1PodInfo'
          type: array
        notReadyPods:
          description: Pods that are not ready.
          items:
            $ref: '#/components/schemas/v1PodInfo'
          type: array
        connectionDetails:
          $ref: '#/components/schemas/v1ConnectionDetails'
        clusterDetails:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny2'
          description: Stores details about the cluster.
          type: object
      type: object
    v1Deployment:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          tlsEnabled: true
          references:
            imageId: imageId
            restoreId: restoreId
            projectId: projectId
            targetClusterId: targetClusterId
          deploymentTopologies:
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
        status:
          phase: null
          deploymentTopologyStatus:
          - phase: null
            health: null
            readyReplicas: readyReplicas
            connectionInfo:
              notReadyPods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              pods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              connectionDetails:
                nodes:
                - nodes
                - nodes
                ports:
                  key: 0
              clusterDetails:
                key:
                  '@type': '@type'
          - phase: null
            health: null
            readyReplicas: readyReplicas
            connectionInfo:
              notReadyPods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              pods:
              - workerNode: workerNode
                ip: ip
                name: name
              - workerNode: workerNode
                ip: ip
                name: name
              connectionDetails:
                nodes:
                - nodes
                - nodes
                ports:
                  key: 0
              clusterDetails:
                key:
                  '@type': '@type'
          health: null
          initialized: initialized
          connectionInfo:
            key:
              '@type': '@type'
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config2'
        status:
          $ref: '#/components/schemas/deploymentv1Status'
      title: Resource representing a Data Service Deployment
      type: object
    v1DeploymentCredentials:
      example:
        secret: secret
      properties:
        secret:
          description: secret to access the resource.
          type: string
      title: Credentials to access a Data Service Deployment
      type: object
    v1DeploymentTopology:
      description: |-
        A deployment topology contains a number of nodes that have various attributes as a collective group.
        This is consumed in a deployment and the functionality is being controlled by the CRUD APIs of deployment.
      example:
        serviceType: serviceType
        storageTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        resourceTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        replicas: replicas
        name: name
        description: description
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        serviceName: serviceName
        applicationTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
      properties:
        name:
          description: Name of the deployment topology.
          type: string
        description:
          description: Description of the deployment topology.
          type: string
        replicas:
          description: Number of replicas of data services.
          format: int64
          type: string
        serviceType:
          description: "Service type are standard Kubernetes service types such as\
            \ clusterIP, NodePort, load balancers, etc."
          type: string
        serviceName:
          description: Service name is the name of service as provided by user.
          type: string
        loadBalancerSourceRanges:
          description: Source IP ranges to use for the deployed Load Balancer.
          items:
            type: string
          type: array
        resourceTemplate:
          $ref: '#/components/schemas/v1Template'
        applicationTemplate:
          $ref: '#/components/schemas/v1Template'
        storageTemplate:
          $ref: '#/components/schemas/v1Template'
      type: object
    v1DeploymentTopologyStatus:
      description: Status of the deployment topology. It is consumed in Deployment.
      example:
        phase: null
        health: null
        readyReplicas: readyReplicas
        connectionInfo:
          notReadyPods:
          - workerNode: workerNode
            ip: ip
            name: name
          - workerNode: workerNode
            ip: ip
            name: name
          pods:
          - workerNode: workerNode
            ip: ip
            name: name
          - workerNode: workerNode
            ip: ip
            name: name
          connectionDetails:
            nodes:
            - nodes
            - nodes
            ports:
              key: 0
          clusterDetails:
            key:
              '@type': '@type'
      properties:
        health:
          $ref: '#/components/schemas/v1DeploymentTopologyStatusHealth'
        phase:
          $ref: '#/components/schemas/v1DeploymentTopologyStatusPhase'
        readyReplicas:
          description: Number of replicas reported by Target Cluster that are up and
            running.
          format: int64
          type: string
        connectionInfo:
          $ref: '#/components/schemas/v1ConnectionInfo'
      type: object
    v1DeploymentTopologyStatusHealth:
      default: UNKNOWN
      description: "Enum for Health of the deployment topology.\n\n - UNKNOWN: Health\
        \ is unknown.\n - UNAVAILABLE: Deployment Topology is Unavailable.\n - PARTIALLY_AVAILABLE:\
        \ Deployment Topology is Partially available.\n - AVAILABLE: Deployment Topology\
        \ is available."
      enum:
      - UNKNOWN
      - UNAVAILABLE
      - PARTIALLY_AVAILABLE
      - AVAILABLE
      type: string
    v1DeploymentTopologyStatusPhase:
      default: PHASE_UNSPECIFIED
      description: "Enum for Phase of the Deployment Topology.\n\n - PHASE_UNSPECIFIED:\
        \ Unspecified status.\n - IN_PROGRESS: In progress Status.\n - PARTIAL_SUCCESS:\
        \ Partial Success Status.\n - SUCCESS: Successful Status.\n - DELETE_PENDING:\
        \ Delete is pending Status.\n - DELETING: Delete in progress Status.\n - FAILED:\
        \ Failed Status.\n - TIMED_OUT: Timed Out Status."
      enum:
      - PHASE_UNSPECIFIED
      - IN_PROGRESS
      - PARTIAL_SUCCESS
      - SUCCESS
      - DELETE_PENDING
      - DELETING
      - FAILED
      - TIMED_OUT
      type: string
    v1ListDeploymentsResponse:
      description: Response to list Deployment request.
      example:
        deployments:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
          status:
            phase: null
            deploymentTopologyStatus:
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            health: null
            initialized: initialized
            connectionInfo:
              key:
                '@type': '@type'
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
          status:
            phase: null
            deploymentTopologyStatus:
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            - phase: null
              health: null
              readyReplicas: readyReplicas
              connectionInfo:
                notReadyPods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                pods:
                - workerNode: workerNode
                  ip: ip
                  name: name
                - workerNode: workerNode
                  ip: ip
                  name: name
                connectionDetails:
                  nodes:
                  - nodes
                  - nodes
                  ports:
                    key: 0
                clusterDetails:
                  key:
                    '@type': '@type'
            health: null
            initialized: initialized
            connectionInfo:
              key:
                '@type': '@type'
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deployments:
          description: List of deployment resources.
          items:
            $ref: '#/components/schemas/v1Deployment'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1PodInfo:
      description: PodInfo contains information about a pod.
      example:
        workerNode: workerNode
        ip: ip
        name: name
      properties:
        ip:
          description: The IP of a pod.
          type: string
        name:
          description: Name is the Hostname of a pod.
          type: string
        workerNode:
          description: Node that hosts a particular pod.
          type: string
      type: object
    v1References2:
      description: References to other resources.
      example:
        imageId: imageId
        restoreId: restoreId
        projectId: projectId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          description: UID of the target cluster in which Data Service will be deployed.
          type: string
        imageId:
          description: UID of the image to be used for the Data Service Deployment.
          type: string
        projectId:
          description: UID of the project to which DataService Deployment associated.
          type: string
        restoreId:
          description: UID of the restore id for the Deployment.
          readOnly: true
          type: string
      type: object
    v1StatusHealth:
      default: HEALTH_UNSPECIFIED
      description: "Enum for Health of the Deployment.\n\n - HEALTH_UNSPECIFIED: Health\
        \ is unspecified.\n - AVAILABLE: Deployment is Available.\n - PARTIALLY_AVAILABLE:\
        \ Deployment is PartiallyAvailable.\n - UNAVAILABLE: Deployment is Unavailable."
      enum:
      - HEALTH_UNSPECIFIED
      - AVAILABLE
      - PARTIALLY_AVAILABLE
      - UNAVAILABLE
      type: string
    v1StatusPhase:
      default: PHASE_UNSPECIFIED
      description: "Enum for Status of the Deployment.\n\n - PHASE_UNSPECIFIED: Phase\
        \ is unspecified.\n - INITIALIZING: Deployment is initializing.\n - RESTORING:\
        \ Restore of Deployment is in progress.\n - FAILED: Deployment is Failed.\n\
        \ - DELETING: Deployment is being deleted.\n - PREPARING: Deployment is Preparing.\n\
        \ - DEPLOYED: Deployment is Deployed.\n - TIMED_OUT: Deployment is Timeout."
      enum:
      - PHASE_UNSPECIFIED
      - INITIALIZING
      - RESTORING
      - FAILED
      - DELETING
      - PREPARING
      - DEPLOYED
      - TIMED_OUT
      type: string
    v1Template:
      description: Template.
      example:
        resourceVersion: resourceVersion
        values:
          key:
            '@type': '@type'
        id: id
      properties:
        id:
          description: UID of the Template.
          type: string
        resourceVersion:
          description: Resource version of the template.
          readOnly: true
          type: string
        values:
          additionalProperties:
            $ref: '#/components/schemas/protobufAny3'
          description: Values required for template.
          type: object
      type: object
    DeploymentConfigUpdateServiceRetryDeploymentConfigUpdateBody:
      title: RetryDeploymentConfigUpdateRequest is the request for RetryDeploymentConfigUpdate
      type: object
    googlerpcStatus3:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny3'
          type: array
      type: object
    pdsdeploymentconfigupdatev1Config:
      example:
        deploymentMeta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        deploymentConfig:
          tlsEnabled: true
          references:
            imageId: imageId
            restoreId: restoreId
            projectId: projectId
            targetClusterId: targetClusterId
          deploymentTopologies:
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
          - serviceType: serviceType
            storageTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            resourceTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
            replicas: replicas
            name: name
            description: description
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            serviceName: serviceName
            applicationTemplate:
              resourceVersion: resourceVersion
              values:
                key:
                  '@type': '@type'
              id: id
      properties:
        deploymentMeta:
          $ref: '#/components/schemas/v1Meta'
        deploymentConfig:
          $ref: '#/components/schemas/pdsdeploymentv1Config'
      title: Config of the desired deployment configuration
      type: object
    pdsdeploymentconfigupdatev1Status:
      example:
        phase: null
        retryCount: 0
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        errorCode:
          description: Error Code is a short string that represents the error.
          type: string
        errorMessage:
          description: Error Message is a description of the error.
          type: string
        retryCount:
          format: int32
          title: Number of times the deployment config update has been retried
          type: integer
        phase:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1StatusPhase'
      title: Status of the deployment config update
      type: object
    pdsdeploymentconfigupdatev1StatusPhase:
      default: PHASE_UNSPECIFIED
      description: "Enum for Phase of the Deployment config update.\n\n - PHASE_UNSPECIFIED:\
        \ Phase is unspecified.\n - FAILED: Deployment config update failed.\n - QUEUED:\
        \ Deployment config update is queued.\n - COMPLETED: Deployment config update\
        \ is completed.\n - REQUEUED: Deployment config update is requeued."
      enum:
      - PHASE_UNSPECIFIED
      - FAILED
      - QUEUED
      - COMPLETED
      - REQUEUED
      type: string
    pdsdeploymentv1Config:
      description: Desired configuration of the Deployment.
      example:
        tlsEnabled: true
        references:
          imageId: imageId
          restoreId: restoreId
          projectId: projectId
          targetClusterId: targetClusterId
        deploymentTopologies:
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
        - serviceType: serviceType
          storageTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          resourceTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
          replicas: replicas
          name: name
          description: description
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          serviceName: serviceName
          applicationTemplate:
            resourceVersion: resourceVersion
            values:
              key:
                '@type': '@type'
            id: id
      properties:
        references:
          $ref: '#/components/schemas/v1References3'
        tlsEnabled:
          description: Flag to enable TLS for the Data Service.
          type: boolean
        deploymentTopologies:
          description: A deployment topology contains a number of nodes that have
            various attributes as a collective group.
          items:
            $ref: '#/components/schemas/v1DeploymentTopology1'
          type: array
      type: object
    protobufAny3:
      additionalProperties: {}
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a\nURL that describes the type of the serialized message.\n\n\
        Protobuf library provides support to pack/unpack Any values in the form\n\
        of utility functions or additional generated methods of the Any type.\n\n\
        Example 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any\
        \ any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n \
        \     ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo\
        \ foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
        \ {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance()))\
        \ {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example\
        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
        \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n    \
        \  any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in\
        \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if\
        \ err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n    \
        \ if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe\
        \ pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
        \ as the type URL and the unpack\nmethods only use the fully qualified type\
        \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
        \ will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of\
        \ an `Any` value uses the regular\nrepresentation of the deserialized, embedded\
        \ message, with an\nadditional field `@type` which contains the type URL.\
        \ Example:\n\n    package google.profile;\n    message Person {\n      string\
        \ first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\"\
        : \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n\
        \      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known\
        \ and has a custom JSON\nrepresentation, that representation will be embedded\
        \ adding a field\n`value` which holds the custom JSON in addition to the `@type`\n\
        field. Example (for message [google.protobuf.Duration][]):\n\n    {\n    \
        \  \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"\
        value\": \"1.212s\"\n    }"
      example:
        '@type': '@type'
      properties:
        '@type':
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized\nprotocol buffer message. This string must contain at least\n\
            one \"/\" character. The last segment of the URL's path must represent\n\
            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
            \ The name should be in a canonical form\n(e.g., leading \".\" is not\
            \ accepted).\n\nIn practice, teams usually precompile into the binary\
            \ all types that they\nexpect it to use in the context of Any. However,\
            \ for URLs which use the\nscheme `http`, `https`, or no scheme, one can\
            \ optionally set up a type\nserver that maps type URLs to message definitions\
            \ as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An\
            \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in\
            \ binary format, or produce an error.\n* Applications are allowed to cache\
            \ lookup results based on the\n  URL, or have them precompiled into a\
            \ binary to avoid any\n  lookup. Therefore, binary compatibility needs\
            \ to be preserved\n  on changes to types. (Use versioned type names to\
            \ manage\n  breaking changes.)\n\nNote: this functionality is not currently\
            \ available in the official\nprotobuf release, and it is not used for\
            \ type URLs beginning with\ntype.googleapis.com. As of May 2023, there\
            \ are no widely used type server\nimplementations and no plans to implement\
            \ one.\n\nSchemes other than `http`, `https` (or the empty scheme) might\
            \ be\nused with implementation specific semantics."
          type: string
      type: object
    v1DeploymentConfigUpdate:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          deploymentMeta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          deploymentConfig:
            tlsEnabled: true
            references:
              imageId: imageId
              restoreId: restoreId
              projectId: projectId
              targetClusterId: targetClusterId
            deploymentTopologies:
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
            - serviceType: serviceType
              storageTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              resourceTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
              replicas: replicas
              name: name
              description: description
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              serviceName: serviceName
              applicationTemplate:
                resourceVersion: resourceVersion
                values:
                  key:
                    '@type': '@type'
                id: id
        status:
          phase: null
          retryCount: 0
          errorMessage: errorMessage
          errorCode: errorCode
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Config'
        status:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Status'
      title: DeploymentConfigUpdate represents a deployment config update resource
      type: object
    v1DeploymentTopology1:
      description: |-
        A deployment topology contains a number of nodes that have various attributes as a collective group.
        This is consumed in a deployment and the functionality is being controlled by the CRUD APIs of deployment.
      example:
        serviceType: serviceType
        storageTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        resourceTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
        replicas: replicas
        name: name
        description: description
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        serviceName: serviceName
        applicationTemplate:
          resourceVersion: resourceVersion
          values:
            key:
              '@type': '@type'
          id: id
      properties:
        name:
          description: Name of the deployment topology.
          type: string
        description:
          description: Description of the deployment topology.
          type: string
        replicas:
          description: Number of replicas of data services.
          format: int64
          type: string
        serviceType:
          description: "Service type are standard Kubernetes service types such as\
            \ clusterIP, NodePort, load balancers, etc."
          type: string
        serviceName:
          description: Service name is the name of service as provided by user.
          type: string
        loadBalancerSourceRanges:
          description: Source IP ranges to use for the deployed Load Balancer.
          items:
            type: string
          type: array
        resourceTemplate:
          $ref: '#/components/schemas/v1Template'
        applicationTemplate:
          $ref: '#/components/schemas/v1Template'
        storageTemplate:
          $ref: '#/components/schemas/v1Template'
      type: object
    v1ListDeploymentConfigUpdatesResponse:
      example:
        deploymentConfigUpdates:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            deploymentMeta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            deploymentConfig:
              tlsEnabled: true
              references:
                imageId: imageId
                restoreId: restoreId
                projectId: projectId
                targetClusterId: targetClusterId
              deploymentTopologies:
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
          status:
            phase: null
            retryCount: 0
            errorMessage: errorMessage
            errorCode: errorCode
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            deploymentMeta:
              uid: uid
              parentReference:
                uid: uid
                type: type
                version: version
              createTime: 2000-01-23T04:56:07.000+00:00
              resourceVersion: resourceVersion
              name: name
              description: description
              annotations:
                key: annotations
              updateTime: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            deploymentConfig:
              tlsEnabled: true
              references:
                imageId: imageId
                restoreId: restoreId
                projectId: projectId
                targetClusterId: targetClusterId
              deploymentTopologies:
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
              - serviceType: serviceType
                storageTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                resourceTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
                replicas: replicas
                name: name
                description: description
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                serviceName: serviceName
                applicationTemplate:
                  resourceVersion: resourceVersion
                  values:
                    key:
                      '@type': '@type'
                  id: id
          status:
            phase: null
            retryCount: 0
            errorMessage: errorMessage
            errorCode: errorCode
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deploymentConfigUpdates:
          items:
            $ref: '#/components/schemas/v1DeploymentConfigUpdate'
          title: List of deployment config updates
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListDeploymentConfigUpdatesResponse is the response for ListDeploymentConfigUpdates
      type: object
    v1References3:
      description: References to other resources.
      example:
        imageId: imageId
        restoreId: restoreId
        projectId: projectId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          description: UID of the target cluster in which Data Service will be deployed.
          type: string
        imageId:
          description: UID of the image to be used for the Data Service Deployment.
          type: string
        projectId:
          description: UID of the project to which DataService Deployment associated.
          type: string
        restoreId:
          description: UID of the restore id for the Deployment.
          readOnly: true
          type: string
      type: object
    protobufAny4:
      additionalProperties: {}
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a\nURL that describes the type of the serialized message.\n\n\
        Protobuf library provides support to pack/unpack Any values in the form\n\
        of utility functions or additional generated methods of the Any type.\n\n\
        Example 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any\
        \ any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n \
        \     ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo\
        \ foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
        \ {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance()))\
        \ {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example\
        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
        \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n    \
        \  any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in\
        \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if\
        \ err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n    \
        \ if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe\
        \ pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
        \ as the type URL and the unpack\nmethods only use the fully qualified type\
        \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
        \ will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of\
        \ an `Any` value uses the regular\nrepresentation of the deserialized, embedded\
        \ message, with an\nadditional field `@type` which contains the type URL.\
        \ Example:\n\n    package google.profile;\n    message Person {\n      string\
        \ first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\"\
        : \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n\
        \      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known\
        \ and has a custom JSON\nrepresentation, that representation will be embedded\
        \ adding a field\n`value` which holds the custom JSON in addition to the `@type`\n\
        field. Example (for message [google.protobuf.Duration][]):\n\n    {\n    \
        \  \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"\
        value\": \"1.212s\"\n    }"
      properties:
        '@type':
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized\nprotocol buffer message. This string must contain at least\n\
            one \"/\" character. The last segment of the URL's path must represent\n\
            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
            \ The name should be in a canonical form\n(e.g., leading \".\" is not\
            \ accepted).\n\nIn practice, teams usually precompile into the binary\
            \ all types that they\nexpect it to use in the context of Any. However,\
            \ for URLs which use the\nscheme `http`, `https`, or no scheme, one can\
            \ optionally set up a type\nserver that maps type URLs to message definitions\
            \ as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An\
            \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in\
            \ binary format, or produce an error.\n* Applications are allowed to cache\
            \ lookup results based on the\n  URL, or have them precompiled into a\
            \ binary to avoid any\n  lookup. Therefore, binary compatibility needs\
            \ to be preserved\n  on changes to types. (Use versioned type names to\
            \ manage\n  breaking changes.)\n\nNote: this functionality is not currently\
            \ available in the official\nprotobuf release, and it is not used for\
            \ type URLs beginning with\ntype.googleapis.com. As of May 2023, there\
            \ are no widely used type server\nimplementations and no plans to implement\
            \ one.\n\nSchemes other than `http`, `https` (or the empty scheme) might\
            \ be\nused with implementation specific semantics."
          type: string
      type: object
    rpcStatus1:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny4'
          type: array
      type: object
    v1Image:
      description: Resource representing the data service image.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        info:
          registry: registry
          capabilities:
            key: capabilities
          references:
            dataServiceId: dataServiceId
          build: build
          additionalImages:
            key: additionalImages
          namespace: namespace
          tag: tag
          tlsSupport: true
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        info:
          $ref: '#/components/schemas/v1Info1'
      type: object
    v1Info1:
      description: Information related to the data service image.
      example:
        registry: registry
        capabilities:
          key: capabilities
        references:
          dataServiceId: dataServiceId
        build: build
        additionalImages:
          key: additionalImages
        namespace: namespace
        tag: tag
        tlsSupport: true
      properties:
        references:
          $ref: '#/components/schemas/v1References4'
        registry:
          description: Image registry where the image is stored.
          type: string
        namespace:
          description: Image registry namespace where the image is stored.
          type: string
        tag:
          description: Tag associated with the image.
          type: string
        build:
          description: Build version of the image.
          type: string
        tlsSupport:
          description: Flag indicating if TLS is supported for a data service using
            this image.
          type: boolean
        capabilities:
          additionalProperties:
            type: string
          description: Capabilities associated with this image.
          type: object
        additionalImages:
          additionalProperties:
            type: string
          description: Additional images associated with this data service image.
          type: object
      type: object
    v1ListImagesResponse:
      description: Response to list images request.
      example:
        images:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            registry: registry
            capabilities:
              key: capabilities
            references:
              dataServiceId: dataServiceId
            build: build
            additionalImages:
              key: additionalImages
            namespace: namespace
            tag: tag
            tlsSupport: true
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          info:
            registry: registry
            capabilities:
              key: capabilities
            references:
              dataServiceId: dataServiceId
            build: build
            additionalImages:
              key: additionalImages
            namespace: namespace
            tag: tag
            tlsSupport: true
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        images:
          description: List of images.
          items:
            $ref: '#/components/schemas/v1Image'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1References4:
      description: References to other resources.
      example:
        dataServiceId: dataServiceId
      properties:
        dataServiceId:
          description: UID of the Data service.
          type: string
      type: object
    RestoreServiceRecreateRestoreBody:
      example:
        namespaceId: namespaceId
        name: name
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          title: UID of the target cluster where restore will be created
          type: string
        name:
          title: Name of the restore
          type: string
        namespaceId:
          title: UID of mamespace where restore will be created
          type: string
      title: Request to recreate a restore
      type: object
    restorev1Status:
      description: Status of the restore.
      example:
        phase: null
        completedAt: 2000-01-23T04:56:07.000+00:00
        errorMessage: errorMessage
        startedAt: 2000-01-23T04:56:07.000+00:00
        errorCode: null
      properties:
        startedAt:
          format: date-time
          title: "Time when restore was started\n(-- api-linter: core::0142::time-field-names=disabled\n\
            \    aip.dev/not-precedent: We need to do this because we need different\
            \ name for the field. --)"
          type: string
        completedAt:
          format: date-time
          title: "Time when restore was completed\n(-- api-linter: core::0142::time-field-names=disabled\n\
            \    aip.dev/not-precedent: We need to do this because we need different\
            \ name for the field. --)"
          type: string
        errorCode:
          $ref: '#/components/schemas/v1ErrorCode'
        errorMessage:
          title: Error message is description of the error in restore
          type: string
        phase:
          $ref: '#/components/schemas/v1Phase'
      type: object
    v1Config3:
      description: Desired configuration of the restore.
      example:
        destinationReferences:
          deploymentId: deploymentId
          targetClusterId: targetClusterId
        sourceReferences:
          cloudsnapId: cloudsnapId
          deploymentId: deploymentId
          backupId: backupId
          backupLocationId: backupLocationId
        customResourceName: customResourceName
      properties:
        sourceReferences:
          $ref: '#/components/schemas/v1SourceReferences'
        destinationReferences:
          $ref: '#/components/schemas/v1DestinationReferences'
        customResourceName:
          description: "K8s resource name for restore, built from [\"restore-\" +\
            \ name + short-id]."
          readOnly: true
          type: string
      type: object
    v1DestinationReferences:
      description: Destination references for the restore.
      example:
        deploymentId: deploymentId
        targetClusterId: targetClusterId
      properties:
        targetClusterId:
          title: UID of the target cluster where restore will be created
          type: string
        deploymentId:
          description: UID of the deployment created by the restore.
          readOnly: true
          type: string
      type: object
    v1ErrorCode:
      default: ERROR_CODE_UNSPECIFIED
      description: "- ERROR_CODE_UNSPECIFIED: Error code not specified.\n - PX_CLOUD_CREDENTIALS_NOT_FOUND:\
        \ Cloud credentials specified in Restore spec were not found by Portworx.\n\
        \ - PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED: Problem triggering the cloudsnap\
        \ restore in PX.\n - PX_CLOUD_SNAP_RESTORE_FAILED: Problem with finishing\
        \ the cloudsnap restore in PX.\n - PX_GET_CLOUD_SNAP_STATUS_FAILED: Problem\
        \ with getting the cloudsnap restore status from PX.\n - PX_GET_VOLUME_FAILED:\
        \ Problem with getting the volume from PX.\n - READ_DATA_SERVICE_MANIFEST_FAILED:\
        \ Problem with reading the data service manifest from the busybox pod.\n -\
        \ UNMARSHAL_DATA_SERVICE_JSON: Problem with unmarshalling the JSON with data\
        \ service manifest.\n - DEPLOYMENT_NAME_ALREADY_EXIST: Deployment name already\
        \ used in the namespace.\n - TIMEOUT_BUSYBOX_POD_RUNNING: Timeout while waiting\
        \ for the BusyBox pod to enter the running state.\n - BUSYBOX_POD_FAILED:\
        \ Busybox pod has failed."
      enum:
      - ERROR_CODE_UNSPECIFIED
      - PX_CLOUD_CREDENTIALS_NOT_FOUND
      - PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED
      - PX_CLOUD_SNAP_RESTORE_FAILED
      - PX_GET_CLOUD_SNAP_STATUS_FAILED
      - PX_GET_VOLUME_FAILED
      - READ_DATA_SERVICE_MANIFEST_FAILED
      - UNMARSHAL_DATA_SERVICE_JSON
      - DEPLOYMENT_NAME_ALREADY_EXIST
      - TIMEOUT_BUSYBOX_POD_RUNNING
      - BUSYBOX_POD_FAILED
      title: Enums for error codes for restore on the target cluster
      type: string
    v1ListRestoresResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        restores:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            destinationReferences:
              deploymentId: deploymentId
              targetClusterId: targetClusterId
            sourceReferences:
              cloudsnapId: cloudsnapId
              deploymentId: deploymentId
              backupId: backupId
              backupLocationId: backupLocationId
            customResourceName: customResourceName
          status:
            phase: null
            completedAt: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            startedAt: 2000-01-23T04:56:07.000+00:00
            errorCode: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            destinationReferences:
              deploymentId: deploymentId
              targetClusterId: targetClusterId
            sourceReferences:
              cloudsnapId: cloudsnapId
              deploymentId: deploymentId
              backupId: backupId
              backupLocationId: backupLocationId
            customResourceName: customResourceName
          status:
            phase: null
            completedAt: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            startedAt: 2000-01-23T04:56:07.000+00:00
            errorCode: null
      properties:
        restores:
          items:
            $ref: '#/components/schemas/v1Restore'
          title: List of restores
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListRestoresResponse represents list restores response
      type: object
    v1Phase:
      default: PHASE_UNSPECIFIED
      description: "Enum for phase of the restore.\n\n - PHASE_UNSPECIFIED: Phase\
        \ is unspecified.\n - INITIALIZING: Restore is initializing.\n - PENDING:\
        \ Restore has not yet started.\n - RESTORING_CLOUDSNAP: Waiting for the cloud\
        \ snap restore to complete.\n - RESTORING_DATA_SERVICE_CR: PV and PVC resources\
        \ are ready and we're waiting to get the data service manifest from the backup.\n\
        \ - RESTORING_DEPLOYMENT: New data service has been created and we're waiting\
        \ for the restore process to complete.\n - DEPLOYMENT_ENTERING_NORMAL_MODE:\
        \ Restore process in data service has succeeded and we're waiting until it\
        \ becomes healthy in normal mode.\n - SUCCESSFUL: Restore successful.\n -\
        \ FAILED: Restore failed."
      enum:
      - PHASE_UNSPECIFIED
      - INITIALIZING
      - PENDING
      - RESTORING_CLOUDSNAP
      - RESTORING_DATA_SERVICE_CR
      - RESTORING_DEPLOYMENT
      - DEPLOYMENT_ENTERING_NORMAL_MODE
      - SUCCESSFUL
      - FAILED
      type: string
    v1Restore:
      description: Restore represents a data service restore.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          destinationReferences:
            deploymentId: deploymentId
            targetClusterId: targetClusterId
          sourceReferences:
            cloudsnapId: cloudsnapId
            deploymentId: deploymentId
            backupId: backupId
            backupLocationId: backupLocationId
          customResourceName: customResourceName
        status:
          phase: null
          completedAt: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          startedAt: 2000-01-23T04:56:07.000+00:00
          errorCode: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config3'
        status:
          $ref: '#/components/schemas/restorev1Status'
      type: object
    v1SourceReferences:
      description: SourceReferences for the restore.
      example:
        cloudsnapId: cloudsnapId
        deploymentId: deploymentId
        backupId: backupId
        backupLocationId: backupLocationId
      properties:
        deploymentId:
          description: UID of the deployment which was backed up.
          readOnly: true
          type: string
        backupId:
          description: UID of the backup.
          type: string
        backupLocationId:
          description: UID of the backup location.
          readOnly: true
          type: string
        cloudsnapId:
          description: UID of the cloud snapshot of the backup volume used for restore.
          readOnly: true
          type: string
      type: object
    StatusState:
      default: STATE_UNSPECIFIED
      description: "Enum for State of the Task.\n\n - STATE_UNSPECIFIED: State is\
        \ unspecified.\n - QUEUED: Task queued.\n - FAILED: Task failed.\n - RUNNING:\
        \ Task is still running.\n - COMPLETED: Task is completed."
      enum:
      - STATE_UNSPECIFIED
      - QUEUED
      - FAILED
      - RUNNING
      - COMPLETED
      type: string
    taskv1Status:
      description: Status of the Task.
      example:
        currentStep: currentStep
        totalSteps: totalSteps
        associatedResource:
          uid: uid
          type: type
          version: version
        state: null
        logs:
        - logs
        - logs
      properties:
        totalSteps:
          description: Total number of steps involved in the task.
          format: int64
          type: string
        currentStep:
          description: Current step of the running task.
          format: int64
          type: string
        logs:
          description: List of log strings associated with the task.
          items:
            type: string
          type: array
        associatedResource:
          $ref: '#/components/schemas/v1Reference'
        state:
          $ref: '#/components/schemas/StatusState'
      type: object
    v1ListTasksResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        tasks:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            currentStep: currentStep
            totalSteps: totalSteps
            associatedResource:
              uid: uid
              type: type
              version: version
            state: null
            logs:
            - logs
            - logs
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            currentStep: currentStep
            totalSteps: totalSteps
            associatedResource:
              uid: uid
              type: type
              version: version
            state: null
            logs:
            - logs
            - logs
      properties:
        tasks:
          description: List of Task resources.
          items:
            $ref: '#/components/schemas/v1Task'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: Response to list tasks apis
      type: object
    v1Task:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          currentStep: currentStep
          totalSteps: totalSteps
          associatedResource:
            uid: uid
            type: type
            version: version
          state: null
          logs:
          - logs
          - logs
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/taskv1Status'
      title: Resource representing the backend worker task
      type: object
    v1SearchQueryRequest:
      properties:
        dataServiceId:
          description: Id of the dataservice.
          type: string
        query:
          description: Query string.
          type: string
      title: Search request to query
      type: object
    v1SearchQueryResponse:
      description: Response structure contains fields for query response from copilot
        service.
      example:
        dataServiceId: dataServiceId
        response: response
        responseTime: 2000-01-23T04:56:07.000+00:00
        query: query
        id: id
      properties:
        dataServiceId:
          description: "(-- api-linter: core::0158::response-repeated-first-field=disabled\n\
            \    aip.dev/not-precedent: We need to do this because of the copilot\
            \ response. --)\n(-- api-linter: core::0158::response-plural-first-field=disabled\n\
            \    aip.dev/not-precedent: We need to do this because of the copilot\
            \ response. --)\nId of the dataservice."
          type: string
        id:
          description: Unique id of response.
          type: string
        query:
          description: Query string.
          type: string
        response:
          description: Response string.
          type: string
        responseTime:
          description: Response time.
          format: date-time
          type: string
      type: object
    deploymenteventsv1Status:
      description: Status of the event.
      example:
        resourceKind: resourceKind
        reason: reason
        count: count
        action: action
        timestampTime: 2000-01-23T04:56:07.000+00:00
        resourceName: resourceName
        message: message
        type: null
      properties:
        action:
          description: Action involved in the event.
          type: string
        count:
          description: No. of times the event has been generated.
          format: int64
          type: string
        message:
          description: Message related to the event.
          type: string
        reason:
          description: Reason for the event.
          type: string
        resourceKind:
          description: Resource Kind.
          type: string
        resourceName:
          description: Resource Name.
          type: string
        timestampTime:
          description: Timestamp of the event.
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/v1EventType'
      type: object
    v1DeploymentEvent:
      description: DeploymentEvent contains all the fields received from kubernetes
        event of a deployment.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          resourceKind: resourceKind
          reason: reason
          count: count
          action: action
          timestampTime: 2000-01-23T04:56:07.000+00:00
          resourceName: resourceName
          message: message
          type: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/deploymenteventsv1Status'
      type: object
    v1EventType:
      default: EVENT_TYPE_UNSPECIFIED
      description: "EventType is type of kubernetes event.\n\n - EVENT_TYPE_UNSPECIFIED:\
        \ Unspecified.\n - NORMAL: Normal event.\n - WARNING: Warning event."
      enum:
      - EVENT_TYPE_UNSPECIFIED
      - NORMAL
      - WARNING
      type: string
    v1ListDeploymentEventsResponse:
      description: Response to list the deployment events.
      example:
        deploymentEvents:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            resourceKind: resourceKind
            reason: reason
            count: count
            action: action
            timestampTime: 2000-01-23T04:56:07.000+00:00
            resourceName: resourceName
            message: message
            type: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            resourceKind: resourceKind
            reason: reason
            count: count
            action: action
            timestampTime: 2000-01-23T04:56:07.000+00:00
            resourceName: resourceName
            message: message
            type: null
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        deploymentEvents:
          description: List of Event resources.
          items:
            $ref: '#/components/schemas/v1DeploymentEvent'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1Account:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          displayName: displayName
          dnsName: dnsName
          userEmail: userEmail
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config4'
      title: Account is a high level entity that represents one large company(e.g.
        a Pure). An account has multiple tenants
      type: object
    v1Config4:
      example:
        displayName: displayName
        dnsName: dnsName
        userEmail: userEmail
      properties:
        userEmail:
          title: email of the first account user
          type: string
        dnsName:
          title: Account DNS name
          type: string
        displayName:
          title: Display name of Account
          type: string
      title: Desired configuration of the account
      type: object
    v1ListAccountsResponse:
      description: |-
        ListAccountsResponse is the response to the ListAccounts API and contains
        the list of accounts visible to the caller.
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        accounts:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            displayName: displayName
            dnsName: dnsName
            userEmail: userEmail
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            displayName: displayName
            dnsName: dnsName
            userEmail: userEmail
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/v1Account'
          title: the list of accounts
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    StatusValidity:
      default: VALIDITY_UNSPECIFIED
      description: "- VALIDITY_UNSPECIFIED: Validity unspecified\n - VALID: Valid\
        \ backup location indicating its reachable\n - INVALID: Invalid backup location\
        \ indicating its unreachable\n - NOT_APPLICABLE: NOT_APPLICABLE backup location\
        \ specifies that status can not be defined\nfor the backup location eg: S3Compatible\
        \ location"
      enum:
      - VALIDITY_UNSPECIFIED
      - VALID
      - INVALID
      - NOT_APPLICABLE
      title: Validity of the backup location
      type: string
    backuplocationv1Status:
      example:
        validity: null
      properties:
        validity:
          $ref: '#/components/schemas/StatusValidity'
      title: Status of the backup location
      type: object
    platformbackuplocationv1Config:
      example:
        googleStorage:
          bucketName: bucketName
        provider:
          cloudProvider: null
        cloudCredentialId: cloudCredentialId
        s3Storage:
          bucketName: bucketName
          endpoint: endpoint
          region: region
        azureStorage:
          containerName: containerName
      properties:
        provider:
          $ref: '#/components/schemas/v1Provider'
        cloudCredentialId:
          title: id of the cloud credential associated with the backup location
          type: string
        azureStorage:
          $ref: '#/components/schemas/v1AzureBlobStorage'
        googleStorage:
          $ref: '#/components/schemas/v1GoogleCloudStorage'
        s3Storage:
          $ref: '#/components/schemas/v1S3ObjectStorage'
      title: Desired configuration of the backup location
      type: object
    v1AzureBlobStorage:
      example:
        containerName: containerName
      properties:
        containerName:
          title: Name of container
          type: string
      title: Azure blob storage location
      type: object
    v1BackupLocation:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          googleStorage:
            bucketName: bucketName
          provider:
            cloudProvider: null
          cloudCredentialId: cloudCredentialId
          s3Storage:
            bucketName: bucketName
            endpoint: endpoint
            region: region
          azureStorage:
            containerName: containerName
        status:
          validity: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/platformbackuplocationv1Config'
        status:
          $ref: '#/components/schemas/backuplocationv1Status'
      title: Resource representing a backup location
      type: object
    v1GoogleCloudStorage:
      example:
        bucketName: bucketName
      properties:
        bucketName:
          title: Bucket name
          type: string
      title: Google cloud storage location
      type: object
    v1ListBackupLocationsResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        backupLocations:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            googleStorage:
              bucketName: bucketName
            provider:
              cloudProvider: null
            cloudCredentialId: cloudCredentialId
            s3Storage:
              bucketName: bucketName
              endpoint: endpoint
              region: region
            azureStorage:
              containerName: containerName
          status:
            validity: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            googleStorage:
              bucketName: bucketName
            provider:
              cloudProvider: null
            cloudCredentialId: cloudCredentialId
            s3Storage:
              bucketName: bucketName
              endpoint: endpoint
              region: region
            azureStorage:
              containerName: containerName
          status:
            validity: null
      properties:
        backupLocations:
          items:
            $ref: '#/components/schemas/v1BackupLocation'
          title: The list of cloud credentials scoped to a tenant or a project
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: Response of list backup locations
      type: object
    v1Provider:
      example:
        cloudProvider: null
      properties:
        cloudProvider:
          $ref: '#/components/schemas/v1ProviderType'
      title: Provider associated with created credentials
      type: object
    v1ProviderType:
      default: TYPE_UNSPECIFIED
      description: "- TYPE_UNSPECIFIED: Type unspecified\n - AZURE: Azure Cloud\n\
        \ - GOOGLE: Google Cloud\n - S3COMPATIBLE: S3 Compatible\n - UNSTRUCTURED:\
        \ Unstructured credentials"
      enum:
      - TYPE_UNSPECIFIED
      - AZURE
      - GOOGLE
      - S3COMPATIBLE
      - UNSTRUCTURED
      title: Type of provider
      type: string
    v1S3ObjectStorage:
      example:
        bucketName: bucketName
        endpoint: endpoint
        region: region
      properties:
        bucketName:
          title: Bucket name
          type: string
        region:
          title: Region where bucket is hosted
          type: string
        endpoint:
          title: Endpoint to reach S3/S3 compatible storage (defaults to s3.amazonaws.com)
          type: string
      title: S3 object storage location
      type: object
    v1AzureCredentials:
      example:
        config/azure/storage_account_key: config/azure/storage_account_key
        config/azure/storage_account_name: config/azure/storage_account_name
      properties:
        config/azure/storage_account_name:
          title: Name of account
          type: string
        config/azure/storage_account_key:
          title: Key used to connect
          type: string
      title: Azure Credentials
      type: object
    v1CloudCredential:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          unstructuredCredentials:
            config/unstructured/credential_data:
              key: config/unstructured/credential_data
          provider:
            cloudProvider: null
          googleCredentials:
            config/google/project_id: config/google/project_id
            config/google/json_key: config/google/json_key
          azureCredentials:
            config/azure/storage_account_key: config/azure/storage_account_key
            config/azure/storage_account_name: config/azure/storage_account_name
          s3Credentials:
            config/s3/access_key: config/s3/access_key
            config/s3/secret_key: config/s3/secret_key
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config5'
      title: Resource representing a Cloud Credential
      type: object
    v1Config5:
      description: Desired configuration of the Cloud Credential.
      example:
        unstructuredCredentials:
          config/unstructured/credential_data:
            key: config/unstructured/credential_data
        provider:
          cloudProvider: null
        googleCredentials:
          config/google/project_id: config/google/project_id
          config/google/json_key: config/google/json_key
        azureCredentials:
          config/azure/storage_account_key: config/azure/storage_account_key
          config/azure/storage_account_name: config/azure/storage_account_name
        s3Credentials:
          config/s3/access_key: config/s3/access_key
          config/s3/secret_key: config/s3/secret_key
      properties:
        provider:
          $ref: '#/components/schemas/v1Provider'
        azureCredentials:
          $ref: '#/components/schemas/v1AzureCredentials'
        googleCredentials:
          $ref: '#/components/schemas/v1GoogleCredentials'
        s3Credentials:
          $ref: '#/components/schemas/v1S3Credentials'
        unstructuredCredentials:
          $ref: '#/components/schemas/v1UnstructuredCredentials'
      type: object
    v1GoogleCredentials:
      example:
        config/google/project_id: config/google/project_id
        config/google/json_key: config/google/json_key
      properties:
        config/google/project_id:
          title: Project ID
          type: string
        config/google/json_key:
          title: JSON Key used to connect
          type: string
      title: Google Credentials
      type: object
    v1ListCloudCredentialsResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        cloudCredentials:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            unstructuredCredentials:
              config/unstructured/credential_data:
                key: config/unstructured/credential_data
            provider:
              cloudProvider: null
            googleCredentials:
              config/google/project_id: config/google/project_id
              config/google/json_key: config/google/json_key
            azureCredentials:
              config/azure/storage_account_key: config/azure/storage_account_key
              config/azure/storage_account_name: config/azure/storage_account_name
            s3Credentials:
              config/s3/access_key: config/s3/access_key
              config/s3/secret_key: config/s3/secret_key
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            unstructuredCredentials:
              config/unstructured/credential_data:
                key: config/unstructured/credential_data
            provider:
              cloudProvider: null
            googleCredentials:
              config/google/project_id: config/google/project_id
              config/google/json_key: config/google/json_key
            azureCredentials:
              config/azure/storage_account_key: config/azure/storage_account_key
              config/azure/storage_account_name: config/azure/storage_account_name
            s3Credentials:
              config/s3/access_key: config/s3/access_key
              config/s3/secret_key: config/s3/secret_key
      properties:
        cloudCredentials:
          items:
            $ref: '#/components/schemas/v1CloudCredential'
          title: The list of cloud credentials scoped to a tenant or a project
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: Response of list cloud credentials
      type: object
    v1S3Credentials:
      example:
        config/s3/access_key: config/s3/access_key
        config/s3/secret_key: config/s3/secret_key
      properties:
        config/s3/access_key:
          title: Access key used to connect
          type: string
        config/s3/secret_key:
          title: Secret key used to connect
          type: string
      title: S3 or S3 compatible credentials
      type: object
    v1UnstructuredCredentials:
      example:
        config/unstructured/credential_data:
          key: config/unstructured/credential_data
      properties:
        config/unstructured/credential_data:
          additionalProperties:
            type: string
          title: Credentials in key value format
          type: object
      title: Unstructured Credentials
      type: object
    IAMServiceGrantIAMBody:
      example:
        accountId: accountId
        iam:
          meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            actorType: actorType
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
        tenantId: tenantId
        projectId: projectId
      properties:
        accountId:
          title: Account UID under which user wants to add role binding
          type: string
        tenantId:
          title: Tenant UID  under which user wants to add role binding
          type: string
        projectId:
          title: Project UID under which user wants to add role binding
          type: string
        iam:
          $ref: '#/components/schemas/Specifies_the_IAM_role_binding_that_needs_to_be_added_or_granted_for_the_user_'
      title: "GrantIAMRequest to grant/add a new role binding at tenant, project or\
        \ account"
      type: object
    IAMServiceRevokeIAMBody:
      example:
        accountId: accountId
        iam:
          meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            actorType: actorType
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
        tenantId: tenantId
        projectId: projectId
      properties:
        accountId:
          title: Account UID under which user wants to delete role binding
          type: string
        tenantId:
          title: Tenant UID  under which user wants to delete role binding
          type: string
        projectId:
          title: Project UID under which user wants to delete role binding
          type: string
        iam:
          $ref: '#/components/schemas/Specifies_the_IAM_role_binding_that_needs_to_be_deleted_revoked_for_the_user_'
      title: "RevokeIAMRequest to revoke/delete a role binding at tenant, project\
        \ or account"
      type: object
    v1AccessPolicy:
      description: "Access Policy controls access to control plane resources. With\
        \ IAM, one can centrally manage permissions that control which resources users\
        \ can access."
      example:
        globalScope:
        - globalScope
        - globalScope
        namespace:
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
        project:
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
        account:
        - account
        - account
        tenant:
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
        - roleName: roleName
          resourceIds:
          - resourceIds
          - resourceIds
      properties:
        globalScope:
          items:
            type: string
          title: Global scope represents the global role names
          type: array
        account:
          items:
            type: string
          title: Account represents the account role names
          type: array
        tenant:
          items:
            $ref: '#/components/schemas/v1RoleBinding'
          title: Tenant represents the tenant level role bindings and resource IDs
          type: array
        project:
          items:
            $ref: '#/components/schemas/v1RoleBinding'
          title: Project represents the project level role bindings and resource IDS
          type: array
        namespace:
          items:
            $ref: '#/components/schemas/v1RoleBinding'
          title: Namespace represents the namespace level role bindings and resource
            IDS
          type: array
      type: object
    v1Config6:
      example:
        actorType: actorType
        actorId: actorId
        accessPolicy:
          globalScope:
          - globalScope
          - globalScope
          namespace:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          project:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          account:
          - account
          - account
          tenant:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
      properties:
        actorId:
          title: Actor ID for the associated actor
          type: string
        actorType:
          readOnly: true
          title: Actor Type gives the actor type for the concerned actor_id
          type: string
        accessPolicy:
          $ref: '#/components/schemas/v1AccessPolicy'
      title: Config represents the details of the data for IAM across different levels
      type: object
    v1GrantIAMResponse:
      example:
        message: message
      properties:
        message:
          readOnly: true
          title: Any error or success message to show for GrantIAM response
          type: string
      title: GrantIAMResponse is response for GrantIAM API
      type: object
    v1IAM:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          actorType: actorType
          actorId: actorId
          accessPolicy:
            globalScope:
            - globalScope
            - globalScope
            namespace:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            project:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            account:
            - account
            - account
            tenant:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config6'
      title: IAM returns the created IAM for given data
      type: object
    v1ListIAMResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        iam:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            actorType: actorType
            actorId: actorId
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            actorType: actorType
            actorId: actorId
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
      properties:
        iam:
          items:
            $ref: '#/components/schemas/v1IAM'
          title: the list of IAMs
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListIAMResponse is the response to the ListIAM API and contains the list
        of IAMs visible to the caller
      type: object
    v1RevokeIAMResponse:
      example:
        message: message
      properties:
        message:
          readOnly: true
          title: Any error or success message to show for GrantIAM response
          type: string
      title: GrantIAMResponse is response for GrantIAM API
      type: object
    v1RoleBinding:
      description: RoleBinding represents the tenant/project/namespace level role
        bindings and resource IDS.
      example:
        roleName: roleName
        resourceIds:
        - resourceIds
        - resourceIds
      properties:
        roleName:
          description: Role name represents the role for a tenant/project/namespace.
          type: string
        resourceIds:
          description: Resource IDs represent the IDs bounded for the given role.
          items:
            type: string
          type: array
      type: object
    StatusPhase2:
      default: PHASE_UNSPECIFIED
      description: "- PHASE_UNSPECIFIED: Invitation status unspecified\n - PENDING:\
        \ Invitation acceptance pending\n - ACCEPTED: Invitation Accepted"
      enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - ACCEPTED
      title: "Phase represents the current state of the invitation.\nThis will be\
        \ useful later, when we support resend, expire flows. Currently only pending\
        \ will be supported"
      type: string
    invitationv1Status:
      example:
        phase: null
        reason: reason
      properties:
        reason:
          description: Textual information for the current state of the invitation.
          readOnly: true
          type: string
        phase:
          $ref: '#/components/schemas/StatusPhase2'
      title: Status represents the current status of invitation
      type: object
    platforminvitationv1Config:
      example:
        accountId: accountId
        tenantId: tenantId
        userEmail: userEmail
        accessPolicy:
          globalScope:
          - globalScope
          - globalScope
          namespace:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          project:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          account:
          - account
          - account
          tenant:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
        projectId: projectId
      properties:
        userEmail:
          title: Email address of the invited user
          type: string
        accessPolicy:
          $ref: '#/components/schemas/v1AccessPolicy'
        accountId:
          title: Account UID to which the user has been invited. User can be invited
            to multiple accounts
          type: string
        tenantId:
          title: Tenant UID to which the user has been invited. User can be invited
            to multiple tenants
          type: string
        projectId:
          title: Project UID to which the user has been invited. User can be invited
            to multiple projects
          type: string
      required:
      - accessPolicy
      - userEmail
      title: Config represents the configuration of the invitation
      type: object
    v1AcceptInvitationRequest:
      properties:
        accountId:
          title: "we need to pass account_id in the body as for first time acceptance\
            \ of request, user would not have the context of account"
          type: string
      required:
      - accountId
      title: AcceptInvitationRequest is the request message to accept an invitation
      type: object
    v1AcceptInvitationResponse:
      example:
        message: message
      properties:
        message:
          readOnly: true
          title: "Information of all the accepted invitations, can be used by UI to\
            \ display count of accepted invites etc"
          type: string
      title: AcceptInvitationResponse is the response for AcceptInivitation API
      type: object
    v1CreateInvitationRequest:
      properties:
        invitation:
          $ref: '#/components/schemas/v1Invitation'
      title: CreateInvitationRequest is the request message for invitation
      type: object
    v1Invitation:
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          accountId: accountId
          tenantId: tenantId
          userEmail: userEmail
          accessPolicy:
            globalScope:
            - globalScope
            - globalScope
            namespace:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            project:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            account:
            - account
            - account
            tenant:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
          projectId: projectId
        status:
          phase: null
          reason: reason
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/platforminvitationv1Config'
        status:
          $ref: '#/components/schemas/invitationv1Status'
      title: Invitation
      type: object
    v1ListInvitationsResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        invitations:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            accountId: accountId
            tenantId: tenantId
            userEmail: userEmail
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
            projectId: projectId
          status:
            phase: null
            reason: reason
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            accountId: accountId
            tenantId: tenantId
            userEmail: userEmail
            accessPolicy:
              globalScope:
              - globalScope
              - globalScope
              namespace:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              project:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              account:
              - account
              - account
              tenant:
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
              - roleName: roleName
                resourceIds:
                - resourceIds
                - resourceIds
            projectId: projectId
          status:
            phase: null
            reason: reason
      properties:
        invitations:
          items:
            $ref: '#/components/schemas/v1Invitation'
          title: Invitations is the list of invitation
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListInvitationResponse is the response message for listing all invitations
        in an account
      type: object
    NamespacePhasePhase:
      default: PHASE_UNSPECIFIED
      description: "- PHASE_UNSPECIFIED: Must be set in the proto file; ignore.\n\
        \ - AVAILABLE: Available namespaces can be used to deploy applications, they\
        \ have \"<platform-domain>/available: true\" label\n - RESERVED: Reserved\
        \ namespaces are used by platform agents and cannot be used to deploy applications,\
        \ they have \"<platform-domain>/reserved: true\" label\n - UNAVAILABLE: Unavailable\
        \ namespaces are the ones deleted by user with active deployments or by removing\
        \ available label"
      enum:
      - PHASE_UNSPECIFIED
      - AVAILABLE
      - RESERVED
      - UNAVAILABLE
      title: Phase is the status of the namespace based on the label type
      type: string
    v1ListNamespacesResponse:
      example:
        namespaces:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            phase: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            phase: null
      properties:
        namespaces:
          items:
            $ref: '#/components/schemas/v1Namespace'
          title: list of namespaces
          type: array
      title: ListNamespacesResponse response message for the ListNamespaces API
      type: object
    v1Namespace:
      description: A managed Kubernetes namespace.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          phase: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/v1NamespaceStatus'
      type: object
    v1NamespaceStatus:
      example:
        phase: null
      properties:
        phase:
          $ref: '#/components/schemas/NamespacePhasePhase'
      title: NamespaceStatus represents the status of the namespace resource
      type: object
    ProjectServiceAssociateResourcesBody:
      description: Request for updating a project with infra resource.
      example:
        infraResource:
          credentials:
          - credentials
          - credentials
          templates:
          - templates
          - templates
          backupLocations:
          - backupLocations
          - backupLocations
          clusters:
          - clusters
          - clusters
          namespaces:
          - namespaces
          - namespaces
      properties:
        infraResource:
          $ref: '#/components/schemas/v1Resources'
      type: object
    ProjectServiceCreateProjectBody:
      description: Request to create a project.
      example:
        project:
          meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            infraResources:
              credentials:
              - credentials
              - credentials
              templates:
              - templates
              - templates
              backupLocations:
              - backupLocations
              - backupLocations
              clusters:
              - clusters
              - clusters
              namespaces:
              - namespaces
              - namespaces
            applicationsResources:
              pdsResources:
                deployments:
                - deployments
                - deployments
                restores:
                - restores
                - restores
                backups:
                - backups
                - backups
          status:
            phase: null
            reason: reason
      properties:
        project:
          $ref: '#/components/schemas/v1Project'
      type: object
    ProjectServiceDisassociateResourcesBody:
      description: Request to disassociate infra resource from the project configuration.
      example:
        infraResource:
          credentials:
          - credentials
          - credentials
          templates:
          - templates
          - templates
          backupLocations:
          - backupLocations
          - backupLocations
          clusters:
          - clusters
          - clusters
          namespaces:
          - namespaces
          - namespaces
      properties:
        infraResource:
          $ref: '#/components/schemas/v1Resources'
      type: object
    projectv1Status:
      description: Status represents the current state of the project.
      example:
        phase: null
        reason: reason
      properties:
        reason:
          description: Textual information for the current state of the project.
          type: string
        phase:
          $ref: '#/components/schemas/v1PhaseType'
      type: object
    v1ApplicationResourceType:
      default: TYPE_UNSPECIFIED
      description: "Type of the resource can be associated to the project.\n\n - TYPE_UNSPECIFIED:\
        \ Unspecified, do not use.\n - PDS_DEPLOYMENT: List of supported PDS application\
        \ resources.\nPDS application resource of type deployment.\n - PDS_BACKUP:\
        \ PDS application resource of type backup.\n - PDS_RESTORE: PDS application\
        \ resource of type restore.\n - BAAS_BACKUP: List of supported BAAS application\
        \ resources.\nBAAS application resource of type backup."
      enum:
      - TYPE_UNSPECIFIED
      - PDS_DEPLOYMENT
      - PDS_BACKUP
      - PDS_RESTORE
      - BAAS_BACKUP
      type: string
    v1ApplicationResources:
      description: ApplicationsResources clubs applications and their generated resources.
      example:
        pdsResources:
          deployments:
          - deployments
          - deployments
          restores:
          - restores
          - restores
          backups:
          - backups
          - backups
      properties:
        pdsResources:
          $ref: '#/components/schemas/v1PDSResources'
      type: object
    v1Config7:
      description: Configuration represents the associated resource details for project.
      example:
        infraResources:
          credentials:
          - credentials
          - credentials
          templates:
          - templates
          - templates
          backupLocations:
          - backupLocations
          - backupLocations
          clusters:
          - clusters
          - clusters
          namespaces:
          - namespaces
          - namespaces
        applicationsResources:
          pdsResources:
            deployments:
            - deployments
            - deployments
            restores:
            - restores
            - restores
            backups:
            - backups
            - backups
      properties:
        infraResources:
          $ref: '#/components/schemas/v1Resources'
        applicationsResources:
          $ref: '#/components/schemas/v1ApplicationResources'
      type: object
    v1Filter:
      description: "Filter clubs the infra and application resource details, to filter\
        \ the requested list of projects."
      properties:
        appResource:
          $ref: '#/components/schemas/v1ApplicationResourceType'
        infraResource:
          $ref: '#/components/schemas/v1InfraResourceType'
        resourceId:
          description: ID of the resource for which projects to be listed.
          type: string
      type: object
    v1InfraResourceType:
      default: TYPE_UNSPECIFIED
      description: "Type of the resource.\n\n - TYPE_UNSPECIFIED: Unspecified, do\
        \ not use.\n - ACCOUNT: Currently supported infra resources.\nInfra resource\
        \ of type account.\n - TENANT: Infra resource of type tenant.\n - PROJECT:\
        \ Infra resource of type projects.\n - TARGET_CLUSTER: Infra resource target\
        \ cluster.\n - NAMESPACE: Infra resource of type namespace.\n - CREDENTIAL:\
        \ Infra resource of type credential.\n - BACKUP_LOCATION: Infra resource of\
        \ type backup location."
      enum:
      - TYPE_UNSPECIFIED
      - ACCOUNT
      - TENANT
      - PROJECT
      - TARGET_CLUSTER
      - NAMESPACE
      - CREDENTIAL
      - BACKUP_LOCATION
      type: string
    v1ListProjectsResponse:
      description: |-
        ListProjectsResponse is the response message to the ListProjects API and contains
        the list of projects visible to the caller.
      example:
        projects:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            infraResources:
              credentials:
              - credentials
              - credentials
              templates:
              - templates
              - templates
              backupLocations:
              - backupLocations
              - backupLocations
              clusters:
              - clusters
              - clusters
              namespaces:
              - namespaces
              - namespaces
            applicationsResources:
              pdsResources:
                deployments:
                - deployments
                - deployments
                restores:
                - restores
                - restores
                backups:
                - backups
                - backups
          status:
            phase: null
            reason: reason
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            infraResources:
              credentials:
              - credentials
              - credentials
              templates:
              - templates
              - templates
              backupLocations:
              - backupLocations
              - backupLocations
              clusters:
              - clusters
              - clusters
              namespaces:
              - namespaces
              - namespaces
            applicationsResources:
              pdsResources:
                deployments:
                - deployments
                - deployments
                restores:
                - restores
                - restores
                backups:
                - backups
                - backups
          status:
            phase: null
            reason: reason
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        projects:
          description: Requested projects.
          items:
            $ref: '#/components/schemas/v1Project'
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1PDSResources:
      description: PDSResource clubs resources generated by pds application.
      example:
        deployments:
        - deployments
        - deployments
        restores:
        - restores
        - restores
        backups:
        - backups
        - backups
      properties:
        deployments:
          description: Resource ids of deployments.
          items:
            type: string
          type: array
        backups:
          description: Resource ids of backups.
          items:
            type: string
          type: array
        restores:
          description: Resource ids of restores.
          items:
            type: string
          type: array
      type: object
    v1PhaseType:
      default: TYPE_UNSPECIFIED
      description: "Type of phase the project is in currently should be one of the\
        \ below.\n\n - TYPE_UNSPECIFIED: Unspecified, do not use.\n - ACTIVE: The\
        \ project is in use and active.\n - DELETE_PENDING: Deletion of project has\
        \ not started.\n - DELETE_IN_PROGRESS: Deletion of the project is scheduled\
        \ and in progress."
      enum:
      - TYPE_UNSPECIFIED
      - ACTIVE
      - DELETE_PENDING
      - DELETE_IN_PROGRESS
      type: string
    v1Project:
      description: Project is a logical collection of objects and/or services that
        users can access.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          infraResources:
            credentials:
            - credentials
            - credentials
            templates:
            - templates
            - templates
            backupLocations:
            - backupLocations
            - backupLocations
            clusters:
            - clusters
            - clusters
            namespaces:
            - namespaces
            - namespaces
          applicationsResources:
            pdsResources:
              deployments:
              - deployments
              - deployments
              restores:
              - restores
              - restores
              backups:
              - backups
              - backups
        status:
          phase: null
          reason: reason
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config7'
        status:
          $ref: '#/components/schemas/projectv1Status'
      type: object
    v1Resources:
      description: "Infra resource are platform managed resources, used by associated\
        \ applications."
      example:
        credentials:
        - credentials
        - credentials
        templates:
        - templates
        - templates
        backupLocations:
        - backupLocations
        - backupLocations
        clusters:
        - clusters
        - clusters
        namespaces:
        - namespaces
        - namespaces
      properties:
        clusters:
          description: Clusters represents the target k8s clusters.
          items:
            type: string
          type: array
        namespaces:
          description: Namespaces created in k8s cluster to provide the logical isolation.
          items:
            type: string
          type: array
        credentials:
          description: Credentials required to connect to a backup target.
          items:
            type: string
          type: array
        backupLocations:
          description: Backup locations where backups can be placed.
          items:
            type: string
          type: array
        templates:
          description: Templates can be used by applications to manage its resources.
          items:
            type: string
          type: array
      type: object
    ServiceAccountServiceGetAccessTokenBody:
      description: Request to fetch the access token of a service account.
      example:
        clientId: clientId
        clientSecret: clientSecret
      properties:
        clientId:
          description: Unique identifier generated at the time of service account
            creation.
          type: string
        clientSecret:
          description: Secret key generated at the time of service account creation.
          type: string
      type: object
    serviceaccountv1Status:
      description: Status of the service account.
      example:
        lastSecretUpdateTime: 2000-01-23T04:56:07.000+00:00
        secretGenerationCount: 0
      properties:
        secretGenerationCount:
          description: Represents how many times the service account secret has been
            rotated.
          format: int32
          readOnly: true
          type: integer
        lastSecretUpdateTime:
          description: When last time the secrets of the service account has been
            updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    v1AccessToken:
      description: The response contains access token for the service account.
      example:
        token: token
      properties:
        token:
          description: Access token for a service account.
          type: string
      type: object
    v1Config8:
      description: Config clubs attributes represents in detail view for service account.
      example:
        clientId: clientId
        clientSecret: clientSecret
        disabled: true
      properties:
        clientId:
          description: Client id.
          readOnly: true
          type: string
        clientSecret:
          description: Client secret.
          readOnly: true
          type: string
        disabled:
          description: "If sets to true then service account will be inactive, false\
            \ by default."
          type: boolean
      type: object
    v1ListServiceAccountResponse:
      description: Response of requested list of service accounts.
      example:
        serviceAccounts:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            clientId: clientId
            clientSecret: clientSecret
            disabled: true
          status:
            lastSecretUpdateTime: 2000-01-23T04:56:07.000+00:00
            secretGenerationCount: 0
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config:
            clientId: clientId
            clientSecret: clientSecret
            disabled: true
          status:
            lastSecretUpdateTime: 2000-01-23T04:56:07.000+00:00
            secretGenerationCount: 0
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        serviceAccounts:
          items:
            $ref: '#/components/schemas/v1ServiceAccount'
          title: "Requested list of service accounts.\n(-- api-linter: core::0132::response-unknown-fields=disabled\n\
            \    aip.dev/not-precedent: We really need this field because reasons.\
            \ --)"
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      type: object
    v1ServiceAccount:
      description: Service account represents a group of attributes using which a
        service can consume platform apis.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          clientId: clientId
          clientSecret: clientSecret
          disabled: true
        status:
          lastSecretUpdateTime: 2000-01-23T04:56:07.000+00:00
          secretGenerationCount: 0
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/v1Config8'
        status:
          $ref: '#/components/schemas/serviceaccountv1Status'
      type: object
    platformTargetClusterv1Config:
      title: Desired configuration of the Target Cluster
      type: object
    platformTargetClusterv1Status:
      example:
        phase: null
        metadata:
          kubeServerVersion: kubeServerVersion
          kubePlatform: null
        platformAgent: null
        lastStatusUpdateTime: 2000-01-23T04:56:07.000+00:00
        applications:
          key: null
      properties:
        metadata:
          $ref: '#/components/schemas/v1Metadata'
        phase:
          $ref: '#/components/schemas/v1TargetClusterPhasePhase'
        lastStatusUpdateTime:
          format: date-time
          title: Timestamp of cluster's last status update to control plane
          type: string
        platformAgent:
          $ref: '#/components/schemas/v1ApplicationPhasePhase'
        applications:
          additionalProperties:
            $ref: '#/components/schemas/v1ApplicationPhasePhase'
          title: "Status of applications running in the target cluster eg: BAAS, PDS,\
            \ MPXE"
          type: object
      title: Status of the Target Cluster
      type: object
    v1ApplicationPhasePhase:
      default: PHASE_UNSPECIFIED
      description: "- PHASE_UNSPECIFIED: Must be set in the proto file; ignore.\n\
        \ - PENDING: Application yet to be installed\n - DEPLOYING: Application deployment\
        \ on the target cluster in progress\n - SUCCEEDED: Installed successfully\n\
        \ - FAILED: Application failed to install\n - DELETING: Application is being\
        \ deleted"
      enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - DEPLOYING
      - SUCCEEDED
      - FAILED
      - DELETING
      title: AppStatus determines status of an application
      type: string
    v1KubePlatformType:
      default: TYPE_UNSPECIFIED
      description: "- TYPE_UNSPECIFIED: Unsepecified\n - AWS: Aws platform\n - AZURE:\
        \ Azure platform\n - OCP: Openshift cloud platform\n - GCP: Google cloud platform\n\
        \ - VSPHERE: VMware vSphere\n - UNKNOWN: Unknown platform"
      enum:
      - TYPE_UNSPECIFIED
      - AWS
      - AZURE
      - OCP
      - GCP
      - VSPHERE
      - UNKNOWN
      title: kubeplatform values
      type: string
    v1ListTargetClustersResponse:
      example:
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
        clusters:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config: "{}"
          status:
            phase: null
            metadata:
              kubeServerVersion: kubeServerVersion
              kubePlatform: null
            platformAgent: null
            lastStatusUpdateTime: 2000-01-23T04:56:07.000+00:00
            applications:
              key: null
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          config: "{}"
          status:
            phase: null
            metadata:
              kubeServerVersion: kubeServerVersion
              kubePlatform: null
            platformAgent: null
            lastStatusUpdateTime: 2000-01-23T04:56:07.000+00:00
            applications:
              key: null
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/v1TargetCluster'
          title: "(-- api-linter: core::0132::response-unknown-fields=disabled\n \
            \   aip.dev/not-precedent: We really need this field because cluster details\
            \ are required in the response --)\nThe list of TargetClusters visible\
            \ to the caller"
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: ListTargetClusterResponse is the response message to the List TargetCluster
        API
      type: object
    v1Metadata:
      example:
        kubeServerVersion: kubeServerVersion
        kubePlatform: null
      properties:
        kubeServerVersion:
          title: Version of kubernetes api server
          type: string
        kubePlatform:
          $ref: '#/components/schemas/v1KubePlatformType'
      title: TargetClusterMetadata represents the metadata of a cluster
      type: object
    v1TargetCluster:
      description: TargetCluster is a high level entity that represents one large
        company(e.g. a Pure).
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config: "{}"
        status:
          phase: null
          metadata:
            kubeServerVersion: kubeServerVersion
            kubePlatform: null
          platformAgent: null
          lastStatusUpdateTime: 2000-01-23T04:56:07.000+00:00
          applications:
            key: null
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          title: Desired configuration of the Target Cluster
          type: object
        status:
          $ref: '#/components/schemas/platformTargetClusterv1Status'
      type: object
    v1TargetClusterPhasePhase:
      default: PHASE_UNSPECIFIED
      description: "- PHASE_UNSPECIFIED: Must be set in the proto file; ignore.\n\
        \ - CONNECTED: Represents target cluster is connected to control plane\n -\
        \ DISCONNECTED: Represents target cluster is disconnected from control plane\
        \ if\nheartbeat is not received for three consecutive cycles\n - FAILED: Represents\
        \ target cluster failed to setup agent\n - DELETING: Represents target cluster\
        \ deletion in progress"
      enum:
      - PHASE_UNSPECIFIED
      - CONNECTED
      - DISCONNECTED
      - FAILED
      - DELETING
      title: Supported values of phase of target cluster
      type: string
    TargetClusterRegistrationManifestServiceGenerateTargetClusterRegistrationManifestBody:
      example:
        clusterName: clusterName
        config:
          proxyConfig:
            password: password
            caCert: caCert
            httpUrl: httpUrl
            noProxy: noProxy
            httpsUrl: httpsUrl
            username: username
          customImageRegistryConfig:
            registryUrl: registryUrl
            registryNamespace: registryNamespace
            password: password
            caCert: caCert
            username: username
      properties:
        clusterName:
          title: cluster_name which the user wants to use
          type: string
        config:
          $ref: '#/components/schemas/v1Config9'
      title: GetTargetClusterRegistrationManifestRequest is the request message to
        the GetTargetClusterRegistrationManifest API
      type: object
    v1Config9:
      example:
        proxyConfig:
          password: password
          caCert: caCert
          httpUrl: httpUrl
          noProxy: noProxy
          httpsUrl: httpsUrl
          username: username
        customImageRegistryConfig:
          registryUrl: registryUrl
          registryNamespace: registryNamespace
          password: password
          caCert: caCert
          username: username
      properties:
        customImageRegistryConfig:
          $ref: '#/components/schemas/v1CustomImageRegistryConfig'
        proxyConfig:
          $ref: '#/components/schemas/v1ProxyConfig'
      title: Configuration of the target cluster registration manifest
      type: object
    v1CustomImageRegistryConfig:
      example:
        registryUrl: registryUrl
        registryNamespace: registryNamespace
        password: password
        caCert: caCert
        username: username
      properties:
        registryUrl:
          title: "registry url/domain, e.g. - in org.example.com/namespace/sub-namespace/repo:tag,\
            \ here `org.example.com` is\nthe registry url"
          type: string
        registryNamespace:
          title: "registry namespace, e.g. - in org.example.com/namespace/sub-namespace/repo:tag,\
            \ here `namespace/sub-namespace` is\nthe registry namespace"
          type: string
        username:
          title: username for authenticating to a private registry
          type: string
        password:
          title: password for authenticating to a private registry
          type: string
        caCert:
          title: ca cert of the registry server
          type: string
      title: CustomImageRegistryConfig holds image registry credential configs
      type: object
    v1ProxyConfig:
      example:
        password: password
        caCert: caCert
        httpUrl: httpUrl
        noProxy: noProxy
        httpsUrl: httpsUrl
        username: username
      properties:
        httpUrl:
          title: "http proxy url with port, e.g. - http://192.168.0.1:1234"
          type: string
        httpsUrl:
          title: "https proxy url with port, e.g. - https://192.168.0.1:4567"
          type: string
        username:
          title: username for authenticating to the proxy server
          type: string
        password:
          title: password for authenticating to the proxy server
          type: string
        noProxy:
          title: "comma separated no proxy urls list, e.g. - 127.0.0.1,localhost,.svc,192.168.0.1/16,github.com,KUBERNETES_SERVICE_HOST"
          type: string
        caCert:
          title: ca cert of the proxy server
          type: string
      title: ProxyConfig holds proxy configs
      type: object
    v1TargetClusterRegistrationManifest:
      example:
        manifest: manifest
      properties:
        manifest:
          title: manifest contains the yaml string of the registration manifest
          type: string
      title: TargetClusterRegistrationManifest is the response message of the GetTargetClusterRegistrationManifest
        API
      type: object
    tenantv1Status:
      description: Status represents the current state of the tenant.
      example:
        phase: null
        reason: reason
      properties:
        reason:
          description: Textual information for the current state of the tenant.
          type: string
        phase:
          $ref: '#/components/schemas/v1PhaseType1'
      type: object
    v1ListTenantsResponse:
      example:
        tenants:
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            phase: null
            reason: reason
        - meta:
            uid: uid
            parentReference:
              uid: uid
              type: type
              version: version
            createTime: 2000-01-23T04:56:07.000+00:00
            resourceVersion: resourceVersion
            name: name
            description: description
            annotations:
              key: annotations
            updateTime: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          status:
            phase: null
            reason: reason
        pagination:
          totalRecords: totalRecords
          nextPage: nextPage
          totalPages: totalPages
          pageSize: pageSize
          prevPage: prevPage
          currentPage: currentPage
      properties:
        tenants:
          items:
            $ref: '#/components/schemas/v1Tenant'
          title: list of tenant response
          type: array
        pagination:
          $ref: '#/components/schemas/v1PageBasedPaginationResponse'
      title: |-
        ListTenantsResponse is the response message to the ListTenants API and contains
        the list of tenants visible to the caller
      type: object
    v1PhaseType1:
      default: TYPE_UNSPECIFIED
      description: "Type of phase the tenant is in currently should be one of the\
        \ below.\n\n - TYPE_UNSPECIFIED: Unspecified, do not use.\n - ACTIVE: The\
        \ tenant is in use and active.\n - DELETE_PENDING: Deletion of tenant has\
        \ not started.\n - DELETE_IN_PROGRESS: Deletion of the tenant is scheduled\
        \ and in progress."
      enum:
      - TYPE_UNSPECIFIED
      - ACTIVE
      - DELETE_PENDING
      - DELETE_IN_PROGRESS
      type: string
    v1Tenant:
      description: |-
        Tenant is an organizational subunit of an account that represents an org or a unit of a large company.
        A tenant comprises multiple projects.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        status:
          phase: null
          reason: reason
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        status:
          $ref: '#/components/schemas/tenantv1Status'
      type: object
    v1Application:
      example:
        name: name
        version: version
      properties:
        name:
          title: name of the application
          type: string
        version:
          title: Version of application
          type: string
      title: Application is a high level entity for the application resource
      type: object
    v1ListAvailableApplicationsResponse:
      example:
        applications:
        - name: name
          version: version
        - name: name
          version: version
      properties:
        applications:
          items:
            $ref: '#/components/schemas/v1Application'
          title: "list of applications visible to the caller\n(-- api-linter: core::0132::response-unknown-fields=disabled\n\
            \    aip.dev/not-precedent: We need this field to see all\n    the applications\
            \ available to install for that tenant id. --)"
          type: array
      title: ListAvailableApplicationsResponse is the request to the ListAvailableApplications
        API
      type: object
    v1Account1:
      example:
        name: name
        dnsName: dnsName
        id: id
      properties:
        id:
          title: Id of an account
          type: string
        dnsName:
          title: Account DNS name
          type: string
        name:
          title: Name of Account
          type: string
      title: Account details in WhoAmI Respose
      type: object
    v1WhoAmIResponse:
      example:
        id: id
        accounts:
        - name: name
          dnsName: dnsName
          id: id
        - name: name
          dnsName: dnsName
          id: id
        email: email
      properties:
        id:
          title: id of current actor
          type: string
        email:
          title: email of current actor
          type: string
        accounts:
          items:
            $ref: '#/components/schemas/v1Account1'
          title: accounts of current actor
          type: array
      title: WhoAmI response return accounts for current actor
      type: object
    Metadata_of_the_backup_configuration_:
      description: Metadata of the backup configuration.
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the backup configuration.
      type: object
    Desired_backup_configuration_:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_of_the_backup_configuration_'
        config:
          $ref: '#/components/schemas/v1Config'
        status:
          $ref: '#/components/schemas/backupconfigv1Status'
      title: Desired backup configuration.
      type: object
    Metadata_of_the_deployment_resource:
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the deployment resource
      type: object
    Config_of_the_deployment_for_which_config_update_is_requested:
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/Config_of_the_deployment_for_which_config_update_is_requested'
        status:
          $ref: '#/components/schemas/pdsdeploymentconfigupdatev1Status'
      title: Config of the deployment for which config update is requested
      type: object
    Metadata_of_the_account_:
      description: Metadata of the account.
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the account.
      type: object
    account__for_which_name_needs_to_be_updated:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_of_the_account_'
        config:
          $ref: '#/components/schemas/v1Config4'
      title: account  for which name needs to be updated
      type: object
    Metadata_for_IAM:
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata for IAM
      type: object
    IAM_to_be_updated:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_for_IAM'
        config:
          $ref: '#/components/schemas/v1Config6'
      title: IAM to be updated
      type: object
    Metadata_of_the_target_cluster_Resource_Meta_:
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the target cluster(Resource Meta)
      type: object
    Target_cluster_details:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_of_the_target_cluster_Resource_Meta_'
        config:
          title: Desired configuration of the Target Cluster
          type: object
        status:
          $ref: '#/components/schemas/platformTargetClusterv1Status'
      title: Target cluster details
      type: object
    Metadata_of_the_tenant_:
      description: Metadata of the tenant.
      properties:
        name:
          description: Name of the resource.
          type: string
        description:
          description: Description of the resource.
          type: string
        resourceVersion:
          description: |-
            A string that identifies the version of this object that can be used by
            clients to determine when objects have changed. This value must be passed
            unmodified back to the server by the client.
          type: string
        createTime:
          description: Creation time of the object.
          format: date-time
          readOnly: true
          type: string
        updateTime:
          description: Update time of the object.
          format: date-time
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to the object.
          type: object
        annotations:
          additionalProperties:
            type: string
          description: Annotations for the object.
          type: object
        parentReference:
          $ref: '#/components/schemas/v1Reference'
      title: Metadata of the tenant.
      type: object
    tenant_which__needs_to_be_updated:
      properties:
        meta:
          $ref: '#/components/schemas/Metadata_of_the_tenant_'
        status:
          $ref: '#/components/schemas/tenantv1Status'
      title: tenant which  needs to be updated
      type: object
    Desired_configuration_of_the_IAM:
      example:
        actorType: actorType
        accessPolicy:
          globalScope:
          - globalScope
          - globalScope
          namespace:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          project:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          account:
          - account
          - account
          tenant:
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
          - roleName: roleName
            resourceIds:
            - resourceIds
            - resourceIds
      properties:
        actorType:
          readOnly: true
          title: Actor Type gives the actor type for the concerned actor_id
          type: string
        accessPolicy:
          $ref: '#/components/schemas/v1AccessPolicy'
      title: Desired configuration of the IAM
      type: object
    Specifies_the_IAM_role_binding_that_needs_to_be_added_or_granted_for_the_user_:
      description: Specifies the IAM role binding that needs to be added or granted
        for the user.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          actorType: actorType
          accessPolicy:
            globalScope:
            - globalScope
            - globalScope
            namespace:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            project:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            account:
            - account
            - account
            tenant:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/Desired_configuration_of_the_IAM'
      title: Specifies the IAM role binding that needs to be added or granted for
        the user.
      type: object
    Specifies_the_IAM_role_binding_that_needs_to_be_deleted_revoked_for_the_user_:
      description: Specifies the IAM role binding that needs to be deleted/revoked
        for the user.
      example:
        meta:
          uid: uid
          parentReference:
            uid: uid
            type: type
            version: version
          createTime: 2000-01-23T04:56:07.000+00:00
          resourceVersion: resourceVersion
          name: name
          description: description
          annotations:
            key: annotations
          updateTime: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        config:
          actorType: actorType
          accessPolicy:
            globalScope:
            - globalScope
            - globalScope
            namespace:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            project:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            account:
            - account
            - account
            tenant:
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
            - roleName: roleName
              resourceIds:
              - resourceIds
              - resourceIds
      properties:
        meta:
          $ref: '#/components/schemas/v1Meta'
        config:
          $ref: '#/components/schemas/Desired_configuration_of_the_IAM'
      title: Specifies the IAM role binding that needs to be deleted/revoked for the
        user.
      type: object
